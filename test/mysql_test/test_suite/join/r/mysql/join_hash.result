drop table if exists t1,t2,t3,t4,t5,t6,t7,t8;
create table t1(a int, b int, c varchar(20), d decimal(20, 10));
create table t2(a int, b varchar(20), c decimal(20,10));
create table t3(a int, b int, c int);
create table t4(a int, b int, c varchar(20));
create table t5(a int, b varchar(20), c varchar(25) collate 'binary');
create table t6(a time, b datetime, c datetime(6), d date);
create table t7(a bit(10), b binary(10), c char(20), d double);
create table t8(a bit(20), b datetime, c datetime(6), d date);
insert/*insert trace*/ into t1 values(NULL,NULL,NULL,NULL),(1, 1, "111", 1.11),(2, 2, "222", 2.22),(3,3,"333",3.33),(4,4,"444",4.44),(5, 5, "5.550", NULL)
,(1, '1', '1',1), (1, '2','2', 2), (2, '2.0','2.0', 2.0), (3, '3','3', 3.00001), (1224,2,"111",3.3), (123, 3,"2001-01-01", 4.4);
insert/*insert trace*/ into t2 values(NULL,NULL,NULL),(1, "222", 3.33),(2,"222",3.33),(2,"333",2.22),(3,"3333",1.11), (5, "555", 5.55), (6, "6666", 5.5)
,(1, '1', 1), (1, '2', 2), (2, '2.00', 2.00001), (3, '3.0', 3.00001), (4, "A", 4.33), (5, "B", 5), (6, "AB", 6);
insert/*insert trace*/ into t3 values(1, 2, 3), (2, 2, 3), (3, 2, 4), (1, 3, 3), (4, 3, 2), (4, 2, 1),(5, NULL, NULL);
insert/*insert trace*/ into t4 values(1, 1, "222"),(1, 1, "111"), (1, 2, "222"), (2, 2, "333"), (2, 3, "333"), (1, 3, "222"), (5, NULL, NULL);
insert/*insert trace*/ into t5 values (1, "2011-01-01 01:01:01", "2011-01-01"),(2, "2011-01-01 01:01:02", "2011-01-02"),
(3, "2001-01-01 01:01:01", "2001-01-01"), (4, "1223", "12233"), (5, "12:01:01", "00:12:24");
insert/*insert trace*/ into t6 values ("12:01:01", "2011-01-01 01:01:01", "2011-01-01 01:01:01", "2011-01-01"), (123, 20010101, 20010102, 20010101),
(1224, 20110102010101, 20110102010101, 20110102), ("12:01:01", "2011-01-01 01:01:01", "2011-01-01 01:01:01", "2011-01-02"),
("1224", "2011-01-02 01:01:01", "2011-01-02 01:01:01", "2011-01-10") ;
insert/*insert trace*/ into t7 values(65, '222', '333', 5), (65, '444', '5.550', 1), (66, '3.0', '555', 3.00001), (66, '2', 'B', 2), (67, 'A', '1', 1);
insert/*insert trace*/ into t8 values(65, "2011-01-01 01:01:01", "2011-01-01 01:01:01", "2011-01-01"), (65, "2011-01-01 01:01:02", "2011-01-02 01:01:01", "2001-01-01"),
(66, "2001-01-01 01:01:01", "2011-01-02 01:01:02", "2001-01-01"), (66, "2001-01-01 01:01:02", "2016-01-01 01:01:01", "2016-01-01"),
(67, "2001-01-10 01:01:01", "2001-01-10 01:01:01", "2001-01-10"), (68, "2001-10-01 01:01:", "2001-01-01 01:01:02", "2011-01-01");
explain basic select * from t1;
Query Plan
====================
|ID|OPERATOR  |NAME|
--------------------
|0 |TABLE SCAN|t1  |
====================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

select * from t1;
a	b	c	d
1	1	1	1.0000000000
1	1	111	1.1100000000
1	2	2	2.0000000000
1224	2	111	3.3000000000
123	3	2001-01-01	4.4000000000
2	2	2.0	2.0000000000
2	2	222	2.2200000000
3	3	3	3.0000100000
3	3	333	3.3300000000
4	4	444	4.4400000000
5	5	5.550	NULL
NULL	NULL	NULL	NULL
explain basic select * from t2;
Query Plan
====================
|ID|OPERATOR  |NAME|
--------------------
|0 |TABLE SCAN|t2  |
====================

Outputs & filters: 
-------------------------------------
  0 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select * from t2;
a	b	c
1	1	1.0000000000
1	2	2.0000000000
1	222	3.3300000000
2	2.00	2.0000100000
2	222	3.3300000000
2	333	2.2200000000
3	3.0	3.0000100000
3	3333	1.1100000000
4	A	4.3300000000
5	555	5.5500000000
5	B	5.0000000000
6	6666	5.5000000000
6	AB	6.0000000000
NULL	NULL	NULL

#inner join
explain basic select /*+use_hash(t1,t2)*/* from t1,t2 where t1.c = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t1  |
|3 |  TABLE SCAN|t2  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.c = t2.b]), other_conds(nil)
  2 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.b], [t2.a], [t2.c]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1,t2 where t1.c = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	222	3.3300000000
2	2	222	2.2200000000	2	222	3.3300000000
3	3	333	3.3300000000	2	333	2.2200000000
explain basic select /*+use_merge(t1,t2)*/* from t1,t2 where t1.c = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t1  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t2  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.c = t2.b]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.c, ASC])
  3 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.b, ASC])
  5 - output([t2.b], [t2.a], [t2.c]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1,t2 where t1.c = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	222	3.3300000000
2	2	222	2.2200000000	2	222	3.3300000000
3	3	333	3.3300000000	2	333	2.2200000000
explain basic select /*+use_nl(t1,t2)*/* from t1,t2 where t1.c = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t1  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([t1.c = t2.b]), nl_params_(nil)
  2 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.b], [t2.a], [t2.c]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1,t2 where t1.c = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	222	3.3300000000
2	2	222	2.2200000000	2	222	3.3300000000
3	3	333	3.3300000000	2	333	2.2200000000

explain basic select /*+use_hash(t1,t2)*/* from t1,t2 where t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t1  |
|3 |  TABLE SCAN|t2  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1,t2 where t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
explain basic select /*+use_merge(t1,t2)*/* from t1,t2 where t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t1  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t2  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.d, ASC])
  3 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  5 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1,t2 where t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
explain basic select /*+use_nl(t1,t2)*/* from t1,t2 where t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t1  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([t1.d = t2.c]), nl_params_(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1,t2 where t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000

#join_condition, type
# int && int
explain basic select /*+use_hash(t1,t2)*/* from t1,t2 where t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t1  |
|3 |  TABLE SCAN|t2  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1,t2 where t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	1	111	1.1100000000	1	1	1.0000000000
1	1	111	1.1100000000	1	2	2.0000000000
1	1	111	1.1100000000	1	222	3.3300000000
1	2	2	2.0000000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	1	222	3.3300000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	2	2.00	2.0000100000
2	2	222	2.2200000000	2	222	3.3300000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
3	3	333	3.3300000000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3333	1.1100000000
4	4	444	4.4400000000	4	A	4.3300000000
5	5	5.550	NULL	5	555	5.5500000000
5	5	5.550	NULL	5	B	5.0000000000
explain basic select /*+use_merge(t1,t2)*/* from t1,t2 where t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t1  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t2  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.b, ASC], [t2.c, ASC]), prefix_pos(1)
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.a, ASC])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.a, ASC])
  5 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1,t2 where t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	1	111	1.1100000000	1	1	1.0000000000
1	1	111	1.1100000000	1	2	2.0000000000
1	1	111	1.1100000000	1	222	3.3300000000
1	2	2	2.0000000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	1	222	3.3300000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	2	2.00	2.0000100000
2	2	222	2.2200000000	2	222	3.3300000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
3	3	333	3.3300000000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3333	1.1100000000
4	4	444	4.4400000000	4	A	4.3300000000
5	5	5.550	NULL	5	555	5.5500000000
5	5	5.550	NULL	5	B	5.0000000000
explain basic select /*+use_nl(t1,t2)*/* from t1,t2 where t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t1  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([t1.a = t2.a]), nl_params_(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1,t2 where t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	1	111	1.1100000000	1	1	1.0000000000
1	1	111	1.1100000000	1	2	2.0000000000
1	1	111	1.1100000000	1	222	3.3300000000
1	2	2	2.0000000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	1	222	3.3300000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	2	2.00	2.0000100000
2	2	222	2.2200000000	2	222	3.3300000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
3	3	333	3.3300000000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3333	1.1100000000
4	4	444	4.4400000000	4	A	4.3300000000
5	5	5.550	NULL	5	555	5.5500000000
5	5	5.550	NULL	5	B	5.0000000000

explain basic select /*+use_hash(t1,t2,t3)*/* from t1,t2,t3 where t1.a = t2.a and t2.a = t3.a and t3.b > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | HASH JOIN   |    |
|2 |  HASH JOIN  |    |
|3 |   TABLE SCAN|t3  |
|4 |   TABLE SCAN|t2  |
|5 |  TABLE SCAN |t1  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t3.a], [t3.b], [t3.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.b, ASC], [t2.c, ASC], [t3.b, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t3.a], [t3.b], [t3.c]), filter(nil), 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  2 - output([t2.a], [t2.b], [t2.c], [t3.a], [t3.b], [t3.c]), filter(nil), 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  3 - output([t3.a], [t3.b], [t3.c]), filter([t3.b > 1]), 
      access([t3.a], [t3.b], [t3.c]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)
  5 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

select /*+use_hash(t1,t2,t3)*/* from t1,t2,t3 where t1.a = t2.a and t2.a = t3.a and t3.b > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b;
a	b	c	d	a	b	c	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000	1	2	3
1	1	1	1.0000000000	1	1	1.0000000000	1	3	3
1	1	1	1.0000000000	1	2	2.0000000000	1	2	3
1	1	1	1.0000000000	1	2	2.0000000000	1	3	3
1	1	1	1.0000000000	1	222	3.3300000000	1	2	3
1	1	1	1.0000000000	1	222	3.3300000000	1	3	3
1	1	111	1.1100000000	1	1	1.0000000000	1	2	3
1	1	111	1.1100000000	1	1	1.0000000000	1	3	3
1	1	111	1.1100000000	1	2	2.0000000000	1	2	3
1	1	111	1.1100000000	1	2	2.0000000000	1	3	3
1	1	111	1.1100000000	1	222	3.3300000000	1	2	3
1	1	111	1.1100000000	1	222	3.3300000000	1	3	3
1	2	2	2.0000000000	1	1	1.0000000000	1	2	3
1	2	2	2.0000000000	1	1	1.0000000000	1	3	3
1	2	2	2.0000000000	1	2	2.0000000000	1	2	3
1	2	2	2.0000000000	1	2	2.0000000000	1	3	3
1	2	2	2.0000000000	1	222	3.3300000000	1	2	3
1	2	2	2.0000000000	1	222	3.3300000000	1	3	3
2	2	2.0	2.0000000000	2	2.00	2.0000100000	2	2	3
2	2	2.0	2.0000000000	2	222	3.3300000000	2	2	3
2	2	2.0	2.0000000000	2	333	2.2200000000	2	2	3
2	2	222	2.2200000000	2	2.00	2.0000100000	2	2	3
2	2	222	2.2200000000	2	222	3.3300000000	2	2	3
2	2	222	2.2200000000	2	333	2.2200000000	2	2	3
3	3	3	3.0000100000	3	3.0	3.0000100000	3	2	4
3	3	3	3.0000100000	3	3333	1.1100000000	3	2	4
3	3	333	3.3300000000	3	3.0	3.0000100000	3	2	4
3	3	333	3.3300000000	3	3333	1.1100000000	3	2	4
4	4	444	4.4400000000	4	A	4.3300000000	4	2	1
4	4	444	4.4400000000	4	A	4.3300000000	4	3	2
explain basic select /*+use_merge(t1,t2,t3)*/* from t1,t2,t3 where t1.a = t2.a and t2.a = t3.a and t3.b > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b;
Query Plan
========================
|ID|OPERATOR      |NAME|
------------------------
|0 |SORT          |    |
|1 | MERGE JOIN   |    |
|2 |  MERGE JOIN  |    |
|3 |   SORT       |    |
|4 |    TABLE SCAN|t2  |
|5 |   SORT       |    |
|6 |    TABLE SCAN|t3  |
|7 |  SORT        |    |
|8 |   TABLE SCAN |t1  |
========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t3.a], [t3.b], [t3.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.b, ASC], [t2.c, ASC], [t3.b, ASC]), prefix_pos(1)
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t3.a], [t3.b], [t3.c]), filter(nil), 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  2 - output([t2.a], [t2.b], [t2.c], [t3.a], [t3.b], [t3.c]), filter(nil), 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.a, ASC])
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)
  5 - output([t3.a], [t3.b], [t3.c]), filter(nil), sort_keys([t3.a, ASC])
  6 - output([t3.a], [t3.b], [t3.c]), filter([t3.b > 1]), 
      access([t3.a], [t3.b], [t3.c]), partitions(p0)
  7 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.a, ASC])
  8 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

select /*+use_merge(t1,t2,t3)*/* from t1,t2,t3 where t1.a = t2.a and t2.a = t3.a and t3.b > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b;
a	b	c	d	a	b	c	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000	1	2	3
1	1	1	1.0000000000	1	1	1.0000000000	1	3	3
1	1	1	1.0000000000	1	2	2.0000000000	1	2	3
1	1	1	1.0000000000	1	2	2.0000000000	1	3	3
1	1	1	1.0000000000	1	222	3.3300000000	1	2	3
1	1	1	1.0000000000	1	222	3.3300000000	1	3	3
1	1	111	1.1100000000	1	1	1.0000000000	1	2	3
1	1	111	1.1100000000	1	1	1.0000000000	1	3	3
1	1	111	1.1100000000	1	2	2.0000000000	1	2	3
1	1	111	1.1100000000	1	2	2.0000000000	1	3	3
1	1	111	1.1100000000	1	222	3.3300000000	1	2	3
1	1	111	1.1100000000	1	222	3.3300000000	1	3	3
1	2	2	2.0000000000	1	1	1.0000000000	1	2	3
1	2	2	2.0000000000	1	1	1.0000000000	1	3	3
1	2	2	2.0000000000	1	2	2.0000000000	1	2	3
1	2	2	2.0000000000	1	2	2.0000000000	1	3	3
1	2	2	2.0000000000	1	222	3.3300000000	1	2	3
1	2	2	2.0000000000	1	222	3.3300000000	1	3	3
2	2	2.0	2.0000000000	2	2.00	2.0000100000	2	2	3
2	2	2.0	2.0000000000	2	222	3.3300000000	2	2	3
2	2	2.0	2.0000000000	2	333	2.2200000000	2	2	3
2	2	222	2.2200000000	2	2.00	2.0000100000	2	2	3
2	2	222	2.2200000000	2	222	3.3300000000	2	2	3
2	2	222	2.2200000000	2	333	2.2200000000	2	2	3
3	3	3	3.0000100000	3	3.0	3.0000100000	3	2	4
3	3	3	3.0000100000	3	3333	1.1100000000	3	2	4
3	3	333	3.3300000000	3	3.0	3.0000100000	3	2	4
3	3	333	3.3300000000	3	3333	1.1100000000	3	2	4
4	4	444	4.4400000000	4	A	4.3300000000	4	2	1
4	4	444	4.4400000000	4	A	4.3300000000	4	3	2
explain basic select /*+use_nl(t1,t2,t3)*/* from t1,t2,t3 where t1.a = t2.a and t2.a = t3.a and t3.b > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b;
Query Plan
============================
|ID|OPERATOR          |NAME|
----------------------------
|0 |SORT              |    |
|1 | HASH JOIN        |    |
|2 |  TABLE SCAN      |t1  |
|3 |  NESTED-LOOP JOIN|    |
|4 |   TABLE SCAN     |t2  |
|5 |   MATERIAL       |    |
|6 |    TABLE SCAN    |t3  |
============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t3.a], [t3.b], [t3.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.b, ASC], [t2.c, ASC], [t3.b, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t3.a], [t3.b], [t3.c]), filter(nil), 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [t3.a], [t3.b], [t3.c]), filter(nil), 
      conds([t2.a = t3.a]), nl_params_(nil)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)
  5 - output([t3.a], [t3.b], [t3.c]), filter(nil)
  6 - output([t3.a], [t3.b], [t3.c]), filter([t3.b > 1]), 
      access([t3.a], [t3.b], [t3.c]), partitions(p0)

select /*+use_nl(t1,t2,t3)*/* from t1,t2,t3 where t1.a = t2.a and t2.a = t3.a and t3.b > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b;
a	b	c	d	a	b	c	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000	1	2	3
1	1	1	1.0000000000	1	1	1.0000000000	1	3	3
1	1	1	1.0000000000	1	2	2.0000000000	1	2	3
1	1	1	1.0000000000	1	2	2.0000000000	1	3	3
1	1	1	1.0000000000	1	222	3.3300000000	1	2	3
1	1	1	1.0000000000	1	222	3.3300000000	1	3	3
1	1	111	1.1100000000	1	1	1.0000000000	1	2	3
1	1	111	1.1100000000	1	1	1.0000000000	1	3	3
1	1	111	1.1100000000	1	2	2.0000000000	1	2	3
1	1	111	1.1100000000	1	2	2.0000000000	1	3	3
1	1	111	1.1100000000	1	222	3.3300000000	1	2	3
1	1	111	1.1100000000	1	222	3.3300000000	1	3	3
1	2	2	2.0000000000	1	1	1.0000000000	1	2	3
1	2	2	2.0000000000	1	1	1.0000000000	1	3	3
1	2	2	2.0000000000	1	2	2.0000000000	1	2	3
1	2	2	2.0000000000	1	2	2.0000000000	1	3	3
1	2	2	2.0000000000	1	222	3.3300000000	1	2	3
1	2	2	2.0000000000	1	222	3.3300000000	1	3	3
2	2	2.0	2.0000000000	2	2.00	2.0000100000	2	2	3
2	2	2.0	2.0000000000	2	222	3.3300000000	2	2	3
2	2	2.0	2.0000000000	2	333	2.2200000000	2	2	3
2	2	222	2.2200000000	2	2.00	2.0000100000	2	2	3
2	2	222	2.2200000000	2	222	3.3300000000	2	2	3
2	2	222	2.2200000000	2	333	2.2200000000	2	2	3
3	3	3	3.0000100000	3	3.0	3.0000100000	3	2	4
3	3	3	3.0000100000	3	3333	1.1100000000	3	2	4
3	3	333	3.3300000000	3	3.0	3.0000100000	3	2	4
3	3	333	3.3300000000	3	3333	1.1100000000	3	2	4
4	4	444	4.4400000000	4	A	4.3300000000	4	2	1
4	4	444	4.4400000000	4	A	4.3300000000	4	3	2

explain basic select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t1  |
|3 |  TABLE SCAN    |t2  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	1	111	1.1100000000	1	1	1.0000000000
1	1	111	1.1100000000	1	2	2.0000000000
1	1	111	1.1100000000	1	222	3.3300000000
1	2	2	2.0000000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	1	222	3.3300000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	2	2.00	2.0000100000
2	2	222	2.2200000000	2	222	3.3300000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
3	3	333	3.3300000000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3333	1.1100000000
4	4	444	4.4400000000	4	A	4.3300000000
5	5	5.550	NULL	5	555	5.5500000000
5	5	5.550	NULL	5	B	5.0000000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t1  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC]), prefix_pos(1)
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.a, ASC])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.a, ASC])
  5 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	1	111	1.1100000000	1	1	1.0000000000
1	1	111	1.1100000000	1	2	2.0000000000
1	1	111	1.1100000000	1	222	3.3300000000
1	2	2	2.0000000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	1	222	3.3300000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	2	2.00	2.0000100000
2	2	222	2.2200000000	2	222	3.3300000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
3	3	333	3.3300000000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3333	1.1100000000
4	4	444	4.4400000000	4	A	4.3300000000
5	5	5.550	NULL	5	555	5.5500000000
5	5	5.550	NULL	5	B	5.0000000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t1  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t2  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([t1.a = t2.a]), nl_params_(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	1	111	1.1100000000	1	1	1.0000000000
1	1	111	1.1100000000	1	2	2.0000000000
1	1	111	1.1100000000	1	222	3.3300000000
1	2	2	2.0000000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	1	222	3.3300000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	2	2.00	2.0000100000
2	2	222	2.2200000000	2	222	3.3300000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
3	3	333	3.3300000000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3333	1.1100000000
4	4	444	4.4400000000	4	A	4.3300000000
5	5	5.550	NULL	5	555	5.5500000000
5	5	5.550	NULL	5	B	5.0000000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2,t3)*/* from t1 left join (t2 left join t3 on t2.a = t3.a) on t1.a = t3.a where t3.b > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | HASH JOIN   |    |
|2 |  HASH JOIN  |    |
|3 |   TABLE SCAN|t3  |
|4 |   TABLE SCAN|t2  |
|5 |  TABLE SCAN |t1  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t3.a], [t3.b], [t3.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.b, ASC], [t2.c, ASC], [t3.b, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t3.a], [t3.b], [t3.c]), filter(nil), 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  2 - output([t2.a], [t2.b], [t2.c], [t3.a], [t3.b], [t3.c]), filter(nil), 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  3 - output([t3.a], [t3.b], [t3.c]), filter([t3.b > 1]), 
      access([t3.a], [t3.b], [t3.c]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)
  5 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

select /*+use_hash(t1,t2,t3)*/* from t1 left join (t2 left join t3 on t2.a = t3.a) on t1.a = t3.a where t3.b > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b;
a	b	c	d	a	b	c	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000	1	2	3
1	1	1	1.0000000000	1	1	1.0000000000	1	3	3
1	1	1	1.0000000000	1	2	2.0000000000	1	2	3
1	1	1	1.0000000000	1	2	2.0000000000	1	3	3
1	1	1	1.0000000000	1	222	3.3300000000	1	2	3
1	1	1	1.0000000000	1	222	3.3300000000	1	3	3
1	1	111	1.1100000000	1	1	1.0000000000	1	2	3
1	1	111	1.1100000000	1	1	1.0000000000	1	3	3
1	1	111	1.1100000000	1	2	2.0000000000	1	2	3
1	1	111	1.1100000000	1	2	2.0000000000	1	3	3
1	1	111	1.1100000000	1	222	3.3300000000	1	2	3
1	1	111	1.1100000000	1	222	3.3300000000	1	3	3
1	2	2	2.0000000000	1	1	1.0000000000	1	2	3
1	2	2	2.0000000000	1	1	1.0000000000	1	3	3
1	2	2	2.0000000000	1	2	2.0000000000	1	2	3
1	2	2	2.0000000000	1	2	2.0000000000	1	3	3
1	2	2	2.0000000000	1	222	3.3300000000	1	2	3
1	2	2	2.0000000000	1	222	3.3300000000	1	3	3
2	2	2.0	2.0000000000	2	2.00	2.0000100000	2	2	3
2	2	2.0	2.0000000000	2	222	3.3300000000	2	2	3
2	2	2.0	2.0000000000	2	333	2.2200000000	2	2	3
2	2	222	2.2200000000	2	2.00	2.0000100000	2	2	3
2	2	222	2.2200000000	2	222	3.3300000000	2	2	3
2	2	222	2.2200000000	2	333	2.2200000000	2	2	3
3	3	3	3.0000100000	3	3.0	3.0000100000	3	2	4
3	3	3	3.0000100000	3	3333	1.1100000000	3	2	4
3	3	333	3.3300000000	3	3.0	3.0000100000	3	2	4
3	3	333	3.3300000000	3	3333	1.1100000000	3	2	4
4	4	444	4.4400000000	4	A	4.3300000000	4	2	1
4	4	444	4.4400000000	4	A	4.3300000000	4	3	2
explain basic select /*+use_merge(t1,t2,t3)*/* from t1 left join (t2 left join t3 on t2.a = t3.a) on t1.a = t3.a where t3.b > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b;
Query Plan
========================
|ID|OPERATOR      |NAME|
------------------------
|0 |SORT          |    |
|1 | MERGE JOIN   |    |
|2 |  MERGE JOIN  |    |
|3 |   SORT       |    |
|4 |    TABLE SCAN|t1  |
|5 |   SORT       |    |
|6 |    TABLE SCAN|t3  |
|7 |  SORT        |    |
|8 |   TABLE SCAN |t2  |
========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t3.a], [t3.b], [t3.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.b, ASC], [t2.c, ASC], [t3.b, ASC]), prefix_pos(1)
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t3.a], [t3.b], [t3.c]), filter(nil), 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [t3.a], [t3.b], [t3.c]), filter(nil), 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.a, ASC])
  4 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  5 - output([t3.a], [t3.b], [t3.c]), filter(nil), sort_keys([t3.a, ASC])
  6 - output([t3.a], [t3.b], [t3.c]), filter([t3.b > 1]), 
      access([t3.a], [t3.b], [t3.c]), partitions(p0)
  7 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.a, ASC])
  8 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2,t3)*/* from t1 left join (t2 left join t3 on t2.a = t3.a) on t1.a = t3.a where t3.b > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b;
a	b	c	d	a	b	c	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000	1	2	3
1	1	1	1.0000000000	1	1	1.0000000000	1	3	3
1	1	1	1.0000000000	1	2	2.0000000000	1	2	3
1	1	1	1.0000000000	1	2	2.0000000000	1	3	3
1	1	1	1.0000000000	1	222	3.3300000000	1	2	3
1	1	1	1.0000000000	1	222	3.3300000000	1	3	3
1	1	111	1.1100000000	1	1	1.0000000000	1	2	3
1	1	111	1.1100000000	1	1	1.0000000000	1	3	3
1	1	111	1.1100000000	1	2	2.0000000000	1	2	3
1	1	111	1.1100000000	1	2	2.0000000000	1	3	3
1	1	111	1.1100000000	1	222	3.3300000000	1	2	3
1	1	111	1.1100000000	1	222	3.3300000000	1	3	3
1	2	2	2.0000000000	1	1	1.0000000000	1	2	3
1	2	2	2.0000000000	1	1	1.0000000000	1	3	3
1	2	2	2.0000000000	1	2	2.0000000000	1	2	3
1	2	2	2.0000000000	1	2	2.0000000000	1	3	3
1	2	2	2.0000000000	1	222	3.3300000000	1	2	3
1	2	2	2.0000000000	1	222	3.3300000000	1	3	3
2	2	2.0	2.0000000000	2	2.00	2.0000100000	2	2	3
2	2	2.0	2.0000000000	2	222	3.3300000000	2	2	3
2	2	2.0	2.0000000000	2	333	2.2200000000	2	2	3
2	2	222	2.2200000000	2	2.00	2.0000100000	2	2	3
2	2	222	2.2200000000	2	222	3.3300000000	2	2	3
2	2	222	2.2200000000	2	333	2.2200000000	2	2	3
3	3	3	3.0000100000	3	3.0	3.0000100000	3	2	4
3	3	3	3.0000100000	3	3333	1.1100000000	3	2	4
3	3	333	3.3300000000	3	3.0	3.0000100000	3	2	4
3	3	333	3.3300000000	3	3333	1.1100000000	3	2	4
4	4	444	4.4400000000	4	A	4.3300000000	4	2	1
4	4	444	4.4400000000	4	A	4.3300000000	4	3	2
explain basic select /*+use_nl(t1,t2,t3)*/* from t1 left join (t2 left join t3 on t2.a = t3.a) on t1.a = t3.a where t3.b > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b;
Query Plan
============================
|ID|OPERATOR          |NAME|
----------------------------
|0 |SORT              |    |
|1 | HASH JOIN        |    |
|2 |  TABLE SCAN      |t1  |
|3 |  NESTED-LOOP JOIN|    |
|4 |   TABLE SCAN     |t2  |
|5 |   MATERIAL       |    |
|6 |    TABLE SCAN    |t3  |
============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t3.a], [t3.b], [t3.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.b, ASC], [t2.c, ASC], [t3.b, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t3.a], [t3.b], [t3.c]), filter(nil), 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [t3.a], [t3.b], [t3.c]), filter(nil), 
      conds([t2.a = t3.a]), nl_params_(nil)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)
  5 - output([t3.a], [t3.b], [t3.c]), filter(nil)
  6 - output([t3.a], [t3.b], [t3.c]), filter([t3.b > 1]), 
      access([t3.a], [t3.b], [t3.c]), partitions(p0)

select /*+use_nl(t1,t2,t3)*/* from t1 left join (t2 left join t3 on t2.a = t3.a) on t1.a = t3.a where t3.b > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b;
a	b	c	d	a	b	c	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000	1	2	3
1	1	1	1.0000000000	1	1	1.0000000000	1	3	3
1	1	1	1.0000000000	1	2	2.0000000000	1	2	3
1	1	1	1.0000000000	1	2	2.0000000000	1	3	3
1	1	1	1.0000000000	1	222	3.3300000000	1	2	3
1	1	1	1.0000000000	1	222	3.3300000000	1	3	3
1	1	111	1.1100000000	1	1	1.0000000000	1	2	3
1	1	111	1.1100000000	1	1	1.0000000000	1	3	3
1	1	111	1.1100000000	1	2	2.0000000000	1	2	3
1	1	111	1.1100000000	1	2	2.0000000000	1	3	3
1	1	111	1.1100000000	1	222	3.3300000000	1	2	3
1	1	111	1.1100000000	1	222	3.3300000000	1	3	3
1	2	2	2.0000000000	1	1	1.0000000000	1	2	3
1	2	2	2.0000000000	1	1	1.0000000000	1	3	3
1	2	2	2.0000000000	1	2	2.0000000000	1	2	3
1	2	2	2.0000000000	1	2	2.0000000000	1	3	3
1	2	2	2.0000000000	1	222	3.3300000000	1	2	3
1	2	2	2.0000000000	1	222	3.3300000000	1	3	3
2	2	2.0	2.0000000000	2	2.00	2.0000100000	2	2	3
2	2	2.0	2.0000000000	2	222	3.3300000000	2	2	3
2	2	2.0	2.0000000000	2	333	2.2200000000	2	2	3
2	2	222	2.2200000000	2	2.00	2.0000100000	2	2	3
2	2	222	2.2200000000	2	222	3.3300000000	2	2	3
2	2	222	2.2200000000	2	333	2.2200000000	2	2	3
3	3	3	3.0000100000	3	3.0	3.0000100000	3	2	4
3	3	3	3.0000100000	3	3333	1.1100000000	3	2	4
3	3	333	3.3300000000	3	3.0	3.0000100000	3	2	4
3	3	333	3.3300000000	3	3333	1.1100000000	3	2	4
4	4	444	4.4400000000	4	A	4.3300000000	4	2	1
4	4	444	4.4400000000	4	A	4.3300000000	4	3	2

explain basic select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | HASH RIGHT OUTER JOIN|    |
|2 |  TABLE SCAN          |t1  |
|3 |  TABLE SCAN          |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	1	111	1.1100000000	1	1	1.0000000000
1	1	111	1.1100000000	1	2	2.0000000000
1	1	111	1.1100000000	1	222	3.3300000000
1	2	2	2.0000000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	1	222	3.3300000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	2	2.00	2.0000100000
2	2	222	2.2200000000	2	222	3.3300000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
3	3	333	3.3300000000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3333	1.1100000000
4	4	444	4.4400000000	4	A	4.3300000000
5	5	5.550	NULL	5	555	5.5500000000
5	5	5.550	NULL	5	B	5.0000000000
explain basic select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | MERGE RIGHT OUTER JOIN|    |
|2 |  SORT                 |    |
|3 |   TABLE SCAN          |t1  |
|4 |  SORT                 |    |
|5 |   TABLE SCAN          |t2  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.a, ASC])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.a, ASC])
  5 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	1	111	1.1100000000	1	1	1.0000000000
1	1	111	1.1100000000	1	2	2.0000000000
1	1	111	1.1100000000	1	222	3.3300000000
1	2	2	2.0000000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	1	222	3.3300000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	2	2.00	2.0000100000
2	2	222	2.2200000000	2	222	3.3300000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
3	3	333	3.3300000000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3333	1.1100000000
4	4	444	4.4400000000	4	A	4.3300000000
5	5	5.550	NULL	5	555	5.5500000000
5	5	5.550	NULL	5	B	5.0000000000
explain basic select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t2  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t1  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([t1.a = t2.a]), nl_params_(nil)
  2 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	1	111	1.1100000000	1	1	1.0000000000
1	1	111	1.1100000000	1	2	2.0000000000
1	1	111	1.1100000000	1	222	3.3300000000
1	2	2	2.0000000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	1	222	3.3300000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	2	2.00	2.0000100000
2	2	222	2.2200000000	2	222	3.3300000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
3	3	333	3.3300000000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3333	1.1100000000
4	4	444	4.4400000000	4	A	4.3300000000
5	5	5.550	NULL	5	555	5.5500000000
5	5	5.550	NULL	5	B	5.0000000000

explain basic select /*+use_hash(t1,t2,t3)*/* from t1 right join (t2 right join t3 on t2.a = t3.a) on t1.a = t3.a where t3.b > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | HASH OUTER JOIN |    |
|2 |  HASH OUTER JOIN|    |
|3 |   TABLE SCAN    |t3  |
|4 |   TABLE SCAN    |t2  |
|5 |  TABLE SCAN     |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t3.a], [t3.b], [t3.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC], [t3.a, ASC], [t3.b, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t3.a], [t3.b], [t3.c]), filter(nil), 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  2 - output([t2.a], [t2.b], [t2.c], [t3.a], [t3.b], [t3.c]), filter(nil), 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  3 - output([t3.a], [t3.b], [t3.c]), filter([t3.b > 1]), 
      access([t3.a], [t3.b], [t3.c]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)
  5 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

select /*+use_hash(t1,t2,t3)*/* from t1 right join (t2 right join t3 on t2.a = t3.a) on t1.a = t3.a where t3.b > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b;
a	b	c	d	a	b	c	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000	1	2	3
1	1	1	1.0000000000	1	1	1.0000000000	1	3	3
1	1	1	1.0000000000	1	2	2.0000000000	1	2	3
1	1	1	1.0000000000	1	2	2.0000000000	1	3	3
1	1	1	1.0000000000	1	222	3.3300000000	1	2	3
1	1	1	1.0000000000	1	222	3.3300000000	1	3	3
1	1	111	1.1100000000	1	1	1.0000000000	1	2	3
1	1	111	1.1100000000	1	1	1.0000000000	1	3	3
1	1	111	1.1100000000	1	2	2.0000000000	1	2	3
1	1	111	1.1100000000	1	2	2.0000000000	1	3	3
1	1	111	1.1100000000	1	222	3.3300000000	1	2	3
1	1	111	1.1100000000	1	222	3.3300000000	1	3	3
1	2	2	2.0000000000	1	1	1.0000000000	1	2	3
1	2	2	2.0000000000	1	1	1.0000000000	1	3	3
1	2	2	2.0000000000	1	2	2.0000000000	1	2	3
1	2	2	2.0000000000	1	2	2.0000000000	1	3	3
1	2	2	2.0000000000	1	222	3.3300000000	1	2	3
1	2	2	2.0000000000	1	222	3.3300000000	1	3	3
2	2	2.0	2.0000000000	2	2.00	2.0000100000	2	2	3
2	2	2.0	2.0000000000	2	222	3.3300000000	2	2	3
2	2	2.0	2.0000000000	2	333	2.2200000000	2	2	3
2	2	222	2.2200000000	2	2.00	2.0000100000	2	2	3
2	2	222	2.2200000000	2	222	3.3300000000	2	2	3
2	2	222	2.2200000000	2	333	2.2200000000	2	2	3
3	3	3	3.0000100000	3	3.0	3.0000100000	3	2	4
3	3	3	3.0000100000	3	3333	1.1100000000	3	2	4
3	3	333	3.3300000000	3	3.0	3.0000100000	3	2	4
3	3	333	3.3300000000	3	3333	1.1100000000	3	2	4
4	4	444	4.4400000000	4	A	4.3300000000	4	2	1
4	4	444	4.4400000000	4	A	4.3300000000	4	3	2
explain basic select /*+use_merge(t1,t2,t3)*/* from t1 right join (t2 right join t3 on t2.a = t3.a) on t1.a = t3.a where t3.b > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b;
Query Plan
============================
|ID|OPERATOR          |NAME|
----------------------------
|0 |SORT              |    |
|1 | MERGE OUTER JOIN |    |
|2 |  MERGE OUTER JOIN|    |
|3 |   SORT           |    |
|4 |    TABLE SCAN    |t3  |
|5 |   SORT           |    |
|6 |    TABLE SCAN    |t2  |
|7 |  SORT            |    |
|8 |   TABLE SCAN     |t1  |
============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t3.a], [t3.b], [t3.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC], [t3.a, ASC], [t3.b, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t3.a], [t3.b], [t3.c]), filter(nil), 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  2 - output([t2.a], [t2.b], [t2.c], [t3.a], [t3.b], [t3.c]), filter(nil), 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  3 - output([t3.a], [t3.b], [t3.c]), filter(nil), sort_keys([t3.a, ASC])
  4 - output([t3.a], [t3.b], [t3.c]), filter([t3.b > 1]), 
      access([t3.a], [t3.b], [t3.c]), partitions(p0)
  5 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.a, ASC])
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)
  7 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.a, ASC])
  8 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

select /*+use_merge(t1,t2,t3)*/* from t1 right join (t2 right join t3 on t2.a = t3.a) on t1.a = t3.a where t3.b > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b;
a	b	c	d	a	b	c	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000	1	2	3
1	1	1	1.0000000000	1	1	1.0000000000	1	3	3
1	1	1	1.0000000000	1	2	2.0000000000	1	2	3
1	1	1	1.0000000000	1	2	2.0000000000	1	3	3
1	1	1	1.0000000000	1	222	3.3300000000	1	2	3
1	1	1	1.0000000000	1	222	3.3300000000	1	3	3
1	1	111	1.1100000000	1	1	1.0000000000	1	2	3
1	1	111	1.1100000000	1	1	1.0000000000	1	3	3
1	1	111	1.1100000000	1	2	2.0000000000	1	2	3
1	1	111	1.1100000000	1	2	2.0000000000	1	3	3
1	1	111	1.1100000000	1	222	3.3300000000	1	2	3
1	1	111	1.1100000000	1	222	3.3300000000	1	3	3
1	2	2	2.0000000000	1	1	1.0000000000	1	2	3
1	2	2	2.0000000000	1	1	1.0000000000	1	3	3
1	2	2	2.0000000000	1	2	2.0000000000	1	2	3
1	2	2	2.0000000000	1	2	2.0000000000	1	3	3
1	2	2	2.0000000000	1	222	3.3300000000	1	2	3
1	2	2	2.0000000000	1	222	3.3300000000	1	3	3
2	2	2.0	2.0000000000	2	2.00	2.0000100000	2	2	3
2	2	2.0	2.0000000000	2	222	3.3300000000	2	2	3
2	2	2.0	2.0000000000	2	333	2.2200000000	2	2	3
2	2	222	2.2200000000	2	2.00	2.0000100000	2	2	3
2	2	222	2.2200000000	2	222	3.3300000000	2	2	3
2	2	222	2.2200000000	2	333	2.2200000000	2	2	3
3	3	3	3.0000100000	3	3.0	3.0000100000	3	2	4
3	3	3	3.0000100000	3	3333	1.1100000000	3	2	4
3	3	333	3.3300000000	3	3.0	3.0000100000	3	2	4
3	3	333	3.3300000000	3	3333	1.1100000000	3	2	4
4	4	444	4.4400000000	4	A	4.3300000000	4	2	1
4	4	444	4.4400000000	4	A	4.3300000000	4	3	2
explain basic select /*+use_nl(t1,t2,t3)*/* from t1 right join (t2 right join t3 on t2.a = t3.a) on t1.a = t3.a where t3.b > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b;
Query Plan
==================================
|ID|OPERATOR                |NAME|
----------------------------------
|0 |SORT                    |    |
|1 | HASH RIGHT OUTER JOIN  |    |
|2 |  TABLE SCAN            |t1  |
|3 |  NESTED-LOOP OUTER JOIN|    |
|4 |   TABLE SCAN           |t3  |
|5 |   MATERIAL             |    |
|6 |    TABLE SCAN          |t2  |
==================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t3.a], [t3.b], [t3.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC], [t3.a, ASC], [t3.b, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c], [t3.a], [t3.b], [t3.c]), filter(nil), 
      equal_conds([t1.a = t3.a]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [t3.a], [t3.b], [t3.c]), filter(nil), 
      conds([t2.a = t3.a]), nl_params_(nil)
  4 - output([t3.a], [t3.b], [t3.c]), filter([t3.b > 1]), 
      access([t3.a], [t3.b], [t3.c]), partitions(p0)
  5 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_nl(t1,t2,t3)*/* from t1 right join (t2 right join t3 on t2.a = t3.a) on t1.a = t3.a where t3.b > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b;
a	b	c	d	a	b	c	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000	1	2	3
1	1	1	1.0000000000	1	1	1.0000000000	1	3	3
1	1	1	1.0000000000	1	2	2.0000000000	1	2	3
1	1	1	1.0000000000	1	2	2.0000000000	1	3	3
1	1	1	1.0000000000	1	222	3.3300000000	1	2	3
1	1	1	1.0000000000	1	222	3.3300000000	1	3	3
1	1	111	1.1100000000	1	1	1.0000000000	1	2	3
1	1	111	1.1100000000	1	1	1.0000000000	1	3	3
1	1	111	1.1100000000	1	2	2.0000000000	1	2	3
1	1	111	1.1100000000	1	2	2.0000000000	1	3	3
1	1	111	1.1100000000	1	222	3.3300000000	1	2	3
1	1	111	1.1100000000	1	222	3.3300000000	1	3	3
1	2	2	2.0000000000	1	1	1.0000000000	1	2	3
1	2	2	2.0000000000	1	1	1.0000000000	1	3	3
1	2	2	2.0000000000	1	2	2.0000000000	1	2	3
1	2	2	2.0000000000	1	2	2.0000000000	1	3	3
1	2	2	2.0000000000	1	222	3.3300000000	1	2	3
1	2	2	2.0000000000	1	222	3.3300000000	1	3	3
2	2	2.0	2.0000000000	2	2.00	2.0000100000	2	2	3
2	2	2.0	2.0000000000	2	222	3.3300000000	2	2	3
2	2	2.0	2.0000000000	2	333	2.2200000000	2	2	3
2	2	222	2.2200000000	2	2.00	2.0000100000	2	2	3
2	2	222	2.2200000000	2	222	3.3300000000	2	2	3
2	2	222	2.2200000000	2	333	2.2200000000	2	2	3
3	3	3	3.0000100000	3	3.0	3.0000100000	3	2	4
3	3	3	3.0000100000	3	3333	1.1100000000	3	2	4
3	3	333	3.3300000000	3	3.0	3.0000100000	3	2	4
3	3	333	3.3300000000	3	3333	1.1100000000	3	2	4
4	4	444	4.4400000000	4	A	4.3300000000	4	2	1
4	4	444	4.4400000000	4	A	4.3300000000	4	3	2
explain basic select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	1	111	1.1100000000	1	1	1.0000000000
1	1	111	1.1100000000	1	2	2.0000000000
1	1	111	1.1100000000	1	222	3.3300000000
1	2	2	2.0000000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	1	222	3.3300000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	2	2.00	2.0000100000
2	2	222	2.2200000000	2	222	3.3300000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
3	3	333	3.3300000000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3333	1.1100000000
4	4	444	4.4400000000	4	A	4.3300000000
5	5	5.550	NULL	5	555	5.5500000000
5	5	5.550	NULL	5	B	5.0000000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

# int && decimal
explain basic select /*+use_hash(t1,t2)*/* from t1,t2 where t1.a = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t1  |
|3 |  TABLE SCAN|t2  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1,t2 where t1.a = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
5	5	5.550	NULL	5	B	5.0000000000
explain basic select /*+use_merge(t1,t2)*/* from t1,t2 where t1.a = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t1  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t2  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.a, DECIMAL(11, 0)), ASC])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  5 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1,t2 where t1.a = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
5	5	5.550	NULL	5	B	5.0000000000
explain basic select /*+use_nl(t1,t2)*/* from t1,t2 where t1.a = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t1  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.a, DECIMAL(11, 0)) = t2.c]), nl_params_(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1,t2 where t1.a = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
5	5	5.550	NULL	5	B	5.0000000000

explain basic select /*+use_hash(t1,t2)*/* from t1,t2 where t1.a = t2.c and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t1  |
|3 |  TABLE SCAN|t2  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter([t1.a > 1]), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1,t2 where t1.a = t2.c and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
5	5	5.550	NULL	5	B	5.0000000000
explain basic select /*+use_merge(t1,t2)*/* from t1,t2 where t1.a = t2.c and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t1  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t2  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.a, DECIMAL(11, 0)), ASC])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter([t1.a > 1]), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  5 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1,t2 where t1.a = t2.c and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
5	5	5.550	NULL	5	B	5.0000000000
explain basic select /*+use_nl(t1,t2)*/* from t1,t2 where t1.a = t2.c and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t2  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.a, DECIMAL(11, 0)) = t2.c]), nl_params_(nil)
  2 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter([t1.a > 1]), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1,t2 where t1.a = t2.c and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
5	5	5.550	NULL	5	B	5.0000000000

explain basic select /*+use_hash(t1,t2)*/* from t1,t2 where t1.d = t2.a and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t1  |
|3 |  TABLE SCAN|t2  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = cast(t2.a, DECIMAL(11, 0))]), other_conds(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter([t1.a > 1]), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1,t2 where t1.d = t2.a and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
explain basic select /*+use_merge(t1,t2)*/* from t1,t2 where t1.d = t2.a and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t1  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t2  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = cast(t2.a, DECIMAL(11, 0))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.d, ASC])
  3 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter([t1.a > 1]), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t2.a, DECIMAL(11, 0)), ASC])
  5 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1,t2 where t1.d = t2.a and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
explain basic select /*+use_nl(t1,t2)*/* from t1,t2 where t1.d = t2.a and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t2  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([t1.d = cast(t2.a, DECIMAL(11, 0))]), nl_params_(nil)
  2 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter([t1.a > 1]), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1,t2 where t1.d = t2.a and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000

explain basic select /*+use_hash(t1,t2)*/* from t1,t2 where t1.b = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t1  |
|3 |  TABLE SCAN|t2  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = t2.c]), other_conds(nil)
  2 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1,t2 where t1.b = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
5	5	5.550	NULL	5	B	5.0000000000
1224	2	111	3.3000000000	1	2	2.0000000000
explain basic select /*+use_merge(t1,t2)*/* from t1,t2 where t1.b = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t1  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t2  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.b, DECIMAL(11, 0)), ASC])
  3 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  5 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1,t2 where t1.b = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
5	5	5.550	NULL	5	B	5.0000000000
1224	2	111	3.3000000000	1	2	2.0000000000
explain basic select /*+use_nl(t1,t2)*/* from t1,t2 where t1.b = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t1  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.b, DECIMAL(11, 0)) = t2.c]), nl_params_(nil)
  2 - output([t1.b], [t1.a], [t1.c], [t1.d]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1,t2 where t1.b = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
5	5	5.550	NULL	5	B	5.0000000000
1224	2	111	3.3000000000	1	2	2.0000000000

explain basic select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.a = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t1  |
|3 |  TABLE SCAN    |t2  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.a = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	5	B	5.0000000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.a = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t1  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.a, DECIMAL(11, 0)), ASC])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  5 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.a = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	5	B	5.0000000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.a = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t1  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t2  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.a, DECIMAL(11, 0)) = t2.c]), nl_params_(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.a = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	5	B	5.0000000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.a = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t1  |
|3 |  TABLE SCAN    |t2  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter([t1.a > 1]), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.a = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	5	B	5.0000000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.d = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t1  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = cast(t2.a, DECIMAL(11, 0))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.d, ASC])
  3 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter([t1.a > 1]), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t2.a, DECIMAL(11, 0)), ASC])
  5 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.d = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.d = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t1  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t2  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([t1.d = cast(t2.a, DECIMAL(11, 0))]), nl_params_(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter([t1.a > 1]), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.d = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.b = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t1  |
|3 |  TABLE SCAN    |t2  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = t2.c]), other_conds(nil)
  2 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.b = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	5	B	5.0000000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	1	2	2.0000000000
explain basic select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.b = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t1  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.b, DECIMAL(11, 0)), ASC])
  3 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  5 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.b = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	5	B	5.0000000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	1	2	2.0000000000
explain basic select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.b = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t1  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t2  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.b, DECIMAL(11, 0)) = t2.c]), nl_params_(nil)
  2 - output([t1.b], [t1.a], [t1.c], [t1.d]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.b = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	5	B	5.0000000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	1	2	2.0000000000

explain basic select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.a = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | HASH RIGHT OUTER JOIN|    |
|2 |  TABLE SCAN          |t1  |
|3 |  TABLE SCAN          |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.a = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
5	5	5.550	NULL	5	B	5.0000000000
explain basic select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.a = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t2  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = t2.c]), other_conds(nil)
  2 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.a, DECIMAL(11, 0)), ASC])
  5 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.a = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
5	5	5.550	NULL	5	B	5.0000000000
explain basic select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.a = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t2  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t1  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.a, DECIMAL(11, 0)) = t2.c]), nl_params_(nil)
  2 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.a = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
5	5	5.550	NULL	5	B	5.0000000000

explain basic select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.a = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t1  |
|3 |  TABLE SCAN|t2  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter([t1.a > 1]), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.a = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
5	5	5.550	NULL	5	B	5.0000000000
explain basic select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.a = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t2  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t1  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = t2.c]), other_conds(nil)
  2 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.a, DECIMAL(11, 0)), ASC])
  5 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter([t1.a > 1]), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.a = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
5	5	5.550	NULL	5	B	5.0000000000
explain basic select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.a = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t2  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.a, DECIMAL(11, 0)) = t2.c]), nl_params_(nil)
  2 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter([t1.a > 1]), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.a = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
5	5	5.550	NULL	5	B	5.0000000000

explain basic select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.d = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t1  |
|3 |  TABLE SCAN|t2  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = cast(t2.a, DECIMAL(11, 0))]), other_conds(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter([t1.a > 1]), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.d = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
explain basic select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.d = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t2  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t1  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = cast(t2.a, DECIMAL(11, 0))]), other_conds(nil)
  2 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t2.a, DECIMAL(11, 0)), ASC])
  3 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.d, ASC])
  5 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter([t1.a > 1]), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.d = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
explain basic select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.d = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t2  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([t1.d = cast(t2.a, DECIMAL(11, 0))]), nl_params_(nil)
  2 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter([t1.a > 1]), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.d = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000

explain basic select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.b = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | HASH RIGHT OUTER JOIN|    |
|2 |  TABLE SCAN          |t1  |
|3 |  TABLE SCAN          |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = t2.c]), other_conds(nil)
  2 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.b = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
5	5	5.550	NULL	5	B	5.0000000000
1224	2	111	3.3000000000	1	2	2.0000000000
explain basic select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.b = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t2  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = t2.c]), other_conds(nil)
  2 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.b, DECIMAL(11, 0)), ASC])
  5 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.b = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
5	5	5.550	NULL	5	B	5.0000000000
1224	2	111	3.3000000000	1	2	2.0000000000
explain basic select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.b = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t2  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t1  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.b, DECIMAL(11, 0)) = t2.c]), nl_params_(nil)
  2 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.b], [t1.a], [t1.c], [t1.d]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.b = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
5	5	5.550	NULL	5	B	5.0000000000
1224	2	111	3.3000000000	1	2	2.0000000000

explain basic select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.a = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.a = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	5	B	5.0000000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.a = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | MERGE FULL OUTER JOIN|    |
|2 |  SORT                |    |
|3 |   TABLE SCAN         |t1  |
|4 |  SORT                |    |
|5 |   TABLE SCAN         |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.a, DECIMAL(11, 0)), ASC])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  5 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.a = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	5	B	5.0000000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.a = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.a = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	5	B	5.0000000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.a = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t1  |
|3 |  TABLE SCAN    |t2  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter([t1.a > 1]), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.a = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	5	B	5.0000000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.a = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t1  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.a, DECIMAL(11, 0)), ASC])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter([t1.a > 1]), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  5 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.a = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	5	B	5.0000000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.a = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t1  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t2  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.a, DECIMAL(11, 0)) = t2.c]), nl_params_(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter([t1.a > 1]), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.a = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	5	B	5.0000000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.d = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t1  |
|3 |  TABLE SCAN    |t2  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = cast(t2.a, DECIMAL(11, 0))]), other_conds(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter([t1.a > 1]), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.d = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.d = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t1  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = cast(t2.a, DECIMAL(11, 0))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.d, ASC])
  3 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter([t1.a > 1]), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t2.a, DECIMAL(11, 0)), ASC])
  5 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.d = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.d = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t1  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t2  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([t1.d = cast(t2.a, DECIMAL(11, 0))]), nl_params_(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter([t1.a > 1]), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.d = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.b = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = t2.c]), other_conds(nil)
  2 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.b = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	5	B	5.0000000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	1	2	2.0000000000
explain basic select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.b = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | MERGE FULL OUTER JOIN|    |
|2 |  SORT                |    |
|3 |   TABLE SCAN         |t1  |
|4 |  SORT                |    |
|5 |   TABLE SCAN         |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.b, DECIMAL(11, 0)), ASC])
  3 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  5 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.b = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	5	B	5.0000000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	1	2	2.0000000000
explain basic select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.b = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = t2.c]), other_conds(nil)
  2 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.b = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	5	B	5.0000000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	1	2	2.0000000000

explain basic select /*+use_hash(t1,t2)*/* from t1,t2 where t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t1  |
|3 |  TABLE SCAN|t2  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), other_conds(nil)
  2 - output([t1.c], [t1.a], [t1.b], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1,t2 where t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	2	2	2.0000000000	2	2.00	2.0000100000
1	2	2	2.0000000000	2	222	3.3300000000
1	2	2	2.0000000000	2	333	2.2200000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
explain basic select /*+use_merge(t1,t2)*/* from t1,t2 where t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t1  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t2  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), sort_keys([cast(t1.c, DECIMAL(-1, -1)), ASC])
  3 - output([t1.c], [t1.a], [t1.b], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t2.a, DECIMAL(11, 0)), ASC])
  5 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1,t2 where t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	2	2	2.0000000000	2	2.00	2.0000100000
1	2	2	2.0000000000	2	222	3.3300000000
1	2	2	2.0000000000	2	333	2.2200000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
explain basic select /*+use_nl(t1,t2)*/* from t1,t2 where t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t1  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), nl_params_(nil)
  2 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1,t2 where t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	2	2	2.0000000000	2	2.00	2.0000100000
1	2	2	2.0000000000	2	222	3.3300000000
1	2	2	2.0000000000	2	333	2.2200000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000

explain basic select /*+use_hash(t1,t2)*/* from t1,t2 where t1.c = t2.a and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t1  |
|3 |  TABLE SCAN|t2  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), other_conds(nil)
  2 - output([t1.c], [t1.a], [t1.b], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter([t1.a > 1]), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1,t2 where t1.c = t2.a and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
explain basic select /*+use_merge(t1,t2)*/* from t1,t2 where t1.c = t2.a and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t1  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t2  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), sort_keys([cast(t1.c, DECIMAL(-1, -1)), ASC])
  3 - output([t1.c], [t1.a], [t1.b], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter([t1.a > 1]), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t2.a, DECIMAL(11, 0)), ASC])
  5 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1,t2 where t1.c = t2.a and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
explain basic select /*+use_nl(t1,t2)*/* from t1,t2 where t1.c = t2.a and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t2  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), nl_params_(nil)
  2 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter([t1.a > 1]), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1,t2 where t1.c = t2.a and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000

explain basic select /*+use_hash(t1,t2)*/* from t1,t2 where t1.a = t2.b and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t1  |
|3 |  TABLE SCAN|t2  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter([t1.a > 1]), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.b], [t2.a], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1,t2 where t1.a = t2.b and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	1	2	2.0000000000
2	2	222	2.2200000000	2	2.00	2.0000100000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3.0	3.0000100000
explain basic select /*+use_merge(t1,t2)*/* from t1,t2 where t1.a = t2.b and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t1  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t2  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.a, DECIMAL(11, 0)), ASC])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter([t1.a > 1]), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), sort_keys([cast(t2.b, DECIMAL(-1, -1)), ASC])
  5 - output([t2.b], [t2.a], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1,t2 where t1.a = t2.b and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	1	2	2.0000000000
2	2	222	2.2200000000	2	2.00	2.0000100000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3.0	3.0000100000
explain basic select /*+use_nl(t1,t2)*/* from t1,t2 where t1.a = t2.b and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t2  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), nl_params_(nil)
  2 - output([t2.b], [t2.a], [t2.c]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter([t1.a > 1]), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1,t2 where t1.a = t2.b and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	1	2	2.0000000000
2	2	222	2.2200000000	2	2.00	2.0000100000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3.0	3.0000100000

explain basic select /*+use_hash(t1,t2)*/* from t1,t2 where t1.b = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t1  |
|3 |  TABLE SCAN|t2  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.b], [t2.a], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1,t2 where t1.b = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	1	2	2.0000000000
2	2	222	2.2200000000	2	2.00	2.0000100000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3.0	3.0000100000
123	3	2001-01-01	4.4000000000	3	3.0	3.0000100000
1224	2	111	3.3000000000	1	2	2.0000000000
1224	2	111	3.3000000000	2	2.00	2.0000100000
explain basic select /*+use_merge(t1,t2)*/* from t1,t2 where t1.b = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t1  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t2  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.b, DECIMAL(11, 0)), ASC])
  3 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), sort_keys([cast(t2.b, DECIMAL(-1, -1)), ASC])
  5 - output([t2.b], [t2.a], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1,t2 where t1.b = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	1	2	2.0000000000
2	2	222	2.2200000000	2	2.00	2.0000100000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3.0	3.0000100000
123	3	2001-01-01	4.4000000000	3	3.0	3.0000100000
1224	2	111	3.3000000000	1	2	2.0000000000
1224	2	111	3.3000000000	2	2.00	2.0000100000
explain basic select /*+use_nl(t1,t2)*/* from t1,t2 where t1.b = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t1  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.b, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), nl_params_(nil)
  2 - output([t1.b], [t1.a], [t1.c], [t1.d]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.b], [t2.a], [t2.c]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1,t2 where t1.b = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	1	2	2.0000000000
2	2	222	2.2200000000	2	2.00	2.0000100000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3.0	3.0000100000
123	3	2001-01-01	4.4000000000	3	3.0	3.0000100000
1224	2	111	3.3000000000	1	2	2.0000000000
1224	2	111	3.3000000000	2	2.00	2.0000100000

explain basic select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t1  |
|3 |  TABLE SCAN    |t2  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), other_conds(nil)
  2 - output([t1.c], [t1.a], [t1.b], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	2	2.00	2.0000100000
1	2	2	2.0000000000	2	222	3.3300000000
1	2	2	2.0000000000	2	333	2.2200000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t1  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), sort_keys([cast(t1.c, DECIMAL(-1, -1)), ASC])
  3 - output([t1.c], [t1.a], [t1.b], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t2.a, DECIMAL(11, 0)), ASC])
  5 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	2	2.00	2.0000100000
1	2	2	2.0000000000	2	222	3.3300000000
1	2	2	2.0000000000	2	333	2.2200000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t1  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t2  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), nl_params_(nil)
  2 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	2	2.00	2.0000100000
1	2	2	2.0000000000	2	222	3.3300000000
1	2	2	2.0000000000	2	333	2.2200000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.c = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t1  |
|3 |  TABLE SCAN    |t2  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), other_conds(nil)
  2 - output([t1.c], [t1.a], [t1.b], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter([t1.a > 1]), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.c = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.c = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t1  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), sort_keys([cast(t1.c, DECIMAL(-1, -1)), ASC])
  3 - output([t1.c], [t1.a], [t1.b], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter([t1.a > 1]), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t2.a, DECIMAL(11, 0)), ASC])
  5 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.c = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.c = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t1  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t2  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), nl_params_(nil)
  2 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter([t1.a > 1]), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.c = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.a = t2.b where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t1  |
|3 |  TABLE SCAN    |t2  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter([t1.a > 1]), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.b], [t2.a], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.a = t2.b where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	1	2	2.0000000000
2	2	222	2.2200000000	2	2.00	2.0000100000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3.0	3.0000100000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.a = t2.b where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t1  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.a, DECIMAL(11, 0)), ASC])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter([t1.a > 1]), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), sort_keys([cast(t2.b, DECIMAL(-1, -1)), ASC])
  5 - output([t2.b], [t2.a], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.a = t2.b where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	1	2	2.0000000000
2	2	222	2.2200000000	2	2.00	2.0000100000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3.0	3.0000100000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.a = t2.b where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t1  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t2  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), nl_params_(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter([t1.a > 1]), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.b], [t2.a], [t2.c]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.a = t2.b where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	1	2	2.0000000000
2	2	222	2.2200000000	2	2.00	2.0000100000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3.0	3.0000100000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.b = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t1  |
|3 |  TABLE SCAN    |t2  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.b], [t2.a], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.b = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	1	2	2.0000000000
2	2	222	2.2200000000	2	2.00	2.0000100000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3.0	3.0000100000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	3	3.0	3.0000100000
1224	2	111	3.3000000000	1	2	2.0000000000
1224	2	111	3.3000000000	2	2.00	2.0000100000
explain basic select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.b = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t1  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.b, DECIMAL(11, 0)), ASC])
  3 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), sort_keys([cast(t2.b, DECIMAL(-1, -1)), ASC])
  5 - output([t2.b], [t2.a], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.b = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	1	2	2.0000000000
2	2	222	2.2200000000	2	2.00	2.0000100000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3.0	3.0000100000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	3	3.0	3.0000100000
1224	2	111	3.3000000000	1	2	2.0000000000
1224	2	111	3.3000000000	2	2.00	2.0000100000
explain basic select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.b = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t1  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t2  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.b, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), nl_params_(nil)
  2 - output([t1.b], [t1.a], [t1.c], [t1.d]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.b], [t2.a], [t2.c]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.b = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	1	2	2.0000000000
2	2	222	2.2200000000	2	2.00	2.0000100000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3.0	3.0000100000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	3	3.0	3.0000100000
1224	2	111	3.3000000000	1	2	2.0000000000
1224	2	111	3.3000000000	2	2.00	2.0000100000

explain basic select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | HASH RIGHT OUTER JOIN|    |
|2 |  TABLE SCAN          |t1  |
|3 |  TABLE SCAN          |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), other_conds(nil)
  2 - output([t1.c], [t1.a], [t1.b], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	2	2	2.0000000000	2	2.00	2.0000100000
1	2	2	2.0000000000	2	222	3.3300000000
1	2	2	2.0000000000	2	333	2.2200000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
explain basic select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t2  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), other_conds(nil)
  2 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t2.a, DECIMAL(11, 0)), ASC])
  3 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), sort_keys([cast(t1.c, DECIMAL(-1, -1)), ASC])
  5 - output([t1.c], [t1.a], [t1.b], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	2	2	2.0000000000	2	2.00	2.0000100000
1	2	2	2.0000000000	2	222	3.3300000000
1	2	2	2.0000000000	2	333	2.2200000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
explain basic select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t2  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t1  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), nl_params_(nil)
  2 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	2	2	2.0000000000	2	2.00	2.0000100000
1	2	2	2.0000000000	2	222	3.3300000000
1	2	2	2.0000000000	2	333	2.2200000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000

explain basic select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.c = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t1  |
|3 |  TABLE SCAN|t2  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), other_conds(nil)
  2 - output([t1.c], [t1.a], [t1.b], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter([t1.a > 1]), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.c = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
explain basic select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.c = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t2  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t1  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), other_conds(nil)
  2 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t2.a, DECIMAL(11, 0)), ASC])
  3 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), sort_keys([cast(t1.c, DECIMAL(-1, -1)), ASC])
  5 - output([t1.c], [t1.a], [t1.b], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter([t1.a > 1]), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.c = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
explain basic select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.c = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t2  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), nl_params_(nil)
  2 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter([t1.a > 1]), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.c = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000

explain basic select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.a = t2.b where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t1  |
|3 |  TABLE SCAN|t2  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter([t1.a > 1]), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.b], [t2.a], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.a = t2.b where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	1	2	2.0000000000
2	2	222	2.2200000000	2	2.00	2.0000100000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3.0	3.0000100000
explain basic select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.a = t2.b where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t2  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t1  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t2.a], [t2.b], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), sort_keys([cast(t2.b, DECIMAL(-1, -1)), ASC])
  3 - output([t2.b], [t2.a], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.a, DECIMAL(11, 0)), ASC])
  5 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter([t1.a > 1]), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.a = t2.b where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	1	2	2.0000000000
2	2	222	2.2200000000	2	2.00	2.0000100000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3.0	3.0000100000
explain basic select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.a = t2.b where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t2  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), nl_params_(nil)
  2 - output([t2.b], [t2.a], [t2.c]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter([t1.a > 1]), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.a = t2.b where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	1	2	2.0000000000
2	2	222	2.2200000000	2	2.00	2.0000100000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3.0	3.0000100000

explain basic select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.b = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | HASH RIGHT OUTER JOIN|    |
|2 |  TABLE SCAN          |t1  |
|3 |  TABLE SCAN          |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.b], [t2.a], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.b = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	1	2	2.0000000000
2	2	222	2.2200000000	2	2.00	2.0000100000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3.0	3.0000100000
123	3	2001-01-01	4.4000000000	3	3.0	3.0000100000
1224	2	111	3.3000000000	1	2	2.0000000000
1224	2	111	3.3000000000	2	2.00	2.0000100000
explain basic select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.b = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t2  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t2.a], [t2.b], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), sort_keys([cast(t2.b, DECIMAL(-1, -1)), ASC])
  3 - output([t2.b], [t2.a], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.b, DECIMAL(11, 0)), ASC])
  5 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.b = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	1	2	2.0000000000
2	2	222	2.2200000000	2	2.00	2.0000100000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3.0	3.0000100000
123	3	2001-01-01	4.4000000000	3	3.0	3.0000100000
1224	2	111	3.3000000000	1	2	2.0000000000
1224	2	111	3.3000000000	2	2.00	2.0000100000
explain basic select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.b = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t2  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t1  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.b, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), nl_params_(nil)
  2 - output([t2.b], [t2.a], [t2.c]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.b], [t1.a], [t1.c], [t1.d]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.b = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	1	2	2.0000000000
2	2	222	2.2200000000	2	2.00	2.0000100000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3.0	3.0000100000
123	3	2001-01-01	4.4000000000	3	3.0	3.0000100000
1224	2	111	3.3000000000	1	2	2.0000000000
1224	2	111	3.3000000000	2	2.00	2.0000100000

explain basic select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), other_conds(nil)
  2 - output([t1.c], [t1.a], [t1.b], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	2	2.00	2.0000100000
1	2	2	2.0000000000	2	222	3.3300000000
1	2	2	2.0000000000	2	333	2.2200000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | MERGE FULL OUTER JOIN|    |
|2 |  SORT                |    |
|3 |   TABLE SCAN         |t1  |
|4 |  SORT                |    |
|5 |   TABLE SCAN         |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), sort_keys([cast(t1.c, DECIMAL(-1, -1)), ASC])
  3 - output([t1.c], [t1.a], [t1.b], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t2.a, DECIMAL(11, 0)), ASC])
  5 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	2	2.00	2.0000100000
1	2	2	2.0000000000	2	222	3.3300000000
1	2	2	2.0000000000	2	333	2.2200000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), other_conds(nil)
  2 - output([t1.c], [t1.a], [t1.b], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	2	2.00	2.0000100000
1	2	2	2.0000000000	2	222	3.3300000000
1	2	2	2.0000000000	2	333	2.2200000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.c = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t1  |
|3 |  TABLE SCAN    |t2  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), other_conds(nil)
  2 - output([t1.c], [t1.a], [t1.b], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter([t1.a > 1]), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.c = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.c = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t1  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), sort_keys([cast(t1.c, DECIMAL(-1, -1)), ASC])
  3 - output([t1.c], [t1.a], [t1.b], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter([t1.a > 1]), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t2.a, DECIMAL(11, 0)), ASC])
  5 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.c = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.c = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t1  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t2  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), nl_params_(nil)
  2 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter([t1.a > 1]), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.c = t2.a where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.a = t2.b where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t1  |
|3 |  TABLE SCAN    |t2  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter([t1.a > 1]), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.b], [t2.a], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.a = t2.b where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	1	2	2.0000000000
2	2	222	2.2200000000	2	2.00	2.0000100000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3.0	3.0000100000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.a = t2.b where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t1  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.a, DECIMAL(11, 0)), ASC])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter([t1.a > 1]), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), sort_keys([cast(t2.b, DECIMAL(-1, -1)), ASC])
  5 - output([t2.b], [t2.a], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.a = t2.b where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	1	2	2.0000000000
2	2	222	2.2200000000	2	2.00	2.0000100000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3.0	3.0000100000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.a = t2.b where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t1  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t2  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), nl_params_(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter([t1.a > 1]), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.b], [t2.a], [t2.c]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.a = t2.b where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	1	2	2.0000000000
2	2	222	2.2200000000	2	2.00	2.0000100000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3.0	3.0000100000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.b = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.b], [t2.a], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.b = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	1	2	2.0000000000
2	2	222	2.2200000000	2	2.00	2.0000100000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3.0	3.0000100000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	3	3.0	3.0000100000
1224	2	111	3.3000000000	1	2	2.0000000000
1224	2	111	3.3000000000	2	2.00	2.0000100000
explain basic select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.b = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | MERGE FULL OUTER JOIN|    |
|2 |  SORT                |    |
|3 |   TABLE SCAN         |t1  |
|4 |  SORT                |    |
|5 |   TABLE SCAN         |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.b, DECIMAL(11, 0)), ASC])
  3 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), sort_keys([cast(t2.b, DECIMAL(-1, -1)), ASC])
  5 - output([t2.b], [t2.a], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.b = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	1	2	2.0000000000
2	2	222	2.2200000000	2	2.00	2.0000100000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3.0	3.0000100000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	3	3.0	3.0000100000
1224	2	111	3.3000000000	1	2	2.0000000000
1224	2	111	3.3000000000	2	2.00	2.0000100000
explain basic select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.b = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.b], [t2.a], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.b = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	1	2	2.0000000000
2	2	222	2.2200000000	2	2.00	2.0000100000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	3	3.0	3.0000100000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	3	3.0	3.0000100000
1224	2	111	3.3000000000	1	2	2.0000000000
1224	2	111	3.3000000000	2	2.00	2.0000100000

explain basic select /*+use_hash(t1,t2)*/* from t1,t2 where t1.a = t2.c and t1.a =  t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t2  |
|3 |  TABLE SCAN|t1  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = t2.c]), other_conds(nil)
  2 - output([t2.c], [t2.b], [t2.a]), filter([t2.c = cast(t2.b, DECIMAL(-1, -1))]), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1,t2 where t1.a = t2.c and t1.a =  t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
explain basic select /*+use_merge(t1,t2)*/* from t1,t2 where t1.a = t2.c and t1.a =  t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t1  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t2  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.a, DECIMAL(11, 0)), ASC])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  5 - output([t2.c], [t2.b], [t2.a]), filter([t2.c = cast(t2.b, DECIMAL(-1, -1))]), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1,t2 where t1.a = t2.c and t1.a =  t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
explain basic select /*+use_nl(t1,t2)*/* from t1,t2 where t1.a = t2.c and t1.a =  t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t1  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.a, DECIMAL(11, 0)) = t2.c]), nl_params_(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.c], [t2.b], [t2.a]), filter([t2.c = cast(t2.b, DECIMAL(-1, -1))]), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1,t2 where t1.a = t2.c and t1.a =  t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000

explain basic select /*+use_hash(t1,t2)*/* from t1,t2 where t1.b = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t1  |
|3 |  TABLE SCAN|t2  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = t2.c], [cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.b], [t2.a], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1,t2 where t1.b = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
explain basic select /*+use_merge(t1,t2)*/* from t1,t2 where t1.b = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t1  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t2  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = t2.c], [cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.b, DECIMAL(11, 0)), ASC], [cast(t1.a, DECIMAL(11, 0)), ASC])
  3 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), sort_keys([t2.c, ASC], [cast(t2.b, DECIMAL(-1, -1)), ASC])
  5 - output([t2.c], [t2.b], [t2.a], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1,t2 where t1.b = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
explain basic select /*+use_nl(t1,t2)*/* from t1,t2 where t1.b = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t1  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.b, DECIMAL(11, 0)) = t2.c], [cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), nl_params_(nil)
  2 - output([t1.b], [t1.a], [t1.c], [t1.d]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.c], [t2.b], [t2.a]), filter(nil), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1,t2 where t1.b = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000

explain basic select /*+use_hash(t1,t2)*/* from t1,t2 where t1.b = t2.c and t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t1  |
|3 |  TABLE SCAN|t2  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = t2.c], [t1.a = t2.a]), other_conds(nil)
  2 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1,t2 where t1.b = t2.c and t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
5	5	5.550	NULL	5	B	5.0000000000
explain basic select /*+use_merge(t1,t2)*/* from t1,t2 where t1.b = t2.c and t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t1  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t2  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = t2.c], [t1.a = t2.a]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.b, DECIMAL(11, 0)), ASC], [t1.a, ASC])
  3 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC], [t2.a, ASC])
  5 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1,t2 where t1.b = t2.c and t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
5	5	5.550	NULL	5	B	5.0000000000
explain basic select /*+use_nl(t1,t2)*/* from t1,t2 where t1.b = t2.c and t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t1  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.b, DECIMAL(11, 0)) = t2.c], [t1.a = t2.a]), nl_params_(nil)
  2 - output([t1.b], [t1.a], [t1.c], [t1.d]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1,t2 where t1.b = t2.c and t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
5	5	5.550	NULL	5	B	5.0000000000

explain basic select /*+use_hash(t1,t2)*/* from t1,t2 where t1.c = t1.a and t1.b = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t1  |
|3 |  TABLE SCAN|t2  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.b = t2.a]), other_conds(nil)
  2 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter([cast(t1.c, DECIMAL(-1, -1)) = cast(t1.a, DECIMAL(11, 0))]), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1,t2 where t1.c = t1.a and t1.b = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
explain basic select /*+use_merge(t1,t2)*/* from t1,t2 where t1.c = t1.a and t1.b = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t1  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t2  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.b = t2.a]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.b, ASC])
  3 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter([cast(t1.c, DECIMAL(-1, -1)) = cast(t1.a, DECIMAL(11, 0))]), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.a, ASC])
  5 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1,t2 where t1.c = t1.a and t1.b = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
explain basic select /*+use_nl(t1,t2)*/* from t1,t2 where t1.c = t1.a and t1.b = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t2  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([t1.b = t2.a]), nl_params_(nil)
  2 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter([cast(t1.c, DECIMAL(-1, -1)) = cast(t1.a, DECIMAL(11, 0))]), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1,t2 where t1.c = t1.a and t1.b = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000

explain basic select /*+use_hash(t1,t2)*/* from t1,t2 where t1.d = t1.b and t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t1  |
|3 |  TABLE SCAN|t2  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), other_conds(nil)
  2 - output([t1.d], [t1.b], [t1.c], [t1.a], [cast(t1.c, DECIMAL(-1, -1))]), filter([t1.d = cast(t1.b, DECIMAL(11, 0))]), 
      access([t1.d], [t1.b], [t1.c], [t1.a]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1,t2 where t1.d = t1.b and t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	2	2	2.0000000000	2	2.00	2.0000100000
1	2	2	2.0000000000	2	222	3.3300000000
1	2	2	2.0000000000	2	333	2.2200000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
explain basic select /*+use_merge(t1,t2)*/* from t1,t2 where t1.d = t1.b and t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t1  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t2  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), sort_keys([cast(t1.c, DECIMAL(-1, -1)), ASC])
  3 - output([t1.d], [t1.b], [t1.c], [t1.a], [cast(t1.c, DECIMAL(-1, -1))]), filter([t1.d = cast(t1.b, DECIMAL(11, 0))]), 
      access([t1.d], [t1.b], [t1.c], [t1.a]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t2.a, DECIMAL(11, 0)), ASC])
  5 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1,t2 where t1.d = t1.b and t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	2	2	2.0000000000	2	2.00	2.0000100000
1	2	2	2.0000000000	2	222	3.3300000000
1	2	2	2.0000000000	2	333	2.2200000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
explain basic select /*+use_nl(t1,t2)*/* from t1,t2 where t1.d = t1.b and t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t2  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), nl_params_(nil)
  2 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.d], [t1.b], [t1.c], [t1.a]), filter([t1.d = cast(t1.b, DECIMAL(11, 0))]), 
      access([t1.d], [t1.b], [t1.c], [t1.a]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1,t2 where t1.d = t1.b and t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	2	2	2.0000000000	2	2.00	2.0000100000
1	2	2	2.0000000000	2	222	3.3300000000
1	2	2	2.0000000000	2	333	2.2200000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000

explain basic select /*+use_hash(t1,t2)*/* from t1,t2 where t1.c = t1.a and t1.b = t2.a and t2.b = t1.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t1  |
|3 |  TABLE SCAN|t2  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.b = t2.a], [t2.b = t1.c]), other_conds(nil)
  2 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter([cast(t1.c, DECIMAL(-1, -1)) = cast(t1.a, DECIMAL(11, 0))]), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1,t2 where t1.c = t1.a and t1.b = t2.a and t2.b = t1.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
explain basic select /*+use_merge(t1,t2)*/* from t1,t2 where t1.c = t1.a and t1.b = t2.a and t2.b = t1.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t1  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t2  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.b = t2.a], [t2.b = t1.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.b, ASC], [t1.c, ASC])
  3 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter([cast(t1.c, DECIMAL(-1, -1)) = cast(t1.a, DECIMAL(11, 0))]), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.a, ASC], [t2.b, ASC])
  5 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1,t2 where t1.c = t1.a and t1.b = t2.a and t2.b = t1.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
explain basic select /*+use_nl(t1,t2)*/* from t1,t2 where t1.c = t1.a and t1.b = t2.a and t2.b = t1.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t2  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([t1.b = t2.a], [t2.b = t1.c]), nl_params_(nil)
  2 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter([cast(t1.c, DECIMAL(-1, -1)) = cast(t1.a, DECIMAL(11, 0))]), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1,t2 where t1.c = t1.a and t1.b = t2.a and t2.b = t1.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000

explain basic select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.a = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | HASH RIGHT OUTER JOIN|    |
|2 |  TABLE SCAN          |t2  |
|3 |  TABLE SCAN          |t1  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = t2.c], [cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t2.c], [t2.b], [t2.a], [cast(t2.b, DECIMAL(-1, -1))]), filter([t2.c = cast(t2.b, DECIMAL(-1, -1))]), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.a = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.a = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t1  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = t2.c], [cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.a, DECIMAL(11, 0)), ASC], [cast(t1.a, DECIMAL(11, 0)), ASC])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), sort_keys([t2.c, ASC], [cast(t2.b, DECIMAL(-1, -1)), ASC])
  5 - output([t2.c], [t2.b], [t2.a], [cast(t2.b, DECIMAL(-1, -1))]), filter([t2.c = cast(t2.b, DECIMAL(-1, -1))]), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.a = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.a = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t1  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t2  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.a, DECIMAL(11, 0)) = t2.c], [cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), nl_params_(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil)
  4 - output([t2.c], [t2.b], [t2.a], [cast(t2.b, DECIMAL(-1, -1))]), filter([t2.c = cast(t2.b, DECIMAL(-1, -1))]), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.a = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.b = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t1  |
|3 |  TABLE SCAN    |t2  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = t2.c], [cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.b], [t2.a], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.b = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	NULL	NULL	NULL
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.b = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t1  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = t2.c], [cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.b, DECIMAL(11, 0)), ASC], [cast(t1.a, DECIMAL(11, 0)), ASC])
  3 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), sort_keys([t2.c, ASC], [cast(t2.b, DECIMAL(-1, -1)), ASC])
  5 - output([t2.c], [t2.b], [t2.a], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.b = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	NULL	NULL	NULL
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.b = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t1  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t2  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.b, DECIMAL(11, 0)) = t2.c], [cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), nl_params_(nil)
  2 - output([t1.b], [t1.a], [t1.c], [t1.d]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.c], [t2.b], [t2.a]), filter(nil), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.b = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	NULL	NULL	NULL
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.b = t2.c and t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t1  |
|3 |  TABLE SCAN    |t2  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = t2.c], [t1.a = t2.a]), other_conds(nil)
  2 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.b = t2.c and t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	NULL	NULL	NULL
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	5	B	5.0000000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.b = t2.c and t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t1  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = t2.c], [t1.a = t2.a]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.b, DECIMAL(11, 0)), ASC], [t1.a, ASC])
  3 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC], [t2.a, ASC])
  5 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.b = t2.c and t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	NULL	NULL	NULL
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	5	B	5.0000000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.b = t2.c and t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t1  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t2  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.b, DECIMAL(11, 0)) = t2.c], [t1.a = t2.a]), nl_params_(nil)
  2 - output([t1.b], [t1.a], [t1.c], [t1.d]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.b = t2.c and t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	NULL	NULL	NULL
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	5	B	5.0000000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.c = t1.a and t1.b = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t1  |
|3 |  TABLE SCAN    |t2  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.b = t2.a]), other_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t1.a, DECIMAL(11, 0))])
  2 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.c = t1.a and t1.b = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	NULL	NULL	NULL
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.c = t1.a and t1.b = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t1  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.b = t2.a]), other_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t1.a, DECIMAL(11, 0))])
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.b, ASC])
  3 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.a, ASC])
  5 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.c = t1.a and t1.b = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	NULL	NULL	NULL
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.c = t1.a and t1.b = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t1  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t2  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t1.a, DECIMAL(11, 0))], [t1.b = t2.a]), nl_params_(nil)
  2 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.c = t1.a and t1.b = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	NULL	NULL	NULL
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.d = t1.b and t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t1  |
|3 |  TABLE SCAN    |t2  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), other_conds([t1.d = cast(t1.b, DECIMAL(11, 0))])
  2 - output([t1.d], [t1.b], [t1.c], [t1.a], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), 
      access([t1.d], [t1.b], [t1.c], [t1.a]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.d = t1.b and t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	2	2.00	2.0000100000
1	2	2	2.0000000000	2	222	3.3300000000
1	2	2	2.0000000000	2	333	2.2200000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.d = t1.b and t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t1  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), other_conds([t1.d = cast(t1.b, DECIMAL(11, 0))])
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), sort_keys([cast(t1.c, DECIMAL(-1, -1)), ASC])
  3 - output([t1.d], [t1.b], [t1.c], [t1.a], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), 
      access([t1.d], [t1.b], [t1.c], [t1.a]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t2.a, DECIMAL(11, 0)), ASC])
  5 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.d = t1.b and t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	2	2.00	2.0000100000
1	2	2	2.0000000000	2	222	3.3300000000
1	2	2	2.0000000000	2	333	2.2200000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.d = t1.b and t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t1  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t2  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([t1.d = cast(t1.b, DECIMAL(11, 0))], [cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), nl_params_(nil)
  2 - output([t1.d], [t1.b], [t1.c], [t1.a]), filter(nil), 
      access([t1.d], [t1.b], [t1.c], [t1.a]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.d = t1.b and t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	2	2.00	2.0000100000
1	2	2	2.0000000000	2	222	3.3300000000
1	2	2	2.0000000000	2	333	2.2200000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.c = t1.a and t1.b = t2.a and t2.c = t1.d order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t1  |
|3 |  TABLE SCAN    |t2  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.b = t2.a], [t2.c = t1.d]), other_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t1.a, DECIMAL(11, 0))])
  2 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.c], [t2.b]), filter(nil), 
      access([t2.a], [t2.c], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.c = t1.a and t1.b = t2.a and t2.c = t1.d order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	NULL	NULL	NULL
2	2	2.0	2.0000000000	NULL	NULL	NULL
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.c = t1.a and t1.b = t2.a and t2.c = t1.d order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t1  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.b = t2.a], [t2.c = t1.d]), other_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t1.a, DECIMAL(11, 0))])
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.b, ASC], [t1.d, ASC])
  3 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.a, ASC], [t2.c, ASC])
  5 - output([t2.a], [t2.c], [t2.b]), filter(nil), 
      access([t2.a], [t2.c], [t2.b]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.c = t1.a and t1.b = t2.a and t2.c = t1.d order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	NULL	NULL	NULL
2	2	2.0	2.0000000000	NULL	NULL	NULL
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.c = t1.a and t1.b = t2.a and t2.c = t1.d order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t1  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t2  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t1.a, DECIMAL(11, 0))], [t1.b = t2.a], [t2.c = t1.d]), nl_params_(nil)
  2 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.a], [t2.c], [t2.b]), filter(nil), 
      access([t2.a], [t2.c], [t2.b]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.c = t1.a and t1.b = t2.a and t2.c = t1.d order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	NULL	NULL	NULL
2	2	2.0	2.0000000000	NULL	NULL	NULL
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.a = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | HASH RIGHT OUTER JOIN|    |
|2 |  TABLE SCAN          |t1  |
|3 |  TABLE SCAN          |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = t2.c], [cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.b], [t2.a], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.a = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
explain basic select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.a = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t2  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = t2.c], [cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t2.a], [t2.b], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), sort_keys([t2.c, ASC], [cast(t2.b, DECIMAL(-1, -1)), ASC])
  3 - output([t2.c], [t2.b], [t2.a], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.a, DECIMAL(11, 0)), ASC], [cast(t1.a, DECIMAL(11, 0)), ASC])
  5 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.a = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
explain basic select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.a = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t2  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t1  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.a, DECIMAL(11, 0)) = t2.c], [cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), nl_params_(nil)
  2 - output([t2.c], [t2.b], [t2.a]), filter(nil), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.a = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000

explain basic select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.b = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | HASH RIGHT OUTER JOIN|    |
|2 |  TABLE SCAN          |t1  |
|3 |  TABLE SCAN          |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = t2.c], [cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.b], [t2.a], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.b = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
explain basic select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.b = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t2  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = t2.c], [cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t2.a], [t2.b], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), sort_keys([t2.c, ASC], [cast(t2.b, DECIMAL(-1, -1)), ASC])
  3 - output([t2.c], [t2.b], [t2.a], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.b, DECIMAL(11, 0)), ASC], [cast(t1.a, DECIMAL(11, 0)), ASC])
  5 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.b = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
explain basic select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.b = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t2  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t1  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.b, DECIMAL(11, 0)) = t2.c], [cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), nl_params_(nil)
  2 - output([t2.c], [t2.b], [t2.a]), filter(nil), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.b], [t1.a], [t1.c], [t1.d]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.b = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000

explain basic select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.b = t2.c and t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | HASH RIGHT OUTER JOIN|    |
|2 |  TABLE SCAN          |t1  |
|3 |  TABLE SCAN          |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = t2.c], [t1.a = t2.a]), other_conds(nil)
  2 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.b = t2.c and t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
5	5	5.550	NULL	5	B	5.0000000000
explain basic select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.b = t2.c and t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t2  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = t2.c], [t1.a = t2.a]), other_conds(nil)
  2 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC], [t2.a, ASC])
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.b, DECIMAL(11, 0)), ASC], [t1.a, ASC])
  5 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.b = t2.c and t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
5	5	5.550	NULL	5	B	5.0000000000
explain basic select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.b = t2.c and t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t2  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t1  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.b, DECIMAL(11, 0)) = t2.c], [t1.a = t2.a]), nl_params_(nil)
  2 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.b], [t1.a], [t1.c], [t1.d]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.b = t2.c and t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
5	5	5.550	NULL	5	B	5.0000000000

explain basic select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.c = t1.a and t1.b = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | HASH RIGHT OUTER JOIN|    |
|2 |  TABLE SCAN          |t1  |
|3 |  TABLE SCAN          |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.b = t2.a]), other_conds(nil)
  2 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter([cast(t1.c, DECIMAL(-1, -1)) = cast(t1.a, DECIMAL(11, 0))]), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.c = t1.a and t1.b = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
explain basic select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.c = t1.a and t1.b = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t2  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.b = t2.a]), other_conds(nil)
  2 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.a, ASC])
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.b, ASC])
  5 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter([cast(t1.c, DECIMAL(-1, -1)) = cast(t1.a, DECIMAL(11, 0))]), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.c = t1.a and t1.b = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
explain basic select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.c = t1.a and t1.b = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t2  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t1  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([t1.b = t2.a]), nl_params_(nil)
  2 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter([cast(t1.c, DECIMAL(-1, -1)) = cast(t1.a, DECIMAL(11, 0))]), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.c = t1.a and t1.b = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000

explain basic select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.d = t1.b and t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | HASH RIGHT OUTER JOIN|    |
|2 |  TABLE SCAN          |t1  |
|3 |  TABLE SCAN          |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), other_conds(nil)
  2 - output([t1.d], [t1.b], [t1.c], [t1.a], [cast(t1.c, DECIMAL(-1, -1))]), filter([t1.d = cast(t1.b, DECIMAL(11, 0))]), 
      access([t1.d], [t1.b], [t1.c], [t1.a]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.d = t1.b and t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	2	2	2.0000000000	2	2.00	2.0000100000
1	2	2	2.0000000000	2	222	3.3300000000
1	2	2	2.0000000000	2	333	2.2200000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
explain basic select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.d = t1.b and t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t2  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), other_conds(nil)
  2 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t2.a, DECIMAL(11, 0)), ASC])
  3 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), sort_keys([cast(t1.c, DECIMAL(-1, -1)), ASC])
  5 - output([t1.d], [t1.b], [t1.c], [t1.a], [cast(t1.c, DECIMAL(-1, -1))]), filter([t1.d = cast(t1.b, DECIMAL(11, 0))]), 
      access([t1.d], [t1.b], [t1.c], [t1.a]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.d = t1.b and t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	2	2	2.0000000000	2	2.00	2.0000100000
1	2	2	2.0000000000	2	222	3.3300000000
1	2	2	2.0000000000	2	333	2.2200000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
explain basic select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.d = t1.b and t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t2  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t1  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), nl_params_(nil)
  2 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.d], [t1.b], [t1.c], [t1.a]), filter([t1.d = cast(t1.b, DECIMAL(11, 0))]), 
      access([t1.d], [t1.b], [t1.c], [t1.a]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.d = t1.b and t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	2	2	2.0000000000	2	2.00	2.0000100000
1	2	2	2.0000000000	2	222	3.3300000000
1	2	2	2.0000000000	2	333	2.2200000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000

explain basic select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.c = t1.a and t1.b = t2.a and t2.c = t1.d order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | HASH RIGHT OUTER JOIN|    |
|2 |  TABLE SCAN          |t1  |
|3 |  TABLE SCAN          |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.b = t2.a], [t2.c = t1.d]), other_conds(nil)
  2 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter([cast(t1.c, DECIMAL(-1, -1)) = cast(t1.a, DECIMAL(11, 0))]), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.c], [t2.b]), filter(nil), 
      access([t2.a], [t2.c], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.c = t1.a and t1.b = t2.a and t2.c = t1.d order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	2	2.0000000000
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
3	3	3	3.0000100000	3	3.0	3.0000100000
explain basic select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.c = t1.a and t1.b = t2.a and t2.c = t1.d order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t2  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.b = t2.a], [t2.c = t1.d]), other_conds(nil)
  2 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.a, ASC], [t2.c, ASC])
  3 - output([t2.a], [t2.c], [t2.b]), filter(nil), 
      access([t2.a], [t2.c], [t2.b]), partitions(p0)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.b, ASC], [t1.d, ASC])
  5 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter([cast(t1.c, DECIMAL(-1, -1)) = cast(t1.a, DECIMAL(11, 0))]), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.c = t1.a and t1.b = t2.a and t2.c = t1.d order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	2	2.0000000000
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
3	3	3	3.0000100000	3	3.0	3.0000100000
explain basic select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.c = t1.a and t1.b = t2.a and t2.c = t1.d order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t2  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t1  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([t1.b = t2.a], [t2.c = t1.d]), nl_params_(nil)
  2 - output([t2.a], [t2.c], [t2.b]), filter(nil), 
      access([t2.a], [t2.c], [t2.b]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter([cast(t1.c, DECIMAL(-1, -1)) = cast(t1.a, DECIMAL(11, 0))]), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.c = t1.a and t1.b = t2.a and t2.c = t1.d order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	2	2.0000000000
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
3	3	3	3.0000100000	3	3.0	3.0000100000

explain basic select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.a = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = t2.c], [cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.b], [t2.a], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.a = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.a = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | MERGE FULL OUTER JOIN|    |
|2 |  SORT                |    |
|3 |   TABLE SCAN         |t1  |
|4 |  SORT                |    |
|5 |   TABLE SCAN         |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = t2.c], [cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.a, DECIMAL(11, 0)), ASC], [cast(t1.a, DECIMAL(11, 0)), ASC])
  3 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), sort_keys([t2.c, ASC], [cast(t2.b, DECIMAL(-1, -1)), ASC])
  5 - output([t2.c], [t2.b], [t2.a], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.a = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.a = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.a, DECIMAL(11, 0)) = t2.c], [cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, DECIMAL(11, 0))], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.b], [t2.a], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.a = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	1	1.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.b = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = t2.c], [cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.b], [t2.a], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.b = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	NULL	NULL	NULL
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.b = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | MERGE FULL OUTER JOIN|    |
|2 |  SORT                |    |
|3 |   TABLE SCAN         |t1  |
|4 |  SORT                |    |
|5 |   TABLE SCAN         |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = t2.c], [cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.b, DECIMAL(11, 0)), ASC], [cast(t1.a, DECIMAL(11, 0)), ASC])
  3 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), sort_keys([t2.c, ASC], [cast(t2.b, DECIMAL(-1, -1)), ASC])
  5 - output([t2.c], [t2.b], [t2.a], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.b = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	NULL	NULL	NULL
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.b = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = t2.c], [cast(t1.a, DECIMAL(11, 0)) = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))], [cast(t1.a, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.b], [t2.a], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.b = t2.c and t1.a = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	NULL	NULL	NULL
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	1	2	2.0000000000
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.b = t2.c and t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = t2.c], [t1.a = t2.a]), other_conds(nil)
  2 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.b = t2.c and t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	NULL	NULL	NULL
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	5	B	5.0000000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.b = t2.c and t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | MERGE FULL OUTER JOIN|    |
|2 |  SORT                |    |
|3 |   TABLE SCAN         |t1  |
|4 |  SORT                |    |
|5 |   TABLE SCAN         |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = t2.c], [t1.a = t2.a]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t1.b, DECIMAL(11, 0)), ASC], [t1.a, ASC])
  3 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC], [t2.a, ASC])
  5 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.b = t2.c and t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	NULL	NULL	NULL
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	5	B	5.0000000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.b = t2.c and t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.b, DECIMAL(11, 0)) = t2.c], [t1.a = t2.a]), other_conds(nil)
  2 - output([t1.b], [t1.a], [t1.c], [t1.d], [cast(t1.b, DECIMAL(11, 0))]), filter(nil), 
      access([t1.b], [t1.a], [t1.c], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.b = t2.c and t1.a = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	NULL	NULL	NULL
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	5	B	5.0000000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.c = t1.a and t1.b = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.b = t2.a]), other_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t1.a, DECIMAL(11, 0))])
  2 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.c = t1.a and t1.b = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	NULL	NULL	NULL
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.c = t1.a and t1.b = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | MERGE FULL OUTER JOIN|    |
|2 |  SORT                |    |
|3 |   TABLE SCAN         |t1  |
|4 |  SORT                |    |
|5 |   TABLE SCAN         |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.b = t2.a]), other_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t1.a, DECIMAL(11, 0))])
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.b, ASC])
  3 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.a, ASC])
  5 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.c = t1.a and t1.b = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	NULL	NULL	NULL
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.c = t1.a and t1.b = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.b = t2.a]), other_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t1.a, DECIMAL(11, 0))])
  2 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.c = t1.a and t1.b = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	NULL	NULL	NULL
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	3	3.0000100000	3	3333	1.1100000000
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.d = t1.b and t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), other_conds([t1.d = cast(t1.b, DECIMAL(11, 0))])
  2 - output([t1.d], [t1.b], [t1.c], [t1.a], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), 
      access([t1.d], [t1.b], [t1.c], [t1.a]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.d = t1.b and t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	2	2.00	2.0000100000
1	2	2	2.0000000000	2	222	3.3300000000
1	2	2	2.0000000000	2	333	2.2200000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.d = t1.b and t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | MERGE FULL OUTER JOIN|    |
|2 |  SORT                |    |
|3 |   TABLE SCAN         |t1  |
|4 |  SORT                |    |
|5 |   TABLE SCAN         |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), other_conds([t1.d = cast(t1.b, DECIMAL(11, 0))])
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), sort_keys([cast(t1.c, DECIMAL(-1, -1)), ASC])
  3 - output([t1.d], [t1.b], [t1.c], [t1.a], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), 
      access([t1.d], [t1.b], [t1.c], [t1.a]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), sort_keys([cast(t2.a, DECIMAL(11, 0)), ASC])
  5 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.d = t1.b and t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	2	2.00	2.0000100000
1	2	2	2.0000000000	2	222	3.3300000000
1	2	2	2.0000000000	2	333	2.2200000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.d = t1.b and t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t2.a, DECIMAL(11, 0))]), other_conds([t1.d = cast(t1.b, DECIMAL(11, 0))])
  2 - output([t1.d], [t1.b], [t1.c], [t1.a], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), 
      access([t1.d], [t1.b], [t1.c], [t1.a]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c], [cast(t2.a, DECIMAL(11, 0))]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.d = t1.b and t1.c = t2.a order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	1	1.0000000000	1	2	2.0000000000
1	1	1	1.0000000000	1	222	3.3300000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	2	2.00	2.0000100000
1	2	2	2.0000000000	2	222	3.3300000000
1	2	2	2.0000000000	2	333	2.2200000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	2	222	3.3300000000
2	2	2.0	2.0000000000	2	333	2.2200000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.c = t1.a and t1.b = t2.a and t2.c = t1.d order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.b = t2.a], [t2.c = t1.d]), other_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t1.a, DECIMAL(11, 0))])
  2 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.c], [t2.b]), filter(nil), 
      access([t2.a], [t2.c], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.c = t1.a and t1.b = t2.a and t2.c = t1.d order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	2	2.0000000000
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	NULL	NULL	NULL
2	2	2.0	2.0000000000	NULL	NULL	NULL
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.c = t1.a and t1.b = t2.a and t2.c = t1.d order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | MERGE FULL OUTER JOIN|    |
|2 |  SORT                |    |
|3 |   TABLE SCAN         |t1  |
|4 |  SORT                |    |
|5 |   TABLE SCAN         |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.b = t2.a], [t2.c = t1.d]), other_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t1.a, DECIMAL(11, 0))])
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.b, ASC], [t1.d, ASC])
  3 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.a, ASC], [t2.c, ASC])
  5 - output([t2.a], [t2.c], [t2.b]), filter(nil), 
      access([t2.a], [t2.c], [t2.b]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.c = t1.a and t1.b = t2.a and t2.c = t1.d order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	2	2.0000000000
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	NULL	NULL	NULL
2	2	2.0	2.0000000000	NULL	NULL	NULL
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.c = t1.a and t1.b = t2.a and t2.c = t1.d order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.b = t2.a], [t2.c = t1.d]), other_conds([cast(t1.c, DECIMAL(-1, -1)) = cast(t1.a, DECIMAL(11, 0))])
  2 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.c], [t2.b]), filter(nil), 
      access([t2.a], [t2.c], [t2.b]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.c = t1.a and t1.b = t2.a and t2.c = t1.d order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	2	2.0000000000
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	NULL	NULL	NULL
2	2	2.0	2.0000000000	NULL	NULL	NULL
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1,t2 where t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t1  |
|3 |  TABLE SCAN|t2  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1,t2 where t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
explain basic select /*+use_merge(t1,t2)*/* from t1,t2 where t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t1  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t2  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.d, ASC])
  3 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  5 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1,t2 where t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
explain basic select /*+use_nl(t1,t2)*/* from t1,t2 where t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t1  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([t1.d = t2.c]), nl_params_(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1,t2 where t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000

explain basic select /*+use_hash(t1,t2)*/* from t1,t2 where t1.d = t2.c and t2.b > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t2  |
|3 |  TABLE SCAN|t1  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t2.c], [t2.b], [t2.a]), filter([cast(t2.b, DECIMAL(-1, -1)) > ?]), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)
  3 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1,t2 where t1.d = t2.c and t2.b > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	111	1.1100000000	3	3333	1.1100000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
explain basic select /*+use_merge(t1,t2)*/* from t1,t2 where t1.d = t2.c and t2.b > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t2  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t1  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  3 - output([t2.c], [t2.b], [t2.a]), filter([cast(t2.b, DECIMAL(-1, -1)) > ?]), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.d, ASC])
  5 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1,t2 where t1.d = t2.c and t2.b > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	111	1.1100000000	3	3333	1.1100000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
explain basic select /*+use_nl(t1,t2)*/* from t1,t2 where t1.d = t2.c and t2.b > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t1  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([t1.d = t2.c]), nl_params_(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.c], [t2.b], [t2.a]), filter([cast(t2.b, DECIMAL(-1, -1)) > ?]), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1,t2 where t1.d = t2.c and t2.b > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	111	1.1100000000	3	3333	1.1100000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000

explain basic select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t1  |
|3 |  TABLE SCAN    |t2  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t1  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.d, ASC])
  3 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  5 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t1  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t2  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([t1.d = t2.c]), nl_params_(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.d = t2.c where t2.b > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t1  |
|3 |  TABLE SCAN    |t2  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter([cast(t2.b, DECIMAL(-1, -1)) > ?]), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.c], [t2.b], [t2.a]), filter(nil), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.d = t2.c where t2.b > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	111	1.1100000000	3	3333	1.1100000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
explain basic select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.d = t2.c where t2.b > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t1  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter([cast(t2.b, DECIMAL(-1, -1)) > ?]), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.d, ASC])
  3 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  5 - output([t2.c], [t2.b], [t2.a]), filter(nil), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.d = t2.c where t2.b > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	111	1.1100000000	3	3333	1.1100000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
explain basic select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.d = t2.c where t2.b > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t1  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t2  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter([cast(t2.b, DECIMAL(-1, -1)) > ?]), 
      conds([t1.d = t2.c]), nl_params_(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.c], [t2.b], [t2.a]), filter(nil), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.d = t2.c where t2.b > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	111	1.1100000000	3	3333	1.1100000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000

explain basic select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | HASH RIGHT OUTER JOIN|    |
|2 |  TABLE SCAN          |t1  |
|3 |  TABLE SCAN          |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
explain basic select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t2  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.d, ASC])
  5 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
explain basic select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t2  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t1  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([t1.d = t2.c]), nl_params_(nil)
  2 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000

explain basic select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.d = t2.c where t2.b > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t2  |
|3 |  TABLE SCAN    |t1  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t2.c], [t2.b], [t2.a]), filter([cast(t2.b, DECIMAL(-1, -1)) > ?]), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)
  3 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.d = t2.c where t2.b > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
1	1	111	1.1100000000	3	3333	1.1100000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
explain basic select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.d = t2.c where t2.b > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t2  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  3 - output([t2.c], [t2.b], [t2.a]), filter([cast(t2.b, DECIMAL(-1, -1)) > ?]), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.d, ASC])
  5 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.d = t2.c where t2.b > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
1	1	111	1.1100000000	3	3333	1.1100000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
explain basic select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.d = t2.c where t2.b > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t2  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t1  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([t1.d = t2.c]), nl_params_(nil)
  2 - output([t2.c], [t2.b], [t2.a]), filter([cast(t2.b, DECIMAL(-1, -1)) > ?]), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.d = t2.c where t2.b > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
1	1	111	1.1100000000	3	3333	1.1100000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000

explain basic select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | MERGE FULL OUTER JOIN|    |
|2 |  SORT                |    |
|3 |   TABLE SCAN         |t1  |
|4 |  SORT                |    |
|5 |   TABLE SCAN         |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.d, ASC])
  3 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  5 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.d = t2.c where t2.b > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter([cast(t2.b, DECIMAL(-1, -1)) > ?]), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.c], [t2.b], [t2.a]), filter(nil), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.d = t2.c where t2.b > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
1	1	111	1.1100000000	3	3333	1.1100000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
explain basic select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.d = t2.c where t2.b > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | MERGE FULL OUTER JOIN|    |
|2 |  SORT                |    |
|3 |   TABLE SCAN         |t1  |
|4 |  SORT                |    |
|5 |   TABLE SCAN         |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter([cast(t2.b, DECIMAL(-1, -1)) > ?]), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.d, ASC])
  3 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  5 - output([t2.c], [t2.b], [t2.a]), filter(nil), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.d = t2.c where t2.b > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
1	1	111	1.1100000000	3	3333	1.1100000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
explain basic select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.d = t2.c where t2.b > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter([cast(t2.b, DECIMAL(-1, -1)) > ?]), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.c], [t2.b], [t2.a]), filter(nil), 
      access([t2.c], [t2.b], [t2.a]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.d = t2.c where t2.b > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
1	1	111	1.1100000000	3	3333	1.1100000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000

explain basic select /*+use_hash(t1,t2)*/* from t1,t2 where t1.d = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t1  |
|3 |  TABLE SCAN|t2  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.b], [t2.a], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1,t2 where t1.d = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
explain basic select /*+use_merge(t1,t2)*/* from t1,t2 where t1.d = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t1  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t2  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.d, ASC])
  3 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), sort_keys([cast(t2.b, DECIMAL(-1, -1)), ASC])
  5 - output([t2.b], [t2.a], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1,t2 where t1.d = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
explain basic select /*+use_nl(t1,t2)*/* from t1,t2 where t1.d = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t1  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([t1.d = cast(t2.b, DECIMAL(-1, -1))]), nl_params_(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.b], [t2.a], [t2.c]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1,t2 where t1.d = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000

explain basic select /*+use_hash(t1,t2)*/* from t1,t2 where t1.c = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t1  |
|3 |  TABLE SCAN|t2  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = t2.c]), other_conds(nil)
  2 - output([t1.c], [t1.a], [t1.b], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1,t2 where t1.c = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
5	5	5.550	NULL	5	555	5.5500000000
explain basic select /*+use_merge(t1,t2)*/* from t1,t2 where t1.c = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t1  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t2  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), sort_keys([cast(t1.c, DECIMAL(-1, -1)), ASC])
  3 - output([t1.c], [t1.a], [t1.b], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  5 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1,t2 where t1.c = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
5	5	5.550	NULL	5	555	5.5500000000
explain basic select /*+use_nl(t1,t2)*/* from t1,t2 where t1.c = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t1  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.c, DECIMAL(-1, -1)) = t2.c]), nl_params_(nil)
  2 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1,t2 where t1.c = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
5	5	5.550	NULL	5	555	5.5500000000

explain basic select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.d = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t1  |
|3 |  TABLE SCAN    |t2  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.b], [t2.a], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.d = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.d = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t1  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.d, ASC])
  3 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), sort_keys([cast(t2.b, DECIMAL(-1, -1)), ASC])
  5 - output([t2.b], [t2.a], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.d = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.d = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t1  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t2  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([t1.d = cast(t2.b, DECIMAL(-1, -1))]), nl_params_(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.b], [t2.a], [t2.c]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.d = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.c = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t1  |
|3 |  TABLE SCAN    |t2  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = t2.c]), other_conds(nil)
  2 - output([t1.c], [t1.a], [t1.b], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.c = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	5	555	5.5500000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.c = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t1  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), sort_keys([cast(t1.c, DECIMAL(-1, -1)), ASC])
  3 - output([t1.c], [t1.a], [t1.b], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  5 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.c = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	5	555	5.5500000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.c = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t1  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t2  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.c, DECIMAL(-1, -1)) = t2.c]), nl_params_(nil)
  2 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.c = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	5	555	5.5500000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.d = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | HASH RIGHT OUTER JOIN|    |
|2 |  TABLE SCAN          |t1  |
|3 |  TABLE SCAN          |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.b], [t2.a], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.d = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
explain basic select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.d = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t2  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t2.a], [t2.b], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), sort_keys([cast(t2.b, DECIMAL(-1, -1)), ASC])
  3 - output([t2.b], [t2.a], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.d, ASC])
  5 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.d = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
explain basic select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.d = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t2  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t1  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([t1.d = cast(t2.b, DECIMAL(-1, -1))]), nl_params_(nil)
  2 - output([t2.b], [t2.a], [t2.c]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.d = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000

explain basic select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.c = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | HASH RIGHT OUTER JOIN|    |
|2 |  TABLE SCAN          |t1  |
|3 |  TABLE SCAN          |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = t2.c]), other_conds(nil)
  2 - output([t1.c], [t1.a], [t1.b], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.c = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
5	5	5.550	NULL	5	555	5.5500000000
explain basic select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.c = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t2  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = t2.c]), other_conds(nil)
  2 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), sort_keys([cast(t1.c, DECIMAL(-1, -1)), ASC])
  5 - output([t1.c], [t1.a], [t1.b], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.c = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
5	5	5.550	NULL	5	555	5.5500000000
explain basic select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.c = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t2  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t1  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([cast(t1.c, DECIMAL(-1, -1)) = t2.c]), nl_params_(nil)
  2 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.c], [t1.a], [t1.b], [t1.d]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.c = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
5	5	5.550	NULL	5	555	5.5500000000

explain basic select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.d = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.b], [t2.a], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.d = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.d = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | MERGE FULL OUTER JOIN|    |
|2 |  SORT                |    |
|3 |   TABLE SCAN         |t1  |
|4 |  SORT                |    |
|5 |   TABLE SCAN         |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.d, ASC])
  3 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), sort_keys([cast(t2.b, DECIMAL(-1, -1)), ASC])
  5 - output([t2.b], [t2.a], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.d = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.d = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = cast(t2.b, DECIMAL(-1, -1))]), other_conds(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.b], [t2.a], [t2.c], [cast(t2.b, DECIMAL(-1, -1))]), filter(nil), 
      access([t2.b], [t2.a], [t2.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.d = t2.b order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	1	2	2.0000000000
1	2	2	2.0000000000	2	2.00	2.0000100000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	2	2.00	2.0000100000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.c = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = t2.c]), other_conds(nil)
  2 - output([t1.c], [t1.a], [t1.b], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.c = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	5	555	5.5500000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.c = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | MERGE FULL OUTER JOIN|    |
|2 |  SORT                |    |
|3 |   TABLE SCAN         |t1  |
|4 |  SORT                |    |
|5 |   TABLE SCAN         |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), sort_keys([cast(t1.c, DECIMAL(-1, -1)), ASC])
  3 - output([t1.c], [t1.a], [t1.b], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  5 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.c = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	5	555	5.5500000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.c = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([cast(t1.c, DECIMAL(-1, -1)) = t2.c]), other_conds(nil)
  2 - output([t1.c], [t1.a], [t1.b], [t1.d], [cast(t1.c, DECIMAL(-1, -1))]), filter(nil), 
      access([t1.c], [t1.a], [t1.b], [t1.d]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.c = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	222	3.3300000000
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	2	222	3.3300000000
NULL	NULL	NULL	NULL	2	333	2.2200000000
NULL	NULL	NULL	NULL	3	3.0	3.0000100000
NULL	NULL	NULL	NULL	3	3333	1.1100000000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	NULL	NULL	NULL
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	NULL	NULL	NULL
3	3	3	3.0000100000	NULL	NULL	NULL
3	3	333	3.3300000000	NULL	NULL	NULL
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	5	555	5.5500000000
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1,t2 where t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t1  |
|3 |  TABLE SCAN|t2  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1,t2 where t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
explain basic select /*+use_merge(t1,t2)*/* from t1,t2 where t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t1  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t2  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.d, ASC])
  3 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  5 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1,t2 where t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
explain basic select /*+use_nl(t1,t2)*/* from t1,t2 where t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t1  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([t1.d = t2.c]), nl_params_(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1,t2 where t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000

explain basic select /*+use_hash(t1,t2)*/* from t1,t2 where t1.d = t2.c and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t1  |
|3 |  TABLE SCAN|t2  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter([t1.a > 1]), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1,t2 where t1.d = t2.c and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
explain basic select /*+use_merge(t1,t2)*/* from t1,t2 where t1.d = t2.c and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t1  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t2  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.d, ASC])
  3 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter([t1.a > 1]), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  5 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1,t2 where t1.d = t2.c and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
explain basic select /*+use_nl(t1,t2)*/* from t1,t2 where t1.d = t2.c and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t2  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([t1.d = t2.c]), nl_params_(nil)
  2 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter([t1.a > 1]), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1,t2 where t1.d = t2.c and t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000

explain basic select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t1  |
|3 |  TABLE SCAN    |t2  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t1  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.d, ASC])
  3 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  5 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t1  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t2  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([t1.d = t2.c]), nl_params_(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.d = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t1  |
|3 |  TABLE SCAN    |t2  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter([t1.a > 1]), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 left join t2 on t1.d = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.d = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t1  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.d, ASC])
  3 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter([t1.a > 1]), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  5 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 left join t2 on t1.d = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.d = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t1  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t2  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([t1.d = t2.c]), nl_params_(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter([t1.a > 1]), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 left join t2 on t1.d = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | HASH RIGHT OUTER JOIN|    |
|2 |  TABLE SCAN          |t1  |
|3 |  TABLE SCAN          |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
explain basic select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t2  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.d, ASC])
  5 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
explain basic select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t2  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t1  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([t1.d = t2.c]), nl_params_(nil)
  2 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000

explain basic select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.d = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t1  |
|3 |  TABLE SCAN|t2  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter([t1.a > 1]), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 right join t2 on t1.d = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
explain basic select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.d = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t2  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t1  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.d, ASC])
  5 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter([t1.a > 1]), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 right join t2 on t1.d = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
explain basic select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.d = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t2  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([t1.d = t2.c]), nl_params_(nil)
  2 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter([t1.a > 1]), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 right join t2 on t1.d = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000

explain basic select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | MERGE FULL OUTER JOIN|    |
|2 |  SORT                |    |
|3 |   TABLE SCAN         |t1  |
|4 |  SORT                |    |
|5 |   TABLE SCAN         |t2  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.d, ASC])
  3 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  5 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===============================
|ID|OPERATOR             |NAME|
-------------------------------
|0 |SORT                 |    |
|1 | HASH FULL OUTER JOIN|    |
|2 |  TABLE SCAN         |t1  |
|3 |  TABLE SCAN         |t2  |
===============================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter(nil), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	2	2.00	2.0000100000
NULL	NULL	NULL	NULL	4	A	4.3300000000
NULL	NULL	NULL	NULL	5	555	5.5500000000
NULL	NULL	NULL	NULL	5	B	5.0000000000
NULL	NULL	NULL	NULL	6	6666	5.5000000000
NULL	NULL	NULL	NULL	6	AB	6.0000000000
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.d = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t1  |
|3 |  TABLE SCAN    |t2  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter([t1.a > 1]), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_hash(t1,t2)*/* from t1 full join t2 on t1.d = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.d = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t1  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t2  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      equal_conds([t1.d = t2.c]), other_conds(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.d, ASC])
  3 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter([t1.a > 1]), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.c, ASC])
  5 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_merge(t1,t2)*/* from t1 full join t2 on t1.d = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL
explain basic select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.d = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t1  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t2  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.a, ASC], [t2.b, ASC], [t2.c, ASC])
  1 - output([t1.a], [t1.b], [t1.c], [t1.d], [t2.a], [t2.b], [t2.c]), filter(nil), 
      conds([t1.d = t2.c]), nl_params_(nil)
  2 - output([t1.d], [t1.a], [t1.b], [t1.c]), filter([t1.a > 1]), 
      access([t1.d], [t1.a], [t1.b], [t1.c]), partitions(p0)
  3 - output([t2.a], [t2.b], [t2.c]), filter(nil)
  4 - output([t2.c], [t2.a], [t2.b]), filter(nil), 
      access([t2.c], [t2.a], [t2.b]), partitions(p0)

select /*+use_nl(t1,t2)*/* from t1 full join t2 on t1.d = t2.c where t1.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
4	4	444	4.4400000000	NULL	NULL	NULL
5	5	5.550	NULL	NULL	NULL	NULL
123	3	2001-01-01	4.4000000000	NULL	NULL	NULL
1224	2	111	3.3000000000	NULL	NULL	NULL

explain basic select /*+use_hash(t5,t6)*/* from t5 join t6 on t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t5  |
|3 |  TABLE SCAN|t6  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.b, TIME(-1, -1)) = t6.a]), other_conds(nil)
  2 - output([t5.b], [t5.a], [t5.c], [cast(t5.b, TIME(-1, -1))]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)
  3 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      access([t6.a], [t6.b], [t6.c], [t6.d]), partitions(p0)

select /*+use_hash(t5,t6)*/* from t5 join t6 on t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
5	12:01:01	00:12:24	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
5	12:01:01	00:12:24	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
explain basic select /*+use_merge(t5,t6)*/* from t5 join t6 on t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t5  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t6  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.b, TIME(-1, -1)) = t6.a]), other_conds(nil)
  2 - output([t5.a], [t5.b], [t5.c], [cast(t5.b, TIME(-1, -1))]), filter(nil), sort_keys([cast(t5.b, TIME(-1, -1)), ASC])
  3 - output([t5.b], [t5.a], [t5.c], [cast(t5.b, TIME(-1, -1))]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)
  4 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t6.a, ASC])
  5 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      access([t6.a], [t6.b], [t6.c], [t6.d]), partitions(p0)

select /*+use_merge(t5,t6)*/* from t5 join t6 on t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
5	12:01:01	00:12:24	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
5	12:01:01	00:12:24	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
explain basic select /*+use_nl(t5,t6)*/* from t5 join t6 on t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t6  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t5  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      conds([cast(t5.b, TIME(-1, -1)) = t6.a]), nl_params_(nil)
  2 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      access([t6.a], [t6.b], [t6.c], [t6.d]), partitions(p0)
  3 - output([t5.a], [t5.b], [t5.c]), filter(nil)
  4 - output([t5.b], [t5.a], [t5.c]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)

select /*+use_nl(t5,t6)*/* from t5 join t6 on t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
5	12:01:01	00:12:24	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
5	12:01:01	00:12:24	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02

explain basic select /*+use_hash(t5,t6)*/* from t5 join t6 on t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t5  |
|3 |  TABLE SCAN|t6  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.b, DATETIME(-1, -1)) = t6.b]), other_conds(nil)
  2 - output([t5.b], [t5.a], [t5.c], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)
  3 - output([t6.b], [t6.a], [t6.c], [t6.d]), filter(nil), 
      access([t6.b], [t6.a], [t6.c], [t6.d]), partitions(p0)

select /*+use_hash(t5,t6)*/* from t5 join t6 on t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
explain basic select /*+use_merge(t5,t6)*/* from t5 join t6 on t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t5  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t6  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.b, DATETIME(-1, -1)) = t6.b]), other_conds(nil)
  2 - output([t5.a], [t5.b], [t5.c], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), sort_keys([cast(t5.b, DATETIME(-1, -1)), ASC])
  3 - output([t5.b], [t5.a], [t5.c], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)
  4 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t6.b, ASC])
  5 - output([t6.b], [t6.a], [t6.c], [t6.d]), filter(nil), 
      access([t6.b], [t6.a], [t6.c], [t6.d]), partitions(p0)

select /*+use_merge(t5,t6)*/* from t5 join t6 on t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
explain basic select /*+use_nl(t5,t6)*/* from t5 join t6 on t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t6  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t5  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      conds([cast(t5.b, DATETIME(-1, -1)) = t6.b]), nl_params_(nil)
  2 - output([t6.b], [t6.a], [t6.c], [t6.d]), filter(nil), 
      access([t6.b], [t6.a], [t6.c], [t6.d]), partitions(p0)
  3 - output([t5.a], [t5.b], [t5.c]), filter(nil)
  4 - output([t5.b], [t5.a], [t5.c]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)

select /*+use_nl(t5,t6)*/* from t5 join t6 on t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02

explain basic select /*+use_hash(t5,t6)*/* from t5 join t6 on t5.b = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t5  |
|3 |  TABLE SCAN|t6  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.b, DATETIME(-1, -1)) = t6.c]), other_conds(nil)
  2 - output([t5.b], [t5.a], [t5.c], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)
  3 - output([t6.c], [t6.a], [t6.b], [t6.d]), filter(nil), 
      access([t6.c], [t6.a], [t6.b], [t6.d]), partitions(p0)

select /*+use_hash(t5,t6)*/* from t5 join t6 on t5.b = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
explain basic select /*+use_merge(t5,t6)*/* from t5 join t6 on t5.b = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t5  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t6  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.b, DATETIME(-1, -1)) = t6.c]), other_conds(nil)
  2 - output([t5.a], [t5.b], [t5.c], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), sort_keys([cast(t5.b, DATETIME(-1, -1)), ASC])
  3 - output([t5.b], [t5.a], [t5.c], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)
  4 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t6.c, ASC])
  5 - output([t6.c], [t6.a], [t6.b], [t6.d]), filter(nil), 
      access([t6.c], [t6.a], [t6.b], [t6.d]), partitions(p0)

select /*+use_merge(t5,t6)*/* from t5 join t6 on t5.b = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
explain basic select /*+use_nl(t5,t6)*/* from t5 join t6 on t5.b = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t6  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t5  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      conds([cast(t5.b, DATETIME(-1, -1)) = t6.c]), nl_params_(nil)
  2 - output([t6.c], [t6.a], [t6.b], [t6.d]), filter(nil), 
      access([t6.c], [t6.a], [t6.b], [t6.d]), partitions(p0)
  3 - output([t5.a], [t5.b], [t5.c]), filter(nil)
  4 - output([t5.b], [t5.a], [t5.c]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)

select /*+use_nl(t5,t6)*/* from t5 join t6 on t5.b = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02

explain basic select /*+use_hash(t5,t6)*/* from t5 join t6 on t5.b = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t5  |
|3 |  TABLE SCAN|t6  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.b, DATETIME(-1, -1)) = cast(t6.d, DATETIME(-1, -1))]), other_conds(nil)
  2 - output([t5.b], [t5.a], [t5.c], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)
  3 - output([t6.d], [t6.a], [t6.b], [t6.c], [cast(t6.d, DATETIME(-1, -1))]), filter(nil), 
      access([t6.d], [t6.a], [t6.b], [t6.c]), partitions(p0)

select /*+use_hash(t5,t6)*/* from t5 join t6 on t5.b = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
explain basic select /*+use_merge(t5,t6)*/* from t5 join t6 on t5.b = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t5  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t6  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.b, DATETIME(-1, -1)) = cast(t6.d, DATETIME(-1, -1))]), other_conds(nil)
  2 - output([t5.a], [t5.b], [t5.c], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), sort_keys([cast(t5.b, DATETIME(-1, -1)), ASC])
  3 - output([t5.b], [t5.a], [t5.c], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)
  4 - output([t6.a], [t6.b], [t6.c], [t6.d], [cast(t6.d, DATETIME(-1, -1))]), filter(nil), sort_keys([cast(t6.d, DATETIME(-1, -1)), ASC])
  5 - output([t6.d], [t6.a], [t6.b], [t6.c], [cast(t6.d, DATETIME(-1, -1))]), filter(nil), 
      access([t6.d], [t6.a], [t6.b], [t6.c]), partitions(p0)

select /*+use_merge(t5,t6)*/* from t5 join t6 on t5.b = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
explain basic select /*+use_nl(t5,t6)*/* from t5 join t6 on t5.b = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t6  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t5  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      conds([cast(t5.b, DATETIME(-1, -1)) = cast(t6.d, DATETIME(-1, -1))]), nl_params_(nil)
  2 - output([t6.d], [t6.a], [t6.b], [t6.c]), filter(nil), 
      access([t6.d], [t6.a], [t6.b], [t6.c]), partitions(p0)
  3 - output([t5.a], [t5.b], [t5.c]), filter(nil)
  4 - output([t5.b], [t5.a], [t5.c]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)

select /*+use_nl(t5,t6)*/* from t5 join t6 on t5.b = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d

explain basic select /*+use_hash(t5,t6)*/* from t5 join t6 on t5.c = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t5  |
|3 |  TABLE SCAN|t6  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.c, TIME(-1, -1)) = t6.a]), other_conds(nil)
  2 - output([t5.c], [t5.a], [t5.b], [cast(t5.c, TIME(-1, -1))]), filter(nil), 
      access([t5.c], [t5.a], [t5.b]), partitions(p0)
  3 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      access([t6.a], [t6.b], [t6.c], [t6.d]), partitions(p0)

select /*+use_hash(t5,t6)*/* from t5 join t6 on t5.c = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
5	12:01:01	00:12:24	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
5	12:01:01	00:12:24	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
explain basic select /*+use_merge(t5,t6)*/* from t5 join t6 on t5.c = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t5  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t6  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.c, TIME(-1, -1)) = t6.a]), other_conds(nil)
  2 - output([t5.a], [t5.b], [t5.c], [cast(t5.c, TIME(-1, -1))]), filter(nil), sort_keys([cast(t5.c, TIME(-1, -1)), ASC])
  3 - output([t5.c], [t5.a], [t5.b], [cast(t5.c, TIME(-1, -1))]), filter(nil), 
      access([t5.c], [t5.a], [t5.b]), partitions(p0)
  4 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t6.a, ASC])
  5 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      access([t6.a], [t6.b], [t6.c], [t6.d]), partitions(p0)

select /*+use_merge(t5,t6)*/* from t5 join t6 on t5.c = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
5	12:01:01	00:12:24	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
5	12:01:01	00:12:24	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
explain basic select /*+use_nl(t5,t6)*/* from t5 join t6 on t5.c = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t6  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t5  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      conds([cast(t5.c, TIME(-1, -1)) = t6.a]), nl_params_(nil)
  2 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      access([t6.a], [t6.b], [t6.c], [t6.d]), partitions(p0)
  3 - output([t5.a], [t5.b], [t5.c]), filter(nil)
  4 - output([t5.c], [t5.a], [t5.b]), filter(nil), 
      access([t5.c], [t5.a], [t5.b]), partitions(p0)

select /*+use_nl(t5,t6)*/* from t5 join t6 on t5.c = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
5	12:01:01	00:12:24	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
5	12:01:01	00:12:24	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10

explain basic select /*+use_hash(t5,t6)*/* from t5 join t6 on t5.c = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t5  |
|3 |  TABLE SCAN|t6  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.c, DATETIME(-1, -1)) = t6.b]), other_conds(nil)
  2 - output([t5.c], [t5.a], [t5.b], [cast(t5.c, DATETIME(-1, -1))]), filter(nil), 
      access([t5.c], [t5.a], [t5.b]), partitions(p0)
  3 - output([t6.b], [t6.a], [t6.c], [t6.d]), filter(nil), 
      access([t6.b], [t6.a], [t6.c], [t6.d]), partitions(p0)

select /*+use_hash(t5,t6)*/* from t5 join t6 on t5.c = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
3	2001-01-01 01:01:01	2001-01-01	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
explain basic select /*+use_merge(t5,t6)*/* from t5 join t6 on t5.c = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t5  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t6  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.c, DATETIME(-1, -1)) = t6.b]), other_conds(nil)
  2 - output([t5.a], [t5.b], [t5.c], [cast(t5.c, DATETIME(-1, -1))]), filter(nil), sort_keys([cast(t5.c, DATETIME(-1, -1)), ASC])
  3 - output([t5.c], [t5.a], [t5.b], [cast(t5.c, DATETIME(-1, -1))]), filter(nil), 
      access([t5.c], [t5.a], [t5.b]), partitions(p0)
  4 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t6.b, ASC])
  5 - output([t6.b], [t6.a], [t6.c], [t6.d]), filter(nil), 
      access([t6.b], [t6.a], [t6.c], [t6.d]), partitions(p0)

select /*+use_merge(t5,t6)*/* from t5 join t6 on t5.c = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
3	2001-01-01 01:01:01	2001-01-01	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
explain basic select /*+use_nl(t5,t6)*/* from t5 join t6 on t5.c = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t6  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t5  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      conds([cast(t5.c, DATETIME(-1, -1)) = t6.b]), nl_params_(nil)
  2 - output([t6.b], [t6.a], [t6.c], [t6.d]), filter(nil), 
      access([t6.b], [t6.a], [t6.c], [t6.d]), partitions(p0)
  3 - output([t5.a], [t5.b], [t5.c]), filter(nil)
  4 - output([t5.c], [t5.a], [t5.b]), filter(nil), 
      access([t5.c], [t5.a], [t5.b]), partitions(p0)

select /*+use_nl(t5,t6)*/* from t5 join t6 on t5.c = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
3	2001-01-01 01:01:01	2001-01-01	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01

explain basic select /*+use_hash(t5,t6)*/* from t5 join t6 on t5.c = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t5  |
|3 |  TABLE SCAN|t6  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.c, DATETIME(-1, -1)) = t6.c]), other_conds(nil)
  2 - output([t5.c], [t5.a], [t5.b], [cast(t5.c, DATETIME(-1, -1))]), filter(nil), 
      access([t5.c], [t5.a], [t5.b]), partitions(p0)
  3 - output([t6.c], [t6.a], [t6.b], [t6.d]), filter(nil), 
      access([t6.c], [t6.a], [t6.b], [t6.d]), partitions(p0)

select /*+use_hash(t5,t6)*/* from t5 join t6 on t5.c = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
explain basic select /*+use_merge(t5,t6)*/* from t5 join t6 on t5.c = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t5  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t6  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.c, DATETIME(-1, -1)) = t6.c]), other_conds(nil)
  2 - output([t5.a], [t5.b], [t5.c], [cast(t5.c, DATETIME(-1, -1))]), filter(nil), sort_keys([cast(t5.c, DATETIME(-1, -1)), ASC])
  3 - output([t5.c], [t5.a], [t5.b], [cast(t5.c, DATETIME(-1, -1))]), filter(nil), 
      access([t5.c], [t5.a], [t5.b]), partitions(p0)
  4 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t6.c, ASC])
  5 - output([t6.c], [t6.a], [t6.b], [t6.d]), filter(nil), 
      access([t6.c], [t6.a], [t6.b], [t6.d]), partitions(p0)

select /*+use_merge(t5,t6)*/* from t5 join t6 on t5.c = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
explain basic select /*+use_nl(t5,t6)*/* from t5 join t6 on t5.c = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t6  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t5  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      conds([cast(t5.c, DATETIME(-1, -1)) = t6.c]), nl_params_(nil)
  2 - output([t6.c], [t6.a], [t6.b], [t6.d]), filter(nil), 
      access([t6.c], [t6.a], [t6.b], [t6.d]), partitions(p0)
  3 - output([t5.a], [t5.b], [t5.c]), filter(nil)
  4 - output([t5.c], [t5.a], [t5.b]), filter(nil), 
      access([t5.c], [t5.a], [t5.b]), partitions(p0)

select /*+use_nl(t5,t6)*/* from t5 join t6 on t5.c = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d

explain basic select /*+use_hash(t5,t6)*/* from t5 join t6 on t5.c = t6.d and t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t5  |
|3 |  TABLE SCAN|t6  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.c, DATETIME(-1, -1)) = cast(t6.d, DATETIME(-1, -1))], [cast(t5.b, DATETIME(-1, -1)) = t6.b]), other_conds(nil)
  2 - output([t5.c], [t5.b], [t5.a], [cast(t5.c, DATETIME(-1, -1))], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), 
      access([t5.c], [t5.b], [t5.a]), partitions(p0)
  3 - output([t6.d], [t6.b], [t6.a], [t6.c], [cast(t6.d, DATETIME(-1, -1))]), filter(nil), 
      access([t6.d], [t6.b], [t6.a], [t6.c]), partitions(p0)

select /*+use_hash(t5,t6)*/* from t5 join t6 on t5.c = t6.d and t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
explain basic select /*+use_merge(t5,t6)*/* from t5 join t6 on t5.c = t6.d and t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t5  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t6  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.c, DATETIME(-1, -1)) = cast(t6.d, DATETIME(-1, -1))], [cast(t5.b, DATETIME(-1, -1)) = t6.b]), other_conds(nil)
  2 - output([t5.a], [t5.b], [t5.c], [cast(t5.c, DATETIME(-1, -1))], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), sort_keys([cast(t5.c, DATETIME(-1, -1)), ASC], [cast(t5.b, DATETIME(-1, -1)), ASC])
  3 - output([t5.c], [t5.b], [t5.a], [cast(t5.c, DATETIME(-1, -1))], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), 
      access([t5.c], [t5.b], [t5.a]), partitions(p0)
  4 - output([t6.a], [t6.b], [t6.c], [t6.d], [cast(t6.d, DATETIME(-1, -1))]), filter(nil), sort_keys([cast(t6.d, DATETIME(-1, -1)), ASC], [t6.b, ASC])
  5 - output([t6.d], [t6.b], [t6.a], [t6.c], [cast(t6.d, DATETIME(-1, -1))]), filter(nil), 
      access([t6.d], [t6.b], [t6.a], [t6.c]), partitions(p0)

select /*+use_merge(t5,t6)*/* from t5 join t6 on t5.c = t6.d and t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
explain basic select /*+use_nl(t5,t6)*/* from t5 join t6 on t5.c = t6.d and t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t6  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t5  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      conds([cast(t5.c, DATETIME(-1, -1)) = cast(t6.d, DATETIME(-1, -1))], [cast(t5.b, DATETIME(-1, -1)) = t6.b]), nl_params_(nil)
  2 - output([t6.d], [t6.b], [t6.a], [t6.c]), filter(nil), 
      access([t6.d], [t6.b], [t6.a], [t6.c]), partitions(p0)
  3 - output([t5.a], [t5.b], [t5.c]), filter(nil)
  4 - output([t5.c], [t5.b], [t5.a]), filter(nil), 
      access([t5.c], [t5.b], [t5.a]), partitions(p0)

select /*+use_nl(t5,t6)*/* from t5 join t6 on t5.c = t6.d and t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01

explain basic select /*+use_hash(t5,t6)*/* from t5 join t6 on t5.c = t6.b and t5.b = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t5  |
|3 |  TABLE SCAN|t6  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.c, DATETIME(-1, -1)) = t6.b], [cast(t5.b, DATETIME(-1, -1)) = cast(t6.d, DATETIME(-1, -1))]), other_conds(nil)
  2 - output([t5.c], [t5.b], [t5.a], [cast(t5.c, DATETIME(-1, -1))], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), 
      access([t5.c], [t5.b], [t5.a]), partitions(p0)
  3 - output([t6.b], [t6.d], [t6.a], [t6.c], [cast(t6.d, DATETIME(-1, -1))]), filter(nil), 
      access([t6.b], [t6.d], [t6.a], [t6.c]), partitions(p0)

select /*+use_hash(t5,t6)*/* from t5 join t6 on t5.c = t6.b and t5.b = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
explain basic select /*+use_merge(t5,t6)*/* from t5 join t6 on t5.c = t6.b and t5.b = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t5  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t6  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.c, DATETIME(-1, -1)) = t6.b], [cast(t5.b, DATETIME(-1, -1)) = cast(t6.d, DATETIME(-1, -1))]), other_conds(nil)
  2 - output([t5.a], [t5.b], [t5.c], [cast(t5.c, DATETIME(-1, -1))], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), sort_keys([cast(t5.c, DATETIME(-1, -1)), ASC], [cast(t5.b, DATETIME(-1, -1)), ASC])
  3 - output([t5.c], [t5.b], [t5.a], [cast(t5.c, DATETIME(-1, -1))], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), 
      access([t5.c], [t5.b], [t5.a]), partitions(p0)
  4 - output([t6.a], [t6.b], [t6.c], [t6.d], [cast(t6.d, DATETIME(-1, -1))]), filter(nil), sort_keys([t6.b, ASC], [cast(t6.d, DATETIME(-1, -1)), ASC])
  5 - output([t6.b], [t6.d], [t6.a], [t6.c], [cast(t6.d, DATETIME(-1, -1))]), filter(nil), 
      access([t6.b], [t6.d], [t6.a], [t6.c]), partitions(p0)

select /*+use_merge(t5,t6)*/* from t5 join t6 on t5.c = t6.b and t5.b = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
explain basic select /*+use_nl(t5,t6)*/* from t5 join t6 on t5.c = t6.b and t5.b = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t6  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t5  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      conds([cast(t5.c, DATETIME(-1, -1)) = t6.b], [cast(t5.b, DATETIME(-1, -1)) = cast(t6.d, DATETIME(-1, -1))]), nl_params_(nil)
  2 - output([t6.b], [t6.d], [t6.a], [t6.c]), filter(nil), 
      access([t6.b], [t6.d], [t6.a], [t6.c]), partitions(p0)
  3 - output([t5.a], [t5.b], [t5.c]), filter(nil)
  4 - output([t5.c], [t5.b], [t5.a]), filter(nil), 
      access([t5.c], [t5.b], [t5.a]), partitions(p0)

select /*+use_nl(t5,t6)*/* from t5 join t6 on t5.c = t6.b and t5.b = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d

explain basic select /*+use_hash(t5,t6)*/* from t5 join t6 on t5.c = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t5  |
|3 |  TABLE SCAN|t6  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.c, DATETIME(-1, -1)) = cast(t6.d, DATETIME(-1, -1))]), other_conds(nil)
  2 - output([t5.c], [t5.a], [t5.b], [cast(t5.c, DATETIME(-1, -1))]), filter(nil), 
      access([t5.c], [t5.a], [t5.b]), partitions(p0)
  3 - output([t6.d], [t6.a], [t6.b], [t6.c], [cast(t6.d, DATETIME(-1, -1))]), filter(nil), 
      access([t6.d], [t6.a], [t6.b], [t6.c]), partitions(p0)

select /*+use_hash(t5,t6)*/* from t5 join t6 on t5.c = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
2	2011-01-01 01:01:02	2011-01-02	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
2	2011-01-01 01:01:02	2011-01-02	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
3	2001-01-01 01:01:01	2001-01-01	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
explain basic select /*+use_merge(t5,t6)*/* from t5 join t6 on t5.c = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t5  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t6  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.c, DATETIME(-1, -1)) = cast(t6.d, DATETIME(-1, -1))]), other_conds(nil)
  2 - output([t5.a], [t5.b], [t5.c], [cast(t5.c, DATETIME(-1, -1))]), filter(nil), sort_keys([cast(t5.c, DATETIME(-1, -1)), ASC])
  3 - output([t5.c], [t5.a], [t5.b], [cast(t5.c, DATETIME(-1, -1))]), filter(nil), 
      access([t5.c], [t5.a], [t5.b]), partitions(p0)
  4 - output([t6.a], [t6.b], [t6.c], [t6.d], [cast(t6.d, DATETIME(-1, -1))]), filter(nil), sort_keys([cast(t6.d, DATETIME(-1, -1)), ASC])
  5 - output([t6.d], [t6.a], [t6.b], [t6.c], [cast(t6.d, DATETIME(-1, -1))]), filter(nil), 
      access([t6.d], [t6.a], [t6.b], [t6.c]), partitions(p0)

select /*+use_merge(t5,t6)*/* from t5 join t6 on t5.c = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
2	2011-01-01 01:01:02	2011-01-02	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
2	2011-01-01 01:01:02	2011-01-02	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
3	2001-01-01 01:01:01	2001-01-01	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
explain basic select /*+use_nl(t5,t6)*/* from t5 join t6 on t5.c = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t6  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t5  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      conds([cast(t5.c, DATETIME(-1, -1)) = cast(t6.d, DATETIME(-1, -1))]), nl_params_(nil)
  2 - output([t6.d], [t6.a], [t6.b], [t6.c]), filter(nil), 
      access([t6.d], [t6.a], [t6.b], [t6.c]), partitions(p0)
  3 - output([t5.a], [t5.b], [t5.c]), filter(nil)
  4 - output([t5.c], [t5.a], [t5.b]), filter(nil), 
      access([t5.c], [t5.a], [t5.b]), partitions(p0)

select /*+use_nl(t5,t6)*/* from t5 join t6 on t5.c = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
2	2011-01-01 01:01:02	2011-01-02	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
2	2011-01-01 01:01:02	2011-01-02	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
3	2001-01-01 01:01:01	2001-01-01	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01

explain basic select /*+use_hash(t1,t6)*/* from t6 join t1 on t1.a = t6.a order by t1.a,t1.b,t1.c,t1.d,t6.a,t6.b,t6.c,t6.d;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t6  |
|3 |  TABLE SCAN|t1  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t6.a], [t6.b], [t6.c], [t6.d], [t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t6.a], [t6.b], [t6.c], [t6.d], [t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      equal_conds([cast(t1.a, TIME(-1, -1)) = t6.a]), other_conds(nil)
  2 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      access([t6.a], [t6.b], [t6.c], [t6.d]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, TIME(-1, -1))]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

select /*+use_hash(t1,t6)*/* from t6 join t1 on t1.a = t6.a order by t1.a,t1.b,t1.c,t1.d,t6.a,t6.b,t6.c,t6.d;
a	b	c	d	a	b	c	d
00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01	123	3	2001-01-01	4.4000000000
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02	1224	2	111	3.3000000000
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10	1224	2	111	3.3000000000
explain basic select /*+use_merge(t1,t6)*/* from t6 join t1 on t1.a = t6.a order by t1.a,t1.b,t1.c,t1.d,t6.a,t6.b,t6.c,t6.d;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t6  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t1  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t6.a], [t6.b], [t6.c], [t6.d], [t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t6.a], [t6.b], [t6.c], [t6.d], [t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      equal_conds([cast(t1.a, TIME(-1, -1)) = t6.a]), other_conds(nil)
  2 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t6.a, ASC])
  3 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      access([t6.a], [t6.b], [t6.c], [t6.d]), partitions(p0)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, TIME(-1, -1))]), filter(nil), sort_keys([cast(t1.a, TIME(-1, -1)), ASC])
  5 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, TIME(-1, -1))]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

select /*+use_merge(t1,t6)*/* from t6 join t1 on t1.a = t6.a order by t1.a,t1.b,t1.c,t1.d,t6.a,t6.b,t6.c,t6.d;
a	b	c	d	a	b	c	d
00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01	123	3	2001-01-01	4.4000000000
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02	1224	2	111	3.3000000000
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10	1224	2	111	3.3000000000
explain basic select /*+use_nl(t1,t6)*/* from t6 join t1 on t1.a = t6.a order by t1.a,t1.b,t1.c,t1.d,t6.a,t6.b,t6.c,t6.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t1  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t6  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t6.a], [t6.b], [t6.c], [t6.d], [t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t6.a], [t6.b], [t6.c], [t6.d], [t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      conds([cast(t1.a, TIME(-1, -1)) = t6.a]), nl_params_(nil)
  2 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)
  3 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil)
  4 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      access([t6.a], [t6.b], [t6.c], [t6.d]), partitions(p0)

select /*+use_nl(t1,t6)*/* from t6 join t1 on t1.a = t6.a order by t1.a,t1.b,t1.c,t1.d,t6.a,t6.b,t6.c,t6.d;
a	b	c	d	a	b	c	d
00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01	123	3	2001-01-01	4.4000000000
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02	1224	2	111	3.3000000000
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10	1224	2	111	3.3000000000

explain basic select /*+use_hash(t8, t6)*/* from t6 join t8 on t6.b = t8.b order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t6  |
|3 |  TABLE SCAN|t8  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), sort_keys([t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC], [t8.a, ASC], [t8.c, ASC], [t8.d, ASC])
  1 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), 
      equal_conds([t6.b = t8.b]), other_conds(nil)
  2 - output([t6.b], [t6.a], [t6.c], [t6.d]), filter(nil), 
      access([t6.b], [t6.a], [t6.c], [t6.d]), partitions(p0)
  3 - output([t8.b], [t8.a], [t8.c], [t8.d]), filter(nil), 
      access([t8.b], [t8.a], [t8.c], [t8.d]), partitions(p0)

select /*+use_hash(t8, t6)*/* from t6 join t8 on t6.b = t8.b order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
a	b	c	d	a	b	c	d
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
explain basic select /*+use_merge(t8, t6)*/* from t6 join t8 on t6.b = t8.b order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t6  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t8  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), sort_keys([t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC], [t8.a, ASC], [t8.c, ASC], [t8.d, ASC])
  1 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), 
      equal_conds([t6.b = t8.b]), other_conds(nil)
  2 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t6.b, ASC])
  3 - output([t6.b], [t6.a], [t6.c], [t6.d]), filter(nil), 
      access([t6.b], [t6.a], [t6.c], [t6.d]), partitions(p0)
  4 - output([t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), sort_keys([t8.b, ASC])
  5 - output([t8.b], [t8.a], [t8.c], [t8.d]), filter(nil), 
      access([t8.b], [t8.a], [t8.c], [t8.d]), partitions(p0)

select /*+use_merge(t8, t6)*/* from t6 join t8 on t6.b = t8.b order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
a	b	c	d	a	b	c	d
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
explain basic select /*+use_nl(t8, t6)*/* from t6 join t8 on t6.b = t8.b order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t8  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t6  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), sort_keys([t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC], [t8.a, ASC], [t8.c, ASC], [t8.d, ASC])
  1 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), 
      conds([t6.b = t8.b]), nl_params_(nil)
  2 - output([t8.b], [t8.a], [t8.c], [t8.d]), filter(nil), 
      access([t8.b], [t8.a], [t8.c], [t8.d]), partitions(p0)
  3 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil)
  4 - output([t6.b], [t6.a], [t6.c], [t6.d]), filter(nil), 
      access([t6.b], [t6.a], [t6.c], [t6.d]), partitions(p0)

select /*+use_nl(t8, t6)*/* from t6 join t8 on t6.b = t8.b order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
a	b	c	d	a	b	c	d
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01

explain basic select /*+use_hash(t8, t6)*/* from t6 join t8 on t6.c = t8.b order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t6  |
|3 |  TABLE SCAN|t8  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), sort_keys([t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC], [t8.a, ASC], [t8.c, ASC], [t8.d, ASC])
  1 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), 
      equal_conds([t6.c = t8.b]), other_conds(nil)
  2 - output([t6.c], [t6.a], [t6.b], [t6.d]), filter(nil), 
      access([t6.c], [t6.a], [t6.b], [t6.d]), partitions(p0)
  3 - output([t8.b], [t8.a], [t8.c], [t8.d]), filter(nil), 
      access([t8.b], [t8.a], [t8.c], [t8.d]), partitions(p0)

select /*+use_hash(t8, t6)*/* from t6 join t8 on t6.c = t8.b order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
a	b	c	d	a	b	c	d
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
explain basic select /*+use_merge(t8, t6)*/* from t6 join t8 on t6.c = t8.b order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t6  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t8  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), sort_keys([t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC], [t8.a, ASC], [t8.c, ASC], [t8.d, ASC])
  1 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), 
      equal_conds([t6.c = t8.b]), other_conds(nil)
  2 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t6.c, ASC])
  3 - output([t6.c], [t6.a], [t6.b], [t6.d]), filter(nil), 
      access([t6.c], [t6.a], [t6.b], [t6.d]), partitions(p0)
  4 - output([t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), sort_keys([t8.b, ASC])
  5 - output([t8.b], [t8.a], [t8.c], [t8.d]), filter(nil), 
      access([t8.b], [t8.a], [t8.c], [t8.d]), partitions(p0)

select /*+use_merge(t8, t6)*/* from t6 join t8 on t6.c = t8.b order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
a	b	c	d	a	b	c	d
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
explain basic select /*+use_nl(t8, t6)*/* from t6 join t8 on t6.c = t8.b order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t8  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t6  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), sort_keys([t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC], [t8.a, ASC], [t8.c, ASC], [t8.d, ASC])
  1 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), 
      conds([t6.c = t8.b]), nl_params_(nil)
  2 - output([t8.b], [t8.a], [t8.c], [t8.d]), filter(nil), 
      access([t8.b], [t8.a], [t8.c], [t8.d]), partitions(p0)
  3 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil)
  4 - output([t6.c], [t6.a], [t6.b], [t6.d]), filter(nil), 
      access([t6.c], [t6.a], [t6.b], [t6.d]), partitions(p0)

select /*+use_nl(t8, t6)*/* from t6 join t8 on t6.c = t8.b order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
a	b	c	d	a	b	c	d
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01

explain basic select /*+use_hash(t8, t6)*/* from t6 join t8 on t6.b = t8.c order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t6  |
|3 |  TABLE SCAN|t8  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), sort_keys([t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC], [t8.a, ASC], [t8.b, ASC], [t8.d, ASC])
  1 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), 
      equal_conds([t6.b = t8.c]), other_conds(nil)
  2 - output([t6.b], [t6.a], [t6.c], [t6.d]), filter(nil), 
      access([t6.b], [t6.a], [t6.c], [t6.d]), partitions(p0)
  3 - output([t8.c], [t8.a], [t8.b], [t8.d]), filter(nil), 
      access([t8.c], [t8.a], [t8.b], [t8.d]), partitions(p0)

select /*+use_hash(t8, t6)*/* from t6 join t8 on t6.b = t8.c order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
a	b	c	d	a	b	c	d
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02	  A	2011-01-01 01:01:02	2011-01-02 01:01:01.000000	2001-01-01
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10	  A	2011-01-01 01:01:02	2011-01-02 01:01:01.000000	2001-01-01
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
explain basic select /*+use_merge(t8, t6)*/* from t6 join t8 on t6.b = t8.c order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t6  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t8  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), sort_keys([t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC], [t8.a, ASC], [t8.b, ASC], [t8.d, ASC])
  1 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), 
      equal_conds([t6.b = t8.c]), other_conds(nil)
  2 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t6.b, ASC])
  3 - output([t6.b], [t6.a], [t6.c], [t6.d]), filter(nil), 
      access([t6.b], [t6.a], [t6.c], [t6.d]), partitions(p0)
  4 - output([t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), sort_keys([t8.c, ASC])
  5 - output([t8.c], [t8.a], [t8.b], [t8.d]), filter(nil), 
      access([t8.c], [t8.a], [t8.b], [t8.d]), partitions(p0)

select /*+use_merge(t8, t6)*/* from t6 join t8 on t6.b = t8.c order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
a	b	c	d	a	b	c	d
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02	  A	2011-01-01 01:01:02	2011-01-02 01:01:01.000000	2001-01-01
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10	  A	2011-01-01 01:01:02	2011-01-02 01:01:01.000000	2001-01-01
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
explain basic select /*+use_nl(t8, t6)*/* from t6 join t8 on t6.b = t8.c order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t8  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t6  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), sort_keys([t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC], [t8.a, ASC], [t8.b, ASC], [t8.d, ASC])
  1 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), 
      conds([t6.b = t8.c]), nl_params_(nil)
  2 - output([t8.c], [t8.a], [t8.b], [t8.d]), filter(nil), 
      access([t8.c], [t8.a], [t8.b], [t8.d]), partitions(p0)
  3 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil)
  4 - output([t6.b], [t6.a], [t6.c], [t6.d]), filter(nil), 
      access([t6.b], [t6.a], [t6.c], [t6.d]), partitions(p0)

select /*+use_nl(t8, t6)*/* from t6 join t8 on t6.b = t8.c order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
a	b	c	d	a	b	c	d
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02	  A	2011-01-01 01:01:02	2011-01-02 01:01:01.000000	2001-01-01
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10	  A	2011-01-01 01:01:02	2011-01-02 01:01:01.000000	2001-01-01
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01

explain basic select /*+use_hash(t8, t6)*/* from t6 join t8 on t6.c = t8.c order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t6  |
|3 |  TABLE SCAN|t8  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), sort_keys([t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC], [t8.a, ASC], [t8.b, ASC], [t8.d, ASC])
  1 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), 
      equal_conds([t6.c = t8.c]), other_conds(nil)
  2 - output([t6.c], [t6.a], [t6.b], [t6.d]), filter(nil), 
      access([t6.c], [t6.a], [t6.b], [t6.d]), partitions(p0)
  3 - output([t8.c], [t8.a], [t8.b], [t8.d]), filter(nil), 
      access([t8.c], [t8.a], [t8.b], [t8.d]), partitions(p0)

select /*+use_hash(t8, t6)*/* from t6 join t8 on t6.c = t8.c order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
a	b	c	d	a	b	c	d
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02	  A	2011-01-01 01:01:02	2011-01-02 01:01:01.000000	2001-01-01
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10	  A	2011-01-01 01:01:02	2011-01-02 01:01:01.000000	2001-01-01
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
explain basic select /*+use_merge(t8, t6)*/* from t6 join t8 on t6.c = t8.c order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t6  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t8  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), sort_keys([t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC], [t8.a, ASC], [t8.b, ASC], [t8.d, ASC])
  1 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), 
      equal_conds([t6.c = t8.c]), other_conds(nil)
  2 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t6.c, ASC])
  3 - output([t6.c], [t6.a], [t6.b], [t6.d]), filter(nil), 
      access([t6.c], [t6.a], [t6.b], [t6.d]), partitions(p0)
  4 - output([t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), sort_keys([t8.c, ASC])
  5 - output([t8.c], [t8.a], [t8.b], [t8.d]), filter(nil), 
      access([t8.c], [t8.a], [t8.b], [t8.d]), partitions(p0)

select /*+use_merge(t8, t6)*/* from t6 join t8 on t6.c = t8.c order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
a	b	c	d	a	b	c	d
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02	  A	2011-01-01 01:01:02	2011-01-02 01:01:01.000000	2001-01-01
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10	  A	2011-01-01 01:01:02	2011-01-02 01:01:01.000000	2001-01-01
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
explain basic select /*+use_nl(t8, t6)*/* from t6 join t8 on t6.c = t8.c order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t8  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t6  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), sort_keys([t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC], [t8.a, ASC], [t8.b, ASC], [t8.d, ASC])
  1 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), 
      conds([t6.c = t8.c]), nl_params_(nil)
  2 - output([t8.c], [t8.a], [t8.b], [t8.d]), filter(nil), 
      access([t8.c], [t8.a], [t8.b], [t8.d]), partitions(p0)
  3 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil)
  4 - output([t6.c], [t6.a], [t6.b], [t6.d]), filter(nil), 
      access([t6.c], [t6.a], [t6.b], [t6.d]), partitions(p0)

select /*+use_nl(t8, t6)*/* from t6 join t8 on t6.c = t8.c order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
a	b	c	d	a	b	c	d
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02	  A	2011-01-01 01:01:02	2011-01-02 01:01:01.000000	2001-01-01
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10	  A	2011-01-01 01:01:02	2011-01-02 01:01:01.000000	2001-01-01
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01

explain basic select /*+use_hash(t8, t6)*/* from t6 join t8 on t6.d = t8.d order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
Query Plan
======================
|ID|OPERATOR    |NAME|
----------------------
|0 |SORT        |    |
|1 | HASH JOIN  |    |
|2 |  TABLE SCAN|t6  |
|3 |  TABLE SCAN|t8  |
======================

Outputs & filters: 
-------------------------------------
  0 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), sort_keys([t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC], [t8.a, ASC], [t8.b, ASC], [t8.c, ASC])
  1 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), 
      equal_conds([t6.d = t8.d]), other_conds(nil)
  2 - output([t6.d], [t6.a], [t6.b], [t6.c]), filter(nil), 
      access([t6.d], [t6.a], [t6.b], [t6.c]), partitions(p0)
  3 - output([t8.d], [t8.a], [t8.b], [t8.c]), filter(nil), 
      access([t8.d], [t8.a], [t8.b], [t8.c]), partitions(p0)

select /*+use_hash(t8, t6)*/* from t6 join t8 on t6.d = t8.d order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
a	b	c	d	a	b	c	d
00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01	  A	2011-01-01 01:01:02	2011-01-02 01:01:01.000000	2001-01-01
00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01	  B	2001-01-01 01:01:01	2011-01-02 01:01:02.000000	2001-01-01
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01	  D	2001-10-01 01:01:00	2001-01-01 01:01:02.000000	2011-01-01
explain basic select /*+use_merge(t8, t6)*/* from t6 join t8 on t6.d = t8.d order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
Query Plan
=======================
|ID|OPERATOR     |NAME|
-----------------------
|0 |SORT         |    |
|1 | MERGE JOIN  |    |
|2 |  SORT       |    |
|3 |   TABLE SCAN|t6  |
|4 |  SORT       |    |
|5 |   TABLE SCAN|t8  |
=======================

Outputs & filters: 
-------------------------------------
  0 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), sort_keys([t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC], [t8.a, ASC], [t8.b, ASC], [t8.c, ASC])
  1 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), 
      equal_conds([t6.d = t8.d]), other_conds(nil)
  2 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t6.d, ASC])
  3 - output([t6.d], [t6.a], [t6.b], [t6.c]), filter(nil), 
      access([t6.d], [t6.a], [t6.b], [t6.c]), partitions(p0)
  4 - output([t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), sort_keys([t8.d, ASC])
  5 - output([t8.d], [t8.a], [t8.b], [t8.c]), filter(nil), 
      access([t8.d], [t8.a], [t8.b], [t8.c]), partitions(p0)

select /*+use_merge(t8, t6)*/* from t6 join t8 on t6.d = t8.d order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
a	b	c	d	a	b	c	d
00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01	  A	2011-01-01 01:01:02	2011-01-02 01:01:01.000000	2001-01-01
00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01	  B	2001-01-01 01:01:01	2011-01-02 01:01:02.000000	2001-01-01
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01	  D	2001-10-01 01:01:00	2001-01-01 01:01:02.000000	2011-01-01
explain basic select /*+use_nl(t8, t6)*/* from t6 join t8 on t6.d = t8.d order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | NESTED-LOOP JOIN|    |
|2 |  TABLE SCAN     |t8  |
|3 |  MATERIAL       |    |
|4 |   TABLE SCAN    |t6  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), sort_keys([t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC], [t8.a, ASC], [t8.b, ASC], [t8.c, ASC])
  1 - output([t6.a], [t6.b], [t6.c], [t6.d], [t8.a], [t8.b], [t8.c], [t8.d]), filter(nil), 
      conds([t6.d = t8.d]), nl_params_(nil)
  2 - output([t8.d], [t8.a], [t8.b], [t8.c]), filter(nil), 
      access([t8.d], [t8.a], [t8.b], [t8.c]), partitions(p0)
  3 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil)
  4 - output([t6.d], [t6.a], [t6.b], [t6.c]), filter(nil), 
      access([t6.d], [t6.a], [t6.b], [t6.c]), partitions(p0)

select /*+use_nl(t8, t6)*/* from t6 join t8 on t6.d = t8.d order by t6.a,t6.b,t6.c,t6.d,t8.a,t8.b,t8.c,t8.d;
a	b	c	d	a	b	c	d
00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01	  A	2011-01-01 01:01:02	2011-01-02 01:01:01.000000	2001-01-01
00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01	  B	2001-01-01 01:01:01	2011-01-02 01:01:02.000000	2001-01-01
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01	  D	2001-10-01 01:01:00	2001-01-01 01:01:02.000000	2011-01-01

explain basic select /*+use_hash(t5,t6)*/* from t5 left join t6 on t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t5  |
|3 |  TABLE SCAN    |t6  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.b, TIME(-1, -1)) = t6.a]), other_conds(nil)
  2 - output([t5.b], [t5.a], [t5.c], [cast(t5.b, TIME(-1, -1))]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)
  3 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      access([t6.a], [t6.b], [t6.c], [t6.d]), partitions(p0)

select /*+use_hash(t5,t6)*/* from t5 left join t6 on t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
5	12:01:01	00:12:24	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
explain basic select /*+use_merge(t5,t6)*/* from t5 left join t6 on t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t5  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t6  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.b, TIME(-1, -1)) = t6.a]), other_conds(nil)
  2 - output([t5.a], [t5.b], [t5.c], [cast(t5.b, TIME(-1, -1))]), filter(nil), sort_keys([cast(t5.b, TIME(-1, -1)), ASC])
  3 - output([t5.b], [t5.a], [t5.c], [cast(t5.b, TIME(-1, -1))]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)
  4 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t6.a, ASC])
  5 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      access([t6.a], [t6.b], [t6.c], [t6.d]), partitions(p0)

select /*+use_merge(t5,t6)*/* from t5 left join t6 on t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
5	12:01:01	00:12:24	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
explain basic select /*+use_nl(t5,t6)*/* from t5 left join t6 on t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t5  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t6  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      conds([cast(t5.b, TIME(-1, -1)) = t6.a]), nl_params_(nil)
  2 - output([t5.b], [t5.a], [t5.c]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)
  3 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil)
  4 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      access([t6.a], [t6.b], [t6.c], [t6.d]), partitions(p0)

select /*+use_nl(t5,t6)*/* from t5 left join t6 on t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
5	12:01:01	00:12:24	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02

explain basic select /*+use_hash(t5,t6)*/* from t5 left join t6 on t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t5  |
|3 |  TABLE SCAN    |t6  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.b, DATETIME(-1, -1)) = t6.b]), other_conds(nil)
  2 - output([t5.b], [t5.a], [t5.c], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)
  3 - output([t6.b], [t6.a], [t6.c], [t6.d]), filter(nil), 
      access([t6.b], [t6.a], [t6.c], [t6.d]), partitions(p0)

select /*+use_hash(t5,t6)*/* from t5 left join t6 on t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
explain basic select /*+use_merge(t5,t6)*/* from t5 left join t6 on t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t5  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t6  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.b, DATETIME(-1, -1)) = t6.b]), other_conds(nil)
  2 - output([t5.a], [t5.b], [t5.c], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), sort_keys([cast(t5.b, DATETIME(-1, -1)), ASC])
  3 - output([t5.b], [t5.a], [t5.c], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)
  4 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t6.b, ASC])
  5 - output([t6.b], [t6.a], [t6.c], [t6.d]), filter(nil), 
      access([t6.b], [t6.a], [t6.c], [t6.d]), partitions(p0)

select /*+use_merge(t5,t6)*/* from t5 left join t6 on t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
explain basic select /*+use_nl(t5,t6)*/* from t5 left join t6 on t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t5  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t6  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      conds([cast(t5.b, DATETIME(-1, -1)) = t6.b]), nl_params_(nil)
  2 - output([t5.b], [t5.a], [t5.c]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)
  3 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil)
  4 - output([t6.b], [t6.a], [t6.c], [t6.d]), filter(nil), 
      access([t6.b], [t6.a], [t6.c], [t6.d]), partitions(p0)

select /*+use_nl(t5,t6)*/* from t5 left join t6 on t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL

explain basic select /*+use_hash(t5,t6)*/* from t5 left join t6 on t5.b = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t5  |
|3 |  TABLE SCAN    |t6  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.b, DATETIME(-1, -1)) = t6.c]), other_conds(nil)
  2 - output([t5.b], [t5.a], [t5.c], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)
  3 - output([t6.c], [t6.a], [t6.b], [t6.d]), filter(nil), 
      access([t6.c], [t6.a], [t6.b], [t6.d]), partitions(p0)

select /*+use_hash(t5,t6)*/* from t5 left join t6 on t5.b = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
explain basic select /*+use_merge(t5,t6)*/* from t5 left join t6 on t5.b = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t5  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t6  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.b, DATETIME(-1, -1)) = t6.c]), other_conds(nil)
  2 - output([t5.a], [t5.b], [t5.c], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), sort_keys([cast(t5.b, DATETIME(-1, -1)), ASC])
  3 - output([t5.b], [t5.a], [t5.c], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)
  4 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t6.c, ASC])
  5 - output([t6.c], [t6.a], [t6.b], [t6.d]), filter(nil), 
      access([t6.c], [t6.a], [t6.b], [t6.d]), partitions(p0)

select /*+use_merge(t5,t6)*/* from t5 left join t6 on t5.b = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
explain basic select /*+use_nl(t5,t6)*/* from t5 left join t6 on t5.b = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t5  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t6  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      conds([cast(t5.b, DATETIME(-1, -1)) = t6.c]), nl_params_(nil)
  2 - output([t5.b], [t5.a], [t5.c]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)
  3 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil)
  4 - output([t6.c], [t6.a], [t6.b], [t6.d]), filter(nil), 
      access([t6.c], [t6.a], [t6.b], [t6.d]), partitions(p0)

select /*+use_nl(t5,t6)*/* from t5 left join t6 on t5.b = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL

explain basic select /*+use_hash(t5,t6)*/* from t5 left join t6 on t5.b = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t5  |
|3 |  TABLE SCAN    |t6  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.b, DATETIME(-1, -1)) = cast(t6.d, DATETIME(-1, -1))]), other_conds(nil)
  2 - output([t5.b], [t5.a], [t5.c], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)
  3 - output([t6.d], [t6.a], [t6.b], [t6.c], [cast(t6.d, DATETIME(-1, -1))]), filter(nil), 
      access([t6.d], [t6.a], [t6.b], [t6.c]), partitions(p0)

select /*+use_hash(t5,t6)*/* from t5 left join t6 on t5.b = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
explain basic select /*+use_merge(t5,t6)*/* from t5 left join t6 on t5.b = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t5  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t6  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.b, DATETIME(-1, -1)) = cast(t6.d, DATETIME(-1, -1))]), other_conds(nil)
  2 - output([t5.a], [t5.b], [t5.c], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), sort_keys([cast(t5.b, DATETIME(-1, -1)), ASC])
  3 - output([t5.b], [t5.a], [t5.c], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)
  4 - output([t6.a], [t6.b], [t6.c], [t6.d], [cast(t6.d, DATETIME(-1, -1))]), filter(nil), sort_keys([cast(t6.d, DATETIME(-1, -1)), ASC])
  5 - output([t6.d], [t6.a], [t6.b], [t6.c], [cast(t6.d, DATETIME(-1, -1))]), filter(nil), 
      access([t6.d], [t6.a], [t6.b], [t6.c]), partitions(p0)

select /*+use_merge(t5,t6)*/* from t5 left join t6 on t5.b = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
explain basic select /*+use_nl(t5,t6)*/* from t5 left join t6 on t5.b = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t5  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t6  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      conds([cast(t5.b, DATETIME(-1, -1)) = cast(t6.d, DATETIME(-1, -1))]), nl_params_(nil)
  2 - output([t5.b], [t5.a], [t5.c]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)
  3 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil)
  4 - output([t6.d], [t6.a], [t6.b], [t6.c]), filter(nil), 
      access([t6.d], [t6.a], [t6.b], [t6.c]), partitions(p0)

select /*+use_nl(t5,t6)*/* from t5 left join t6 on t5.b = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL

explain basic select /*+use_hash(t5,t6)*/* from t5 left join t6 on t5.c = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t5  |
|3 |  TABLE SCAN    |t6  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.c, TIME(-1, -1)) = t6.a]), other_conds(nil)
  2 - output([t5.c], [t5.a], [t5.b], [cast(t5.c, TIME(-1, -1))]), filter(nil), 
      access([t5.c], [t5.a], [t5.b]), partitions(p0)
  3 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      access([t6.a], [t6.b], [t6.c], [t6.d]), partitions(p0)

select /*+use_hash(t5,t6)*/* from t5 left join t6 on t5.c = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
5	12:01:01	00:12:24	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
explain basic select /*+use_merge(t5,t6)*/* from t5 left join t6 on t5.c = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t5  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t6  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.c, TIME(-1, -1)) = t6.a]), other_conds(nil)
  2 - output([t5.a], [t5.b], [t5.c], [cast(t5.c, TIME(-1, -1))]), filter(nil), sort_keys([cast(t5.c, TIME(-1, -1)), ASC])
  3 - output([t5.c], [t5.a], [t5.b], [cast(t5.c, TIME(-1, -1))]), filter(nil), 
      access([t5.c], [t5.a], [t5.b]), partitions(p0)
  4 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t6.a, ASC])
  5 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      access([t6.a], [t6.b], [t6.c], [t6.d]), partitions(p0)

select /*+use_merge(t5,t6)*/* from t5 left join t6 on t5.c = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
5	12:01:01	00:12:24	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
explain basic select /*+use_nl(t5,t6)*/* from t5 left join t6 on t5.c = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t5  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t6  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      conds([cast(t5.c, TIME(-1, -1)) = t6.a]), nl_params_(nil)
  2 - output([t5.c], [t5.a], [t5.b]), filter(nil), 
      access([t5.c], [t5.a], [t5.b]), partitions(p0)
  3 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil)
  4 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      access([t6.a], [t6.b], [t6.c], [t6.d]), partitions(p0)

select /*+use_nl(t5,t6)*/* from t5 left join t6 on t5.c = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
5	12:01:01	00:12:24	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10

explain basic select /*+use_hash(t5,t6)*/* from t5 left join t6 on t5.c = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t5  |
|3 |  TABLE SCAN    |t6  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.c, DATETIME(-1, -1)) = t6.b]), other_conds(nil)
  2 - output([t5.c], [t5.a], [t5.b], [cast(t5.c, DATETIME(-1, -1))]), filter(nil), 
      access([t5.c], [t5.a], [t5.b]), partitions(p0)
  3 - output([t6.b], [t6.a], [t6.c], [t6.d]), filter(nil), 
      access([t6.b], [t6.a], [t6.c], [t6.d]), partitions(p0)

select /*+use_hash(t5,t6)*/* from t5 left join t6 on t5.c = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
explain basic select /*+use_merge(t5,t6)*/* from t5 left join t6 on t5.c = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t5  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t6  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.c, DATETIME(-1, -1)) = t6.b]), other_conds(nil)
  2 - output([t5.a], [t5.b], [t5.c], [cast(t5.c, DATETIME(-1, -1))]), filter(nil), sort_keys([cast(t5.c, DATETIME(-1, -1)), ASC])
  3 - output([t5.c], [t5.a], [t5.b], [cast(t5.c, DATETIME(-1, -1))]), filter(nil), 
      access([t5.c], [t5.a], [t5.b]), partitions(p0)
  4 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t6.b, ASC])
  5 - output([t6.b], [t6.a], [t6.c], [t6.d]), filter(nil), 
      access([t6.b], [t6.a], [t6.c], [t6.d]), partitions(p0)

select /*+use_merge(t5,t6)*/* from t5 left join t6 on t5.c = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
explain basic select /*+use_nl(t5,t6)*/* from t5 left join t6 on t5.c = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t5  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t6  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      conds([cast(t5.c, DATETIME(-1, -1)) = t6.b]), nl_params_(nil)
  2 - output([t5.c], [t5.a], [t5.b]), filter(nil), 
      access([t5.c], [t5.a], [t5.b]), partitions(p0)
  3 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil)
  4 - output([t6.b], [t6.a], [t6.c], [t6.d]), filter(nil), 
      access([t6.b], [t6.a], [t6.c], [t6.d]), partitions(p0)

select /*+use_nl(t5,t6)*/* from t5 left join t6 on t5.c = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL

explain basic select /*+use_hash(t5,t6)*/* from t5 left join t6 on t5.c = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t5  |
|3 |  TABLE SCAN    |t6  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.c, DATETIME(-1, -1)) = t6.c]), other_conds(nil)
  2 - output([t5.c], [t5.a], [t5.b], [cast(t5.c, DATETIME(-1, -1))]), filter(nil), 
      access([t5.c], [t5.a], [t5.b]), partitions(p0)
  3 - output([t6.c], [t6.a], [t6.b], [t6.d]), filter(nil), 
      access([t6.c], [t6.a], [t6.b], [t6.d]), partitions(p0)

select /*+use_hash(t5,t6)*/* from t5 left join t6 on t5.c = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
explain basic select /*+use_merge(t5,t6)*/* from t5 left join t6 on t5.c = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t5  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t6  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.c, DATETIME(-1, -1)) = t6.c]), other_conds(nil)
  2 - output([t5.a], [t5.b], [t5.c], [cast(t5.c, DATETIME(-1, -1))]), filter(nil), sort_keys([cast(t5.c, DATETIME(-1, -1)), ASC])
  3 - output([t5.c], [t5.a], [t5.b], [cast(t5.c, DATETIME(-1, -1))]), filter(nil), 
      access([t5.c], [t5.a], [t5.b]), partitions(p0)
  4 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t6.c, ASC])
  5 - output([t6.c], [t6.a], [t6.b], [t6.d]), filter(nil), 
      access([t6.c], [t6.a], [t6.b], [t6.d]), partitions(p0)

select /*+use_merge(t5,t6)*/* from t5 left join t6 on t5.c = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
explain basic select /*+use_nl(t5,t6)*/* from t5 left join t6 on t5.c = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t5  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t6  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      conds([cast(t5.c, DATETIME(-1, -1)) = t6.c]), nl_params_(nil)
  2 - output([t5.c], [t5.a], [t5.b]), filter(nil), 
      access([t5.c], [t5.a], [t5.b]), partitions(p0)
  3 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil)
  4 - output([t6.c], [t6.a], [t6.b], [t6.d]), filter(nil), 
      access([t6.c], [t6.a], [t6.b], [t6.d]), partitions(p0)

select /*+use_nl(t5,t6)*/* from t5 left join t6 on t5.c = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL

explain basic select /*+use_hash(t5,t6)*/* from t5 left join t6 on t5.c = t6.a and t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t5  |
|3 |  TABLE SCAN    |t6  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.c, TIME(-1, -1)) = t6.a], [cast(t5.b, DATETIME(-1, -1)) = t6.b]), other_conds(nil)
  2 - output([t5.c], [t5.b], [t5.a], [cast(t5.c, TIME(-1, -1))], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), 
      access([t5.c], [t5.b], [t5.a]), partitions(p0)
  3 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      access([t6.a], [t6.b], [t6.c], [t6.d]), partitions(p0)

select /*+use_hash(t5,t6)*/* from t5 left join t6 on t5.c = t6.a and t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
explain basic select /*+use_merge(t5,t6)*/* from t5 left join t6 on t5.c = t6.a and t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t5  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t6  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.c, TIME(-1, -1)) = t6.a], [cast(t5.b, DATETIME(-1, -1)) = t6.b]), other_conds(nil)
  2 - output([t5.a], [t5.b], [t5.c], [cast(t5.c, TIME(-1, -1))], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), sort_keys([cast(t5.c, TIME(-1, -1)), ASC], [cast(t5.b, DATETIME(-1, -1)), ASC])
  3 - output([t5.c], [t5.b], [t5.a], [cast(t5.c, TIME(-1, -1))], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), 
      access([t5.c], [t5.b], [t5.a]), partitions(p0)
  4 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t6.a, ASC], [t6.b, ASC])
  5 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      access([t6.a], [t6.b], [t6.c], [t6.d]), partitions(p0)

select /*+use_merge(t5,t6)*/* from t5 left join t6 on t5.c = t6.a and t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
explain basic select /*+use_nl(t5,t6)*/* from t5 left join t6 on t5.c = t6.a and t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t5  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t6  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      conds([cast(t5.c, TIME(-1, -1)) = t6.a], [cast(t5.b, DATETIME(-1, -1)) = t6.b]), nl_params_(nil)
  2 - output([t5.c], [t5.b], [t5.a]), filter(nil), 
      access([t5.c], [t5.b], [t5.a]), partitions(p0)
  3 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil)
  4 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      access([t6.a], [t6.b], [t6.c], [t6.d]), partitions(p0)

select /*+use_nl(t5,t6)*/* from t5 left join t6 on t5.c = t6.a and t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL

explain basic select /*+use_hash(t5,t6)*/* from t5 left join t6 on t5.c = t6.b and t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t5  |
|3 |  TABLE SCAN    |t6  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.c, DATETIME(-1, -1)) = t6.b], [cast(t5.b, TIME(-1, -1)) = t6.a]), other_conds(nil)
  2 - output([t5.c], [t5.b], [t5.a], [cast(t5.c, DATETIME(-1, -1))], [cast(t5.b, TIME(-1, -1))]), filter(nil), 
      access([t5.c], [t5.b], [t5.a]), partitions(p0)
  3 - output([t6.b], [t6.a], [t6.c], [t6.d]), filter(nil), 
      access([t6.b], [t6.a], [t6.c], [t6.d]), partitions(p0)

select /*+use_hash(t5,t6)*/* from t5 left join t6 on t5.c = t6.b and t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
explain basic select /*+use_merge(t5,t6)*/* from t5 left join t6 on t5.c = t6.b and t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t5  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t6  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.c, DATETIME(-1, -1)) = t6.b], [cast(t5.b, TIME(-1, -1)) = t6.a]), other_conds(nil)
  2 - output([t5.a], [t5.b], [t5.c], [cast(t5.c, DATETIME(-1, -1))], [cast(t5.b, TIME(-1, -1))]), filter(nil), sort_keys([cast(t5.c, DATETIME(-1, -1)), ASC], [cast(t5.b, TIME(-1, -1)), ASC])
  3 - output([t5.c], [t5.b], [t5.a], [cast(t5.c, DATETIME(-1, -1))], [cast(t5.b, TIME(-1, -1))]), filter(nil), 
      access([t5.c], [t5.b], [t5.a]), partitions(p0)
  4 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t6.b, ASC], [t6.a, ASC])
  5 - output([t6.b], [t6.a], [t6.c], [t6.d]), filter(nil), 
      access([t6.b], [t6.a], [t6.c], [t6.d]), partitions(p0)

select /*+use_merge(t5,t6)*/* from t5 left join t6 on t5.c = t6.b and t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
explain basic select /*+use_nl(t5,t6)*/* from t5 left join t6 on t5.c = t6.b and t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t5  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t6  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      conds([cast(t5.c, DATETIME(-1, -1)) = t6.b], [cast(t5.b, TIME(-1, -1)) = t6.a]), nl_params_(nil)
  2 - output([t5.c], [t5.b], [t5.a]), filter(nil), 
      access([t5.c], [t5.b], [t5.a]), partitions(p0)
  3 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil)
  4 - output([t6.b], [t6.a], [t6.c], [t6.d]), filter(nil), 
      access([t6.b], [t6.a], [t6.c], [t6.d]), partitions(p0)

select /*+use_nl(t5,t6)*/* from t5 left join t6 on t5.c = t6.b and t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL

explain basic select /*+use_hash(t5,t6)*/* from t5 left join t6 on t5.c = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t5  |
|3 |  TABLE SCAN    |t6  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.c, DATETIME(-1, -1)) = cast(t6.d, DATETIME(-1, -1))]), other_conds(nil)
  2 - output([t5.c], [t5.a], [t5.b], [cast(t5.c, DATETIME(-1, -1))]), filter(nil), 
      access([t5.c], [t5.a], [t5.b]), partitions(p0)
  3 - output([t6.d], [t6.a], [t6.b], [t6.c], [cast(t6.d, DATETIME(-1, -1))]), filter(nil), 
      access([t6.d], [t6.a], [t6.b], [t6.c]), partitions(p0)

select /*+use_hash(t5,t6)*/* from t5 left join t6 on t5.c = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
2	2011-01-01 01:01:02	2011-01-02	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
2	2011-01-01 01:01:02	2011-01-02	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
3	2001-01-01 01:01:01	2001-01-01	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
explain basic select /*+use_merge(t5,t6)*/* from t5 left join t6 on t5.c = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t5  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t6  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.c, DATETIME(-1, -1)) = cast(t6.d, DATETIME(-1, -1))]), other_conds(nil)
  2 - output([t5.a], [t5.b], [t5.c], [cast(t5.c, DATETIME(-1, -1))]), filter(nil), sort_keys([cast(t5.c, DATETIME(-1, -1)), ASC])
  3 - output([t5.c], [t5.a], [t5.b], [cast(t5.c, DATETIME(-1, -1))]), filter(nil), 
      access([t5.c], [t5.a], [t5.b]), partitions(p0)
  4 - output([t6.a], [t6.b], [t6.c], [t6.d], [cast(t6.d, DATETIME(-1, -1))]), filter(nil), sort_keys([cast(t6.d, DATETIME(-1, -1)), ASC])
  5 - output([t6.d], [t6.a], [t6.b], [t6.c], [cast(t6.d, DATETIME(-1, -1))]), filter(nil), 
      access([t6.d], [t6.a], [t6.b], [t6.c]), partitions(p0)

select /*+use_merge(t5,t6)*/* from t5 left join t6 on t5.c = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
2	2011-01-01 01:01:02	2011-01-02	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
2	2011-01-01 01:01:02	2011-01-02	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
3	2001-01-01 01:01:01	2001-01-01	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
explain basic select /*+use_nl(t5,t6)*/* from t5 left join t6 on t5.c = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t5  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t6  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      conds([cast(t5.c, DATETIME(-1, -1)) = cast(t6.d, DATETIME(-1, -1))]), nl_params_(nil)
  2 - output([t5.c], [t5.a], [t5.b]), filter(nil), 
      access([t5.c], [t5.a], [t5.b]), partitions(p0)
  3 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil)
  4 - output([t6.d], [t6.a], [t6.b], [t6.c]), filter(nil), 
      access([t6.d], [t6.a], [t6.b], [t6.c]), partitions(p0)

select /*+use_nl(t5,t6)*/* from t5 left join t6 on t5.c = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
2	2011-01-01 01:01:02	2011-01-02	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
2	2011-01-01 01:01:02	2011-01-02	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
3	2001-01-01 01:01:01	2001-01-01	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL

explain basic select /*+use_hash(t1,t6)*/* from t6 left join t1 on t1.a = t6.a order by t1.a,t1.b,t1.c,t1.d,t6.a,t6.b,t6.c,t6.d;
Query Plan
==========================
|ID|OPERATOR        |NAME|
--------------------------
|0 |SORT            |    |
|1 | HASH OUTER JOIN|    |
|2 |  TABLE SCAN    |t6  |
|3 |  TABLE SCAN    |t1  |
==========================

Outputs & filters: 
-------------------------------------
  0 - output([t6.a], [t6.b], [t6.c], [t6.d], [t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t6.a], [t6.b], [t6.c], [t6.d], [t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      equal_conds([cast(t1.a, TIME(-1, -1)) = t6.a]), other_conds(nil)
  2 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      access([t6.a], [t6.b], [t6.c], [t6.d]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, TIME(-1, -1))]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

select /*+use_hash(t1,t6)*/* from t6 left join t1 on t1.a = t6.a order by t1.a,t1.b,t1.c,t1.d,t6.a,t6.b,t6.c,t6.d;
a	b	c	d	a	b	c	d
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01	NULL	NULL	NULL	NULL
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02	NULL	NULL	NULL	NULL
00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01	123	3	2001-01-01	4.4000000000
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02	1224	2	111	3.3000000000
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10	1224	2	111	3.3000000000
explain basic select /*+use_merge(t1,t6)*/* from t6 left join t1 on t1.a = t6.a order by t1.a,t1.b,t1.c,t1.d,t6.a,t6.b,t6.c,t6.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t6  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t1  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t6.a], [t6.b], [t6.c], [t6.d], [t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t6.a], [t6.b], [t6.c], [t6.d], [t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      equal_conds([cast(t1.a, TIME(-1, -1)) = t6.a]), other_conds(nil)
  2 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t6.a, ASC])
  3 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      access([t6.a], [t6.b], [t6.c], [t6.d]), partitions(p0)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, TIME(-1, -1))]), filter(nil), sort_keys([cast(t1.a, TIME(-1, -1)), ASC])
  5 - output([t1.a], [t1.b], [t1.c], [t1.d], [cast(t1.a, TIME(-1, -1))]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

select /*+use_merge(t1,t6)*/* from t6 left join t1 on t1.a = t6.a order by t1.a,t1.b,t1.c,t1.d,t6.a,t6.b,t6.c,t6.d;
a	b	c	d	a	b	c	d
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01	NULL	NULL	NULL	NULL
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02	NULL	NULL	NULL	NULL
00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01	123	3	2001-01-01	4.4000000000
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02	1224	2	111	3.3000000000
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10	1224	2	111	3.3000000000
explain basic select /*+use_nl(t1,t6)*/* from t6 left join t1 on t1.a = t6.a order by t1.a,t1.b,t1.c,t1.d,t6.a,t6.b,t6.c,t6.d;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t6  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t1  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t6.a], [t6.b], [t6.c], [t6.d], [t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t6.a], [t6.b], [t6.c], [t6.d], [t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      conds([cast(t1.a, TIME(-1, -1)) = t6.a]), nl_params_(nil)
  2 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      access([t6.a], [t6.b], [t6.c], [t6.d]), partitions(p0)
  3 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil)
  4 - output([t1.a], [t1.b], [t1.c], [t1.d]), filter(nil), 
      access([t1.a], [t1.b], [t1.c], [t1.d]), partitions(p0)

select /*+use_nl(t1,t6)*/* from t6 left join t1 on t1.a = t6.a order by t1.a,t1.b,t1.c,t1.d,t6.a,t6.b,t6.c,t6.d;
a	b	c	d	a	b	c	d
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01	NULL	NULL	NULL	NULL
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02	NULL	NULL	NULL	NULL
00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01	123	3	2001-01-01	4.4000000000
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02	1224	2	111	3.3000000000
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10	1224	2	111	3.3000000000

explain basic select /*+use_hash(t5,t6)*/* from t5 right join t6 on t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | HASH RIGHT OUTER JOIN|    |
|2 |  TABLE SCAN          |t5  |
|3 |  TABLE SCAN          |t6  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.b, TIME(-1, -1)) = t6.a]), other_conds(nil)
  2 - output([t5.b], [t5.a], [t5.c], [cast(t5.b, TIME(-1, -1))]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)
  3 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      access([t6.a], [t6.b], [t6.c], [t6.d]), partitions(p0)

select /*+use_hash(t5,t6)*/* from t5 right join t6 on t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
5	12:01:01	00:12:24	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
5	12:01:01	00:12:24	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
explain basic select /*+use_merge(t5,t6)*/* from t5 right join t6 on t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t6  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t5  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.b, TIME(-1, -1)) = t6.a]), other_conds(nil)
  2 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t6.a, ASC])
  3 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      access([t6.a], [t6.b], [t6.c], [t6.d]), partitions(p0)
  4 - output([t5.a], [t5.b], [t5.c], [cast(t5.b, TIME(-1, -1))]), filter(nil), sort_keys([cast(t5.b, TIME(-1, -1)), ASC])
  5 - output([t5.b], [t5.a], [t5.c], [cast(t5.b, TIME(-1, -1))]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)

select /*+use_merge(t5,t6)*/* from t5 right join t6 on t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
5	12:01:01	00:12:24	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
5	12:01:01	00:12:24	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
explain basic select /*+use_nl(t5,t6)*/* from t5 right join t6 on t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t6  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t5  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      conds([cast(t5.b, TIME(-1, -1)) = t6.a]), nl_params_(nil)
  2 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      access([t6.a], [t6.b], [t6.c], [t6.d]), partitions(p0)
  3 - output([t5.a], [t5.b], [t5.c]), filter(nil)
  4 - output([t5.b], [t5.a], [t5.c]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)

select /*+use_nl(t5,t6)*/* from t5 right join t6 on t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
5	12:01:01	00:12:24	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
5	12:01:01	00:12:24	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02

explain basic select /*+use_hash(t5,t6)*/* from t5 right join t6 on t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | HASH RIGHT OUTER JOIN|    |
|2 |  TABLE SCAN          |t5  |
|3 |  TABLE SCAN          |t6  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.b, DATETIME(-1, -1)) = t6.b]), other_conds(nil)
  2 - output([t5.b], [t5.a], [t5.c], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)
  3 - output([t6.b], [t6.a], [t6.c], [t6.d]), filter(nil), 
      access([t6.b], [t6.a], [t6.c], [t6.d]), partitions(p0)

select /*+use_hash(t5,t6)*/* from t5 right join t6 on t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
explain basic select /*+use_merge(t5,t6)*/* from t5 right join t6 on t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t6  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t5  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.b, DATETIME(-1, -1)) = t6.b]), other_conds(nil)
  2 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t6.b, ASC])
  3 - output([t6.b], [t6.a], [t6.c], [t6.d]), filter(nil), 
      access([t6.b], [t6.a], [t6.c], [t6.d]), partitions(p0)
  4 - output([t5.a], [t5.b], [t5.c], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), sort_keys([cast(t5.b, DATETIME(-1, -1)), ASC])
  5 - output([t5.b], [t5.a], [t5.c], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)

select /*+use_merge(t5,t6)*/* from t5 right join t6 on t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
explain basic select /*+use_nl(t5,t6)*/* from t5 right join t6 on t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t6  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t5  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      conds([cast(t5.b, DATETIME(-1, -1)) = t6.b]), nl_params_(nil)
  2 - output([t6.b], [t6.a], [t6.c], [t6.d]), filter(nil), 
      access([t6.b], [t6.a], [t6.c], [t6.d]), partitions(p0)
  3 - output([t5.a], [t5.b], [t5.c]), filter(nil)
  4 - output([t5.b], [t5.a], [t5.c]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)

select /*+use_nl(t5,t6)*/* from t5 right join t6 on t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02

explain basic select /*+use_hash(t5,t6)*/* from t5 right join t6 on t5.b = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | HASH RIGHT OUTER JOIN|    |
|2 |  TABLE SCAN          |t5  |
|3 |  TABLE SCAN          |t6  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.b, DATETIME(-1, -1)) = t6.c]), other_conds(nil)
  2 - output([t5.b], [t5.a], [t5.c], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)
  3 - output([t6.c], [t6.a], [t6.b], [t6.d]), filter(nil), 
      access([t6.c], [t6.a], [t6.b], [t6.d]), partitions(p0)

select /*+use_hash(t5,t6)*/* from t5 right join t6 on t5.b = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
explain basic select /*+use_merge(t5,t6)*/* from t5 right join t6 on t5.b = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t6  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t5  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.b, DATETIME(-1, -1)) = t6.c]), other_conds(nil)
  2 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t6.c, ASC])
  3 - output([t6.c], [t6.a], [t6.b], [t6.d]), filter(nil), 
      access([t6.c], [t6.a], [t6.b], [t6.d]), partitions(p0)
  4 - output([t5.a], [t5.b], [t5.c], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), sort_keys([cast(t5.b, DATETIME(-1, -1)), ASC])
  5 - output([t5.b], [t5.a], [t5.c], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)

select /*+use_merge(t5,t6)*/* from t5 right join t6 on t5.b = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
explain basic select /*+use_nl(t5,t6)*/* from t5 right join t6 on t5.b = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t6  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t5  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      conds([cast(t5.b, DATETIME(-1, -1)) = t6.c]), nl_params_(nil)
  2 - output([t6.c], [t6.a], [t6.b], [t6.d]), filter(nil), 
      access([t6.c], [t6.a], [t6.b], [t6.d]), partitions(p0)
  3 - output([t5.a], [t5.b], [t5.c]), filter(nil)
  4 - output([t5.b], [t5.a], [t5.c]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)

select /*+use_nl(t5,t6)*/* from t5 right join t6 on t5.b = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02

explain basic select /*+use_hash(t5,t6)*/* from t5 right join t6 on t5.b = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | HASH RIGHT OUTER JOIN|    |
|2 |  TABLE SCAN          |t5  |
|3 |  TABLE SCAN          |t6  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.b, DATETIME(-1, -1)) = cast(t6.d, DATETIME(-1, -1))]), other_conds(nil)
  2 - output([t5.b], [t5.a], [t5.c], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)
  3 - output([t6.d], [t6.a], [t6.b], [t6.c], [cast(t6.d, DATETIME(-1, -1))]), filter(nil), 
      access([t6.d], [t6.a], [t6.b], [t6.c]), partitions(p0)

select /*+use_hash(t5,t6)*/* from t5 right join t6 on t5.b = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
explain basic select /*+use_merge(t5,t6)*/* from t5 right join t6 on t5.b = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t6  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t5  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.b, DATETIME(-1, -1)) = cast(t6.d, DATETIME(-1, -1))]), other_conds(nil)
  2 - output([t6.a], [t6.b], [t6.c], [t6.d], [cast(t6.d, DATETIME(-1, -1))]), filter(nil), sort_keys([cast(t6.d, DATETIME(-1, -1)), ASC])
  3 - output([t6.d], [t6.a], [t6.b], [t6.c], [cast(t6.d, DATETIME(-1, -1))]), filter(nil), 
      access([t6.d], [t6.a], [t6.b], [t6.c]), partitions(p0)
  4 - output([t5.a], [t5.b], [t5.c], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), sort_keys([cast(t5.b, DATETIME(-1, -1)), ASC])
  5 - output([t5.b], [t5.a], [t5.c], [cast(t5.b, DATETIME(-1, -1))]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)

select /*+use_merge(t5,t6)*/* from t5 right join t6 on t5.b = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
explain basic select /*+use_nl(t5,t6)*/* from t5 right join t6 on t5.b = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t6  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t5  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      conds([cast(t5.b, DATETIME(-1, -1)) = cast(t6.d, DATETIME(-1, -1))]), nl_params_(nil)
  2 - output([t6.d], [t6.a], [t6.b], [t6.c]), filter(nil), 
      access([t6.d], [t6.a], [t6.b], [t6.c]), partitions(p0)
  3 - output([t5.a], [t5.b], [t5.c]), filter(nil)
  4 - output([t5.b], [t5.a], [t5.c]), filter(nil), 
      access([t5.b], [t5.a], [t5.c]), partitions(p0)

select /*+use_nl(t5,t6)*/* from t5 right join t6 on t5.b = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02

explain basic select /*+use_hash(t5,t6)*/* from t5 right join t6 on t5.c = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
================================
|ID|OPERATOR              |NAME|
--------------------------------
|0 |SORT                  |    |
|1 | HASH RIGHT OUTER JOIN|    |
|2 |  TABLE SCAN          |t5  |
|3 |  TABLE SCAN          |t6  |
================================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.c, TIME(-1, -1)) = t6.a]), other_conds(nil)
  2 - output([t5.c], [t5.a], [t5.b], [cast(t5.c, TIME(-1, -1))]), filter(nil), 
      access([t5.c], [t5.a], [t5.b]), partitions(p0)
  3 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      access([t6.a], [t6.b], [t6.c], [t6.d]), partitions(p0)

select /*+use_hash(t5,t6)*/* from t5 right join t6 on t5.c = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
5	12:01:01	00:12:24	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
5	12:01:01	00:12:24	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
explain basic select /*+use_merge(t5,t6)*/* from t5 right join t6 on t5.c = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
===========================
|ID|OPERATOR         |NAME|
---------------------------
|0 |SORT             |    |
|1 | MERGE OUTER JOIN|    |
|2 |  SORT           |    |
|3 |   TABLE SCAN    |t6  |
|4 |  SORT           |    |
|5 |   TABLE SCAN    |t5  |
===========================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      equal_conds([cast(t5.c, TIME(-1, -1)) = t6.a]), other_conds(nil)
  2 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t6.a, ASC])
  3 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      access([t6.a], [t6.b], [t6.c], [t6.d]), partitions(p0)
  4 - output([t5.a], [t5.b], [t5.c], [cast(t5.c, TIME(-1, -1))]), filter(nil), sort_keys([cast(t5.c, TIME(-1, -1)), ASC])
  5 - output([t5.c], [t5.a], [t5.b], [cast(t5.c, TIME(-1, -1))]), filter(nil), 
      access([t5.c], [t5.a], [t5.b]), partitions(p0)

select /*+use_merge(t5,t6)*/* from t5 right join t6 on t5.c = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
5	12:01:01	00:12:24	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
5	12:01:01	00:12:24	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
explain basic select /*+use_nl(t5,t6)*/* from t5 right join t6 on t5.c = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
Query Plan
=================================
|ID|OPERATOR               |NAME|
---------------------------------
|0 |SORT                   |    |
|1 | NESTED-LOOP OUTER JOIN|    |
|2 |  TABLE SCAN           |t6  |
|3 |  MATERIAL             |    |
|4 |   TABLE SCAN          |t5  |
=================================

Outputs & filters: 
-------------------------------------
  0 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), sort_keys([t5.a, ASC], [t5.b, ASC], [t5.c, ASC], [t6.a, ASC], [t6.b, ASC], [t6.c, ASC], [t6.d, ASC])
  1 - output([t5.a], [t5.b], [t5.c], [t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      conds([cast(t5.c, TIME(-1, -1)) = t6.a]), nl_params_(nil)
  2 - output([t6.a], [t6.b], [t6.c], [t6.d]), filter(nil), 
      access([t6.a], [t6.b], [t6.c], [t6.d]), partitions(p0)
  3 - output([t5.a], [t5.b], [t5.c]), filter(nil)
  4 - output([t5.c], [t5.a], [t5.b]), filter(nil), 
      access([t5.c], [t5.a], [t5.b]), partitions(p0)

select /*+use_nl(t5,t6)*/* from t5 right join t6 on t5.c = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
5	12:01:01	00:12:24	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
5	12:01:01	00:12:24	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10

select /*+use_hash(t5,t6)*/* from t5 right join t6 on t5.c = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
3	2001-01-01 01:01:01	2001-01-01	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
select /*+use_merge(t5,t6)*/* from t5 right join t6 on t5.c = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
3	2001-01-01 01:01:01	2001-01-01	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
select /*+use_nl(t5,t6)*/* from t5 right join t6 on t5.c = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
3	2001-01-01 01:01:01	2001-01-01	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01

select /*+use_hash(t5,t6)*/* from t5 right join t6 on t5.c = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
select /*+use_merge(t5,t6)*/* from t5 right join t6 on t5.c = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
select /*+use_nl(t5,t6)*/* from t5 right join t6 on t5.c = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02

select /*+use_hash(t5,t6)*/* from t5 right join t6 on t5.c = t6.a and t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
select /*+use_merge(t5,t6)*/* from t5 right join t6 on t5.c = t6.a and t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
select /*+use_nl(t5,t6)*/* from t5 right join t6 on t5.c = t6.a and t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02

select /*+use_hash(t5,t6)*/* from t5 right join t6 on t5.c = t6.b and t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
select /*+use_merge(t5,t6)*/* from t5 right join t6 on t5.c = t6.b and t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
select /*+use_nl(t5,t6)*/* from t5 right join t6 on t5.c = t6.b and t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02

select /*+use_hash(t5,t6)*/* from t5 right join t6 on t5.c = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
2	2011-01-01 01:01:02	2011-01-02	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
2	2011-01-01 01:01:02	2011-01-02	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
3	2001-01-01 01:01:01	2001-01-01	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
select /*+use_merge(t5,t6)*/* from t5 right join t6 on t5.c = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
2	2011-01-01 01:01:02	2011-01-02	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
2	2011-01-01 01:01:02	2011-01-02	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
3	2001-01-01 01:01:01	2001-01-01	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
select /*+use_nl(t5,t6)*/* from t5 right join t6 on t5.c = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
2	2011-01-01 01:01:02	2011-01-02	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
2	2011-01-01 01:01:02	2011-01-02	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
3	2001-01-01 01:01:01	2001-01-01	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01

select /*+use_hash(t1,t6)*/* from t6 right join t1 on t1.a = t6.a order by t1.a,t1.b,t1.c,t1.d,t6.a,t6.b,t6.c,t6.d;
a	b	c	d	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	1	1	1.0000000000
NULL	NULL	NULL	NULL	1	1	111	1.1100000000
NULL	NULL	NULL	NULL	1	2	2	2.0000000000
NULL	NULL	NULL	NULL	2	2	2.0	2.0000000000
NULL	NULL	NULL	NULL	2	2	222	2.2200000000
NULL	NULL	NULL	NULL	3	3	3	3.0000100000
NULL	NULL	NULL	NULL	3	3	333	3.3300000000
NULL	NULL	NULL	NULL	4	4	444	4.4400000000
NULL	NULL	NULL	NULL	5	5	5.550	NULL
00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01	123	3	2001-01-01	4.4000000000
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02	1224	2	111	3.3000000000
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10	1224	2	111	3.3000000000
select /*+use_merge(t1,t6)*/* from t6 right join t1 on t1.a = t6.a order by t1.a,t1.b,t1.c,t1.d,t6.a,t6.b,t6.c,t6.d;
a	b	c	d	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	1	1	1.0000000000
NULL	NULL	NULL	NULL	1	1	111	1.1100000000
NULL	NULL	NULL	NULL	1	2	2	2.0000000000
NULL	NULL	NULL	NULL	2	2	2.0	2.0000000000
NULL	NULL	NULL	NULL	2	2	222	2.2200000000
NULL	NULL	NULL	NULL	3	3	3	3.0000100000
NULL	NULL	NULL	NULL	3	3	333	3.3300000000
NULL	NULL	NULL	NULL	4	4	444	4.4400000000
NULL	NULL	NULL	NULL	5	5	5.550	NULL
00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01	123	3	2001-01-01	4.4000000000
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02	1224	2	111	3.3000000000
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10	1224	2	111	3.3000000000
select /*+use_nl(t1,t6)*/* from t6 right join t1 on t1.a = t6.a order by t1.a,t1.b,t1.c,t1.d,t6.a,t6.b,t6.c,t6.d;
a	b	c	d	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	1	1	1.0000000000
NULL	NULL	NULL	NULL	1	1	111	1.1100000000
NULL	NULL	NULL	NULL	1	2	2	2.0000000000
NULL	NULL	NULL	NULL	2	2	2.0	2.0000000000
NULL	NULL	NULL	NULL	2	2	222	2.2200000000
NULL	NULL	NULL	NULL	3	3	3	3.0000100000
NULL	NULL	NULL	NULL	3	3	333	3.3300000000
NULL	NULL	NULL	NULL	4	4	444	4.4400000000
NULL	NULL	NULL	NULL	5	5	5.550	NULL
00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01	123	3	2001-01-01	4.4000000000
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02	1224	2	111	3.3000000000
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10	1224	2	111	3.3000000000

select /*+use_hash(t5,t6)*/* from t5 full join t6 on t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
5	12:01:01	00:12:24	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
select /*+use_merge(t5,t6)*/* from t5 full join t6 on t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
5	12:01:01	00:12:24	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
select /*+use_nl(t5,t6)*/* from t5 full join t6 on t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
5	12:01:01	00:12:24	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02

select /*+use_hash(t5,t6)*/* from t5 full join t6 on t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
select /*+use_merge(t5,t6)*/* from t5 full join t6 on t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
select /*+use_nl(t5,t6)*/* from t5 full join t6 on t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL

select /*+use_hash(t5,t6)*/* from t5 full join t6 on t5.b = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
select /*+use_merge(t5,t6)*/* from t5 full join t6 on t5.b = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
select /*+use_nl(t5,t6)*/* from t5 full join t6 on t5.b = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL

select /*+use_hash(t5,t6)*/* from t5 full join t6 on t5.b = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
select /*+use_merge(t5,t6)*/* from t5 full join t6 on t5.b = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
select /*+use_nl(t5,t6)*/* from t5 full join t6 on t5.b = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL

select /*+use_hash(t5,t6)*/* from t5 full join t6 on t5.c = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
5	12:01:01	00:12:24	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
select /*+use_merge(t5,t6)*/* from t5 full join t6 on t5.c = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
5	12:01:01	00:12:24	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
select /*+use_nl(t5,t6)*/* from t5 full join t6 on t5.c = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
5	12:01:01	00:12:24	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10

select /*+use_hash(t5,t6)*/* from t5 full join t6 on t5.c = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
select /*+use_merge(t5,t6)*/* from t5 full join t6 on t5.c = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
select /*+use_nl(t5,t6)*/* from t5 full join t6 on t5.c = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL

select /*+use_hash(t5,t6)*/* from t5 full join t6 on t5.c = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
select /*+use_merge(t5,t6)*/* from t5 full join t6 on t5.c = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
select /*+use_nl(t5,t6)*/* from t5 full join t6 on t5.c = t6.c order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL

select /*+use_hash(t5,t6)*/* from t5 full join t6 on t5.c = t6.a and t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
select /*+use_merge(t5,t6)*/* from t5 full join t6 on t5.c = t6.a and t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
select /*+use_nl(t5,t6)*/* from t5 full join t6 on t5.c = t6.a and t5.b = t6.b order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL

select /*+use_hash(t5,t6)*/* from t5 full join t6 on t5.c = t6.b and t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
select /*+use_merge(t5,t6)*/* from t5 full join t6 on t5.c = t6.b and t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
select /*+use_nl(t5,t6)*/* from t5 full join t6 on t5.c = t6.b and t5.b = t6.a order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
NULL	NULL	NULL	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
1	2011-01-01 01:01:01	2011-01-01	NULL	NULL	NULL	NULL
2	2011-01-01 01:01:02	2011-01-02	NULL	NULL	NULL	NULL
3	2001-01-01 01:01:01	2001-01-01	NULL	NULL	NULL	NULL
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL

select /*+use_hash(t5,t6)*/* from t5 full join t6 on t5.c = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
2	2011-01-01 01:01:02	2011-01-02	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
2	2011-01-01 01:01:02	2011-01-02	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
3	2001-01-01 01:01:01	2001-01-01	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
select /*+use_merge(t5,t6)*/* from t5 full join t6 on t5.c = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
2	2011-01-01 01:01:02	2011-01-02	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
2	2011-01-01 01:01:02	2011-01-02	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
3	2001-01-01 01:01:01	2001-01-01	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL
select /*+use_nl(t5,t6)*/* from t5 full join t6 on t5.c = t6.d order by t5.a,t5.b,t5.c,t6.a,t6.b,t6.c,t6.d;
a	b	c	a	b	c	d
NULL	NULL	NULL	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10
1	2011-01-01 01:01:01	2011-01-01	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
2	2011-01-01 01:01:02	2011-01-02	00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02
2	2011-01-01 01:01:02	2011-01-02	12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02
3	2001-01-01 01:01:01	2001-01-01	00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01
4	1223	12233	NULL	NULL	NULL	NULL
5	12:01:01	00:12:24	NULL	NULL	NULL	NULL

select /*+use_hash(t1,t6)*/* from t6 full join t1 on t1.a = t6.a order by t1.a,t1.b,t1.c,t1.d,t6.a,t6.b,t6.c,t6.d;
a	b	c	d	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01	NULL	NULL	NULL	NULL
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	1	1	1.0000000000
NULL	NULL	NULL	NULL	1	1	111	1.1100000000
NULL	NULL	NULL	NULL	1	2	2	2.0000000000
NULL	NULL	NULL	NULL	2	2	2.0	2.0000000000
NULL	NULL	NULL	NULL	2	2	222	2.2200000000
NULL	NULL	NULL	NULL	3	3	3	3.0000100000
NULL	NULL	NULL	NULL	3	3	333	3.3300000000
NULL	NULL	NULL	NULL	4	4	444	4.4400000000
NULL	NULL	NULL	NULL	5	5	5.550	NULL
00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01	123	3	2001-01-01	4.4000000000
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02	1224	2	111	3.3000000000
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10	1224	2	111	3.3000000000
select /*+use_merge(t1,t6)*/* from t6 full join t1 on t1.a = t6.a order by t1.a,t1.b,t1.c,t1.d,t6.a,t6.b,t6.c,t6.d;
a	b	c	d	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01	NULL	NULL	NULL	NULL
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	1	1	1.0000000000
NULL	NULL	NULL	NULL	1	1	111	1.1100000000
NULL	NULL	NULL	NULL	1	2	2	2.0000000000
NULL	NULL	NULL	NULL	2	2	2.0	2.0000000000
NULL	NULL	NULL	NULL	2	2	222	2.2200000000
NULL	NULL	NULL	NULL	3	3	3	3.0000100000
NULL	NULL	NULL	NULL	3	3	333	3.3300000000
NULL	NULL	NULL	NULL	4	4	444	4.4400000000
NULL	NULL	NULL	NULL	5	5	5.550	NULL
00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01	123	3	2001-01-01	4.4000000000
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02	1224	2	111	3.3000000000
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10	1224	2	111	3.3000000000
select /*+use_nl(t1,t6)*/* from t6 full join t1 on t1.a = t6.a order by t1.a,t1.b,t1.c,t1.d,t6.a,t6.b,t6.c,t6.d;
a	b	c	d	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01	NULL	NULL	NULL	NULL
12:01:01	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-02	NULL	NULL	NULL	NULL
NULL	NULL	NULL	NULL	1	1	1	1.0000000000
NULL	NULL	NULL	NULL	1	1	111	1.1100000000
NULL	NULL	NULL	NULL	1	2	2	2.0000000000
NULL	NULL	NULL	NULL	2	2	2.0	2.0000000000
NULL	NULL	NULL	NULL	2	2	222	2.2200000000
NULL	NULL	NULL	NULL	3	3	3	3.0000100000
NULL	NULL	NULL	NULL	3	3	333	3.3300000000
NULL	NULL	NULL	NULL	4	4	444	4.4400000000
NULL	NULL	NULL	NULL	5	5	5.550	NULL
00:01:23	2001-01-01 00:00:00	2001-01-02 00:00:00.000000	2001-01-01	123	3	2001-01-01	4.4000000000
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-02	1224	2	111	3.3000000000
00:12:24	2011-01-02 01:01:01	2011-01-02 01:01:01.000000	2011-01-10	1224	2	111	3.3000000000

select /*+use_hash(t2,t7)*/* from t2 join t7 on t2.b = t7.a order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
select /*+use_merge(t2,t7)*/* from t2 join t7 on t2.b = t7.a order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
select /*+use_nl(t2,t7)*/* from t2 join t7 on t2.b = t7.a order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d

select /*+use_hash(t2,t7)*/* from t2 join t7 on t2.c = t7.d order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
1	1	1.0000000000	 A	444       	5.550	1
1	1	1.0000000000	 C	A         	1	1
1	2	2.0000000000	 B	2         	B	2
3	3.0	3.0000100000	 B	3.0       	555	3.00001
5	B	5.0000000000	 A	222       	333	5
select /*+use_merge(t2,t7)*/* from t2 join t7 on t2.c = t7.d order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
1	1	1.0000000000	 A	444       	5.550	1
1	1	1.0000000000	 C	A         	1	1
1	2	2.0000000000	 B	2         	B	2
3	3.0	3.0000100000	 B	3.0       	555	3.00001
5	B	5.0000000000	 A	222       	333	5
select /*+use_nl(t2,t7)*/* from t2 join t7 on t2.c = t7.d order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
1	1	1.0000000000	 A	444       	5.550	1
1	1	1.0000000000	 C	A         	1	1
1	2	2.0000000000	 B	2         	B	2
3	3.0	3.0000100000	 B	3.0       	555	3.00001
5	B	5.0000000000	 A	222       	333	5

select /*+use_hash(t2,t7)*/* from t2 join t7 on t2.b = t7.b order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
select /*+use_merge(t2,t7)*/* from t2 join t7 on t2.b = t7.b order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
select /*+use_nl(t2,t7)*/* from t2 join t7 on t2.b = t7.b order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d

select /*+use_hash(t2,t7)*/* from t2 join t7 on t2.b = t7.c order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
1	1	1.0000000000	 C	A         	1	1
2	333	2.2200000000	 A	222       	333	5
5	555	5.5500000000	 B	3.0       	555	3.00001
5	B	5.0000000000	 B	2         	B	2
select /*+use_merge(t2,t7)*/* from t2 join t7 on t2.b = t7.c order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
1	1	1.0000000000	 C	A         	1	1
2	333	2.2200000000	 A	222       	333	5
5	555	5.5500000000	 B	3.0       	555	3.00001
5	B	5.0000000000	 B	2         	B	2
select /*+use_nl(t2,t7)*/* from t2 join t7 on t2.b = t7.c order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
1	1	1.0000000000	 C	A         	1	1
2	333	2.2200000000	 A	222       	333	5
5	555	5.5500000000	 B	3.0       	555	3.00001
5	B	5.0000000000	 B	2         	B	2

select /*+use_hash(t2,t7)*/* from t2 join t7 on t2.b = t7.a and t2.c = t7.d order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
select /*+use_merge(t2,t7)*/* from t2 join t7 on t2.b = t7.a and t2.c = t7.d order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
select /*+use_nl(t2,t7)*/* from t2 join t7 on t2.b = t7.a and t2.c = t7.d order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d

select /*+use_hash(t7,t8)*/* from t7 join t8 on t7.a = t8.a order by t7.a,t7.b,t8.a,t8.b;
a	b	c	d	a	b	c	d
 A	222       	333	5	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
 A	222       	333	5	  A	2011-01-01 01:01:02	2011-01-02 01:01:01.000000	2001-01-01
 A	444       	5.550	1	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
 A	444       	5.550	1	  A	2011-01-01 01:01:02	2011-01-02 01:01:01.000000	2001-01-01
 B	2         	B	2	  B	2001-01-01 01:01:01	2011-01-02 01:01:02.000000	2001-01-01
 B	2         	B	2	  B	2001-01-01 01:01:02	2016-01-01 01:01:01.000000	2016-01-01
 B	3.0       	555	3.00001	  B	2001-01-01 01:01:01	2011-01-02 01:01:02.000000	2001-01-01
 B	3.0       	555	3.00001	  B	2001-01-01 01:01:02	2016-01-01 01:01:01.000000	2016-01-01
 C	A         	1	1	  C	2001-01-10 01:01:01	2001-01-10 01:01:01.000000	2001-01-10
select /*+use_merge(t7,t8)*/* from t7 join t8 on t7.a = t8.a order by t7.a,t7.b,t8.a,t8.b;
a	b	c	d	a	b	c	d
 A	222       	333	5	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
 A	222       	333	5	  A	2011-01-01 01:01:02	2011-01-02 01:01:01.000000	2001-01-01
 A	444       	5.550	1	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
 A	444       	5.550	1	  A	2011-01-01 01:01:02	2011-01-02 01:01:01.000000	2001-01-01
 B	2         	B	2	  B	2001-01-01 01:01:01	2011-01-02 01:01:02.000000	2001-01-01
 B	2         	B	2	  B	2001-01-01 01:01:02	2016-01-01 01:01:01.000000	2016-01-01
 B	3.0       	555	3.00001	  B	2001-01-01 01:01:01	2011-01-02 01:01:02.000000	2001-01-01
 B	3.0       	555	3.00001	  B	2001-01-01 01:01:02	2016-01-01 01:01:01.000000	2016-01-01
 C	A         	1	1	  C	2001-01-10 01:01:01	2001-01-10 01:01:01.000000	2001-01-10
select /*+use_nl(t7,t8)*/* from t7 join t8 on t7.a = t8.a order by t7.a,t7.b,t8.a,t8.b;
a	b	c	d	a	b	c	d
 A	222       	333	5	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
 A	222       	333	5	  A	2011-01-01 01:01:02	2011-01-02 01:01:01.000000	2001-01-01
 A	444       	5.550	1	  A	2011-01-01 01:01:01	2011-01-01 01:01:01.000000	2011-01-01
 A	444       	5.550	1	  A	2011-01-01 01:01:02	2011-01-02 01:01:01.000000	2001-01-01
 B	2         	B	2	  B	2001-01-01 01:01:01	2011-01-02 01:01:02.000000	2001-01-01
 B	2         	B	2	  B	2001-01-01 01:01:02	2016-01-01 01:01:01.000000	2016-01-01
 B	3.0       	555	3.00001	  B	2001-01-01 01:01:01	2011-01-02 01:01:02.000000	2001-01-01
 B	3.0       	555	3.00001	  B	2001-01-01 01:01:02	2016-01-01 01:01:01.000000	2016-01-01
 C	A         	1	1	  C	2001-01-10 01:01:01	2001-01-10 01:01:01.000000	2001-01-10

select /*+use_hash(t2,t7)*/* from t2 left join t7 on t2.b = t7.a order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1.0000000000	NULL	NULL	NULL	NULL
1	2	2.0000000000	NULL	NULL	NULL	NULL
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	NULL	NULL	NULL	NULL
3	3.0	3.0000100000	NULL	NULL	NULL	NULL
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	NULL	NULL	NULL	NULL
5	B	5.0000000000	NULL	NULL	NULL	NULL
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL
select /*+use_merge(t2,t7)*/* from t2 left join t7 on t2.b = t7.a order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1.0000000000	NULL	NULL	NULL	NULL
1	2	2.0000000000	NULL	NULL	NULL	NULL
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	NULL	NULL	NULL	NULL
3	3.0	3.0000100000	NULL	NULL	NULL	NULL
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	NULL	NULL	NULL	NULL
5	B	5.0000000000	NULL	NULL	NULL	NULL
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL
select /*+use_nl(t2,t7)*/* from t2 left join t7 on t2.b = t7.a order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1.0000000000	NULL	NULL	NULL	NULL
1	2	2.0000000000	NULL	NULL	NULL	NULL
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	NULL	NULL	NULL	NULL
3	3.0	3.0000100000	NULL	NULL	NULL	NULL
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	NULL	NULL	NULL	NULL
5	B	5.0000000000	NULL	NULL	NULL	NULL
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL

select /*+use_hash(t2,t7)*/* from t2 left join t7 on t2.c = t7.d order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1.0000000000	 A	444       	5.550	1
1	1	1.0000000000	 C	A         	1	1
1	2	2.0000000000	 B	2         	B	2
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	NULL	NULL	NULL	NULL
3	3.0	3.0000100000	 B	3.0       	555	3.00001
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	NULL	NULL	NULL	NULL
5	B	5.0000000000	 A	222       	333	5
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL
select /*+use_merge(t2,t7)*/* from t2 left join t7 on t2.c = t7.d order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1.0000000000	 A	444       	5.550	1
1	1	1.0000000000	 C	A         	1	1
1	2	2.0000000000	 B	2         	B	2
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	NULL	NULL	NULL	NULL
3	3.0	3.0000100000	 B	3.0       	555	3.00001
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	NULL	NULL	NULL	NULL
5	B	5.0000000000	 A	222       	333	5
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL
select /*+use_nl(t2,t7)*/* from t2 left join t7 on t2.c = t7.d order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1.0000000000	 A	444       	5.550	1
1	1	1.0000000000	 C	A         	1	1
1	2	2.0000000000	 B	2         	B	2
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	NULL	NULL	NULL	NULL
3	3.0	3.0000100000	 B	3.0       	555	3.00001
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	NULL	NULL	NULL	NULL
5	B	5.0000000000	 A	222       	333	5
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL

select /*+use_hash(t2,t7)*/* from t2 left join t7 on t2.b = t7.b order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1.0000000000	NULL	NULL	NULL	NULL
1	2	2.0000000000	NULL	NULL	NULL	NULL
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	NULL	NULL	NULL	NULL
3	3.0	3.0000100000	NULL	NULL	NULL	NULL
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	NULL	NULL	NULL	NULL
5	B	5.0000000000	NULL	NULL	NULL	NULL
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL
select /*+use_merge(t2,t7)*/* from t2 left join t7 on t2.b = t7.b order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1.0000000000	NULL	NULL	NULL	NULL
1	2	2.0000000000	NULL	NULL	NULL	NULL
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	NULL	NULL	NULL	NULL
3	3.0	3.0000100000	NULL	NULL	NULL	NULL
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	NULL	NULL	NULL	NULL
5	B	5.0000000000	NULL	NULL	NULL	NULL
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL
select /*+use_nl(t2,t7)*/* from t2 left join t7 on t2.b = t7.b order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1.0000000000	NULL	NULL	NULL	NULL
1	2	2.0000000000	NULL	NULL	NULL	NULL
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	NULL	NULL	NULL	NULL
3	3.0	3.0000100000	NULL	NULL	NULL	NULL
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	NULL	NULL	NULL	NULL
5	B	5.0000000000	NULL	NULL	NULL	NULL
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL

select /*+use_hash(t2,t7)*/* from t2 left join t7 on t2.b = t7.c order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1.0000000000	 C	A         	1	1
1	2	2.0000000000	NULL	NULL	NULL	NULL
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	 A	222       	333	5
3	3.0	3.0000100000	NULL	NULL	NULL	NULL
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	 B	3.0       	555	3.00001
5	B	5.0000000000	 B	2         	B	2
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL
select /*+use_merge(t2,t7)*/* from t2 left join t7 on t2.b = t7.c order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1.0000000000	 C	A         	1	1
1	2	2.0000000000	NULL	NULL	NULL	NULL
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	 A	222       	333	5
3	3.0	3.0000100000	NULL	NULL	NULL	NULL
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	 B	3.0       	555	3.00001
5	B	5.0000000000	 B	2         	B	2
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL
select /*+use_nl(t2,t7)*/* from t2 left join t7 on t2.b = t7.c order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1.0000000000	 C	A         	1	1
1	2	2.0000000000	NULL	NULL	NULL	NULL
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	 A	222       	333	5
3	3.0	3.0000100000	NULL	NULL	NULL	NULL
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	 B	3.0       	555	3.00001
5	B	5.0000000000	 B	2         	B	2
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL

select /*+use_hash(t2,t7)*/* from t2 left join t7 on t2.b = t7.a and t2.c = t7.d order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1.0000000000	NULL	NULL	NULL	NULL
1	2	2.0000000000	NULL	NULL	NULL	NULL
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	NULL	NULL	NULL	NULL
3	3.0	3.0000100000	NULL	NULL	NULL	NULL
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	NULL	NULL	NULL	NULL
5	B	5.0000000000	NULL	NULL	NULL	NULL
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL
select /*+use_merge(t2,t7)*/* from t2 left join t7 on t2.b = t7.a and t2.c = t7.d order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1.0000000000	NULL	NULL	NULL	NULL
1	2	2.0000000000	NULL	NULL	NULL	NULL
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	NULL	NULL	NULL	NULL
3	3.0	3.0000100000	NULL	NULL	NULL	NULL
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	NULL	NULL	NULL	NULL
5	B	5.0000000000	NULL	NULL	NULL	NULL
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL
select /*+use_nl(t2,t7)*/* from t2 left join t7 on t2.b = t7.a and t2.c = t7.d order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1.0000000000	NULL	NULL	NULL	NULL
1	2	2.0000000000	NULL	NULL	NULL	NULL
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	NULL	NULL	NULL	NULL
3	3.0	3.0000100000	NULL	NULL	NULL	NULL
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	NULL	NULL	NULL	NULL
5	B	5.0000000000	NULL	NULL	NULL	NULL
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL

select /*+use_hash(t2,t7)*/* from t2 right join t7 on t2.b = t7.a order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	 A	222       	333	5
NULL	NULL	NULL	 A	444       	5.550	1
NULL	NULL	NULL	 B	2         	B	2
NULL	NULL	NULL	 B	3.0       	555	3.00001
NULL	NULL	NULL	 C	A         	1	1
select /*+use_merge(t2,t7)*/* from t2 right join t7 on t2.b = t7.a order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	 A	222       	333	5
NULL	NULL	NULL	 A	444       	5.550	1
NULL	NULL	NULL	 B	2         	B	2
NULL	NULL	NULL	 B	3.0       	555	3.00001
NULL	NULL	NULL	 C	A         	1	1
select /*+use_nl(t2,t7)*/* from t2 right join t7 on t2.b = t7.a order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	 A	222       	333	5
NULL	NULL	NULL	 A	444       	5.550	1
NULL	NULL	NULL	 B	2         	B	2
NULL	NULL	NULL	 B	3.0       	555	3.00001
NULL	NULL	NULL	 C	A         	1	1

select /*+use_hash(t2,t7)*/* from t2 right join t7 on t2.c = t7.d order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
1	1	1.0000000000	 A	444       	5.550	1
1	1	1.0000000000	 C	A         	1	1
1	2	2.0000000000	 B	2         	B	2
3	3.0	3.0000100000	 B	3.0       	555	3.00001
5	B	5.0000000000	 A	222       	333	5
select /*+use_merge(t2,t7)*/* from t2 right join t7 on t2.c = t7.d order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
1	1	1.0000000000	 A	444       	5.550	1
1	1	1.0000000000	 C	A         	1	1
1	2	2.0000000000	 B	2         	B	2
3	3.0	3.0000100000	 B	3.0       	555	3.00001
5	B	5.0000000000	 A	222       	333	5
select /*+use_nl(t2,t7)*/* from t2 right join t7 on t2.c = t7.d order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
1	1	1.0000000000	 A	444       	5.550	1
1	1	1.0000000000	 C	A         	1	1
1	2	2.0000000000	 B	2         	B	2
3	3.0	3.0000100000	 B	3.0       	555	3.00001
5	B	5.0000000000	 A	222       	333	5

select /*+use_hash(t2,t7)*/* from t2 right join t7 on t2.b = t7.b order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	 A	222       	333	5
NULL	NULL	NULL	 A	444       	5.550	1
NULL	NULL	NULL	 B	2         	B	2
NULL	NULL	NULL	 B	3.0       	555	3.00001
NULL	NULL	NULL	 C	A         	1	1
select /*+use_merge(t2,t7)*/* from t2 right join t7 on t2.b = t7.b order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	 A	222       	333	5
NULL	NULL	NULL	 A	444       	5.550	1
NULL	NULL	NULL	 B	2         	B	2
NULL	NULL	NULL	 B	3.0       	555	3.00001
NULL	NULL	NULL	 C	A         	1	1
select /*+use_nl(t2,t7)*/* from t2 right join t7 on t2.b = t7.b order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	 A	222       	333	5
NULL	NULL	NULL	 A	444       	5.550	1
NULL	NULL	NULL	 B	2         	B	2
NULL	NULL	NULL	 B	3.0       	555	3.00001
NULL	NULL	NULL	 C	A         	1	1

select /*+use_hash(t2,t7)*/* from t2 right join t7 on t2.b = t7.c order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	 A	444       	5.550	1
1	1	1.0000000000	 C	A         	1	1
2	333	2.2200000000	 A	222       	333	5
5	555	5.5500000000	 B	3.0       	555	3.00001
5	B	5.0000000000	 B	2         	B	2
select /*+use_merge(t2,t7)*/* from t2 right join t7 on t2.b = t7.c order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	 A	444       	5.550	1
1	1	1.0000000000	 C	A         	1	1
2	333	2.2200000000	 A	222       	333	5
5	555	5.5500000000	 B	3.0       	555	3.00001
5	B	5.0000000000	 B	2         	B	2
select /*+use_nl(t2,t7)*/* from t2 right join t7 on t2.b = t7.c order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	 A	444       	5.550	1
1	1	1.0000000000	 C	A         	1	1
2	333	2.2200000000	 A	222       	333	5
5	555	5.5500000000	 B	3.0       	555	3.00001
5	B	5.0000000000	 B	2         	B	2

select /*+use_hash(t2,t7)*/* from t2 right join t7 on t2.b = t7.a and t2.c = t7.d order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	 A	222       	333	5
NULL	NULL	NULL	 A	444       	5.550	1
NULL	NULL	NULL	 B	2         	B	2
NULL	NULL	NULL	 B	3.0       	555	3.00001
NULL	NULL	NULL	 C	A         	1	1
select /*+use_merge(t2,t7)*/* from t2 right join t7 on t2.b = t7.a and t2.c = t7.d order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	 A	222       	333	5
NULL	NULL	NULL	 A	444       	5.550	1
NULL	NULL	NULL	 B	2         	B	2
NULL	NULL	NULL	 B	3.0       	555	3.00001
NULL	NULL	NULL	 C	A         	1	1
select /*+use_nl(t2,t7)*/* from t2 right join t7 on t2.b = t7.a and t2.c = t7.d order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	 A	222       	333	5
NULL	NULL	NULL	 A	444       	5.550	1
NULL	NULL	NULL	 B	2         	B	2
NULL	NULL	NULL	 B	3.0       	555	3.00001
NULL	NULL	NULL	 C	A         	1	1

select /*+use_hash(t2,t7)*/* from t2 full join t7 on t2.b = t7.a order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	 A	222       	333	5
NULL	NULL	NULL	 A	444       	5.550	1
NULL	NULL	NULL	 B	2         	B	2
NULL	NULL	NULL	 B	3.0       	555	3.00001
NULL	NULL	NULL	 C	A         	1	1
1	1	1.0000000000	NULL	NULL	NULL	NULL
1	2	2.0000000000	NULL	NULL	NULL	NULL
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	NULL	NULL	NULL	NULL
3	3.0	3.0000100000	NULL	NULL	NULL	NULL
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	NULL	NULL	NULL	NULL
5	B	5.0000000000	NULL	NULL	NULL	NULL
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL
select /*+use_merge(t2,t7)*/* from t2 full join t7 on t2.b = t7.a order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	 A	222       	333	5
NULL	NULL	NULL	 A	444       	5.550	1
NULL	NULL	NULL	 B	2         	B	2
NULL	NULL	NULL	 B	3.0       	555	3.00001
NULL	NULL	NULL	 C	A         	1	1
1	1	1.0000000000	NULL	NULL	NULL	NULL
1	2	2.0000000000	NULL	NULL	NULL	NULL
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	NULL	NULL	NULL	NULL
3	3.0	3.0000100000	NULL	NULL	NULL	NULL
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	NULL	NULL	NULL	NULL
5	B	5.0000000000	NULL	NULL	NULL	NULL
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL
select /*+use_nl(t2,t7)*/* from t2 full join t7 on t2.b = t7.a order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	 A	222       	333	5
NULL	NULL	NULL	 A	444       	5.550	1
NULL	NULL	NULL	 B	2         	B	2
NULL	NULL	NULL	 B	3.0       	555	3.00001
NULL	NULL	NULL	 C	A         	1	1
1	1	1.0000000000	NULL	NULL	NULL	NULL
1	2	2.0000000000	NULL	NULL	NULL	NULL
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	NULL	NULL	NULL	NULL
3	3.0	3.0000100000	NULL	NULL	NULL	NULL
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	NULL	NULL	NULL	NULL
5	B	5.0000000000	NULL	NULL	NULL	NULL
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL

select /*+use_hash(t2,t7)*/* from t2 full join t7 on t2.c = t7.d order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1.0000000000	 A	444       	5.550	1
1	1	1.0000000000	 C	A         	1	1
1	2	2.0000000000	 B	2         	B	2
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	NULL	NULL	NULL	NULL
3	3.0	3.0000100000	 B	3.0       	555	3.00001
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	NULL	NULL	NULL	NULL
5	B	5.0000000000	 A	222       	333	5
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL
select /*+use_merge(t2,t7)*/* from t2 full join t7 on t2.c = t7.d order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1.0000000000	 A	444       	5.550	1
1	1	1.0000000000	 C	A         	1	1
1	2	2.0000000000	 B	2         	B	2
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	NULL	NULL	NULL	NULL
3	3.0	3.0000100000	 B	3.0       	555	3.00001
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	NULL	NULL	NULL	NULL
5	B	5.0000000000	 A	222       	333	5
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL
select /*+use_nl(t2,t7)*/* from t2 full join t7 on t2.c = t7.d order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1.0000000000	 A	444       	5.550	1
1	1	1.0000000000	 C	A         	1	1
1	2	2.0000000000	 B	2         	B	2
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	NULL	NULL	NULL	NULL
3	3.0	3.0000100000	 B	3.0       	555	3.00001
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	NULL	NULL	NULL	NULL
5	B	5.0000000000	 A	222       	333	5
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL

select /*+use_hash(t2,t7)*/* from t2 full join t7 on t2.b = t7.b order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	 A	222       	333	5
NULL	NULL	NULL	 A	444       	5.550	1
NULL	NULL	NULL	 B	2         	B	2
NULL	NULL	NULL	 B	3.0       	555	3.00001
NULL	NULL	NULL	 C	A         	1	1
1	1	1.0000000000	NULL	NULL	NULL	NULL
1	2	2.0000000000	NULL	NULL	NULL	NULL
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	NULL	NULL	NULL	NULL
3	3.0	3.0000100000	NULL	NULL	NULL	NULL
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	NULL	NULL	NULL	NULL
5	B	5.0000000000	NULL	NULL	NULL	NULL
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL
select /*+use_merge(t2,t7)*/* from t2 full join t7 on t2.b = t7.b order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	 A	222       	333	5
NULL	NULL	NULL	 A	444       	5.550	1
NULL	NULL	NULL	 B	2         	B	2
NULL	NULL	NULL	 B	3.0       	555	3.00001
NULL	NULL	NULL	 C	A         	1	1
1	1	1.0000000000	NULL	NULL	NULL	NULL
1	2	2.0000000000	NULL	NULL	NULL	NULL
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	NULL	NULL	NULL	NULL
3	3.0	3.0000100000	NULL	NULL	NULL	NULL
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	NULL	NULL	NULL	NULL
5	B	5.0000000000	NULL	NULL	NULL	NULL
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL
select /*+use_nl(t2,t7)*/* from t2 full join t7 on t2.b = t7.b order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	 A	222       	333	5
NULL	NULL	NULL	 A	444       	5.550	1
NULL	NULL	NULL	 B	2         	B	2
NULL	NULL	NULL	 B	3.0       	555	3.00001
NULL	NULL	NULL	 C	A         	1	1
1	1	1.0000000000	NULL	NULL	NULL	NULL
1	2	2.0000000000	NULL	NULL	NULL	NULL
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	NULL	NULL	NULL	NULL
3	3.0	3.0000100000	NULL	NULL	NULL	NULL
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	NULL	NULL	NULL	NULL
5	B	5.0000000000	NULL	NULL	NULL	NULL
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL

select /*+use_hash(t2,t7)*/* from t2 full join t7 on t2.b = t7.c order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	 A	444       	5.550	1
1	1	1.0000000000	 C	A         	1	1
1	2	2.0000000000	NULL	NULL	NULL	NULL
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	 A	222       	333	5
3	3.0	3.0000100000	NULL	NULL	NULL	NULL
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	 B	3.0       	555	3.00001
5	B	5.0000000000	 B	2         	B	2
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL
select /*+use_merge(t2,t7)*/* from t2 full join t7 on t2.b = t7.c order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	 A	444       	5.550	1
1	1	1.0000000000	 C	A         	1	1
1	2	2.0000000000	NULL	NULL	NULL	NULL
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	 A	222       	333	5
3	3.0	3.0000100000	NULL	NULL	NULL	NULL
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	 B	3.0       	555	3.00001
5	B	5.0000000000	 B	2         	B	2
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL
select /*+use_nl(t2,t7)*/* from t2 full join t7 on t2.b = t7.c order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	 A	444       	5.550	1
1	1	1.0000000000	 C	A         	1	1
1	2	2.0000000000	NULL	NULL	NULL	NULL
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	 A	222       	333	5
3	3.0	3.0000100000	NULL	NULL	NULL	NULL
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	 B	3.0       	555	3.00001
5	B	5.0000000000	 B	2         	B	2
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL

select /*+use_hash(t2,t7)*/* from t2 full join t7 on t2.b = t7.a and t2.c = t7.d order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	 A	222       	333	5
NULL	NULL	NULL	 A	444       	5.550	1
NULL	NULL	NULL	 B	2         	B	2
NULL	NULL	NULL	 B	3.0       	555	3.00001
NULL	NULL	NULL	 C	A         	1	1
1	1	1.0000000000	NULL	NULL	NULL	NULL
1	2	2.0000000000	NULL	NULL	NULL	NULL
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	NULL	NULL	NULL	NULL
3	3.0	3.0000100000	NULL	NULL	NULL	NULL
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	NULL	NULL	NULL	NULL
5	B	5.0000000000	NULL	NULL	NULL	NULL
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL
select /*+use_merge(t2,t7)*/* from t2 full join t7 on t2.b = t7.a and t2.c = t7.d order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	 A	222       	333	5
NULL	NULL	NULL	 A	444       	5.550	1
NULL	NULL	NULL	 B	2         	B	2
NULL	NULL	NULL	 B	3.0       	555	3.00001
NULL	NULL	NULL	 C	A         	1	1
1	1	1.0000000000	NULL	NULL	NULL	NULL
1	2	2.0000000000	NULL	NULL	NULL	NULL
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	NULL	NULL	NULL	NULL
3	3.0	3.0000100000	NULL	NULL	NULL	NULL
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	NULL	NULL	NULL	NULL
5	B	5.0000000000	NULL	NULL	NULL	NULL
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL
select /*+use_nl(t2,t7)*/* from t2 full join t7 on t2.b = t7.a and t2.c = t7.d order by t2.a,t2.b,t7.a,t7.b;
a	b	c	a	b	c	d
NULL	NULL	NULL	NULL	NULL	NULL	NULL
NULL	NULL	NULL	 A	222       	333	5
NULL	NULL	NULL	 A	444       	5.550	1
NULL	NULL	NULL	 B	2         	B	2
NULL	NULL	NULL	 B	3.0       	555	3.00001
NULL	NULL	NULL	 C	A         	1	1
1	1	1.0000000000	NULL	NULL	NULL	NULL
1	2	2.0000000000	NULL	NULL	NULL	NULL
1	222	3.3300000000	NULL	NULL	NULL	NULL
2	2.00	2.0000100000	NULL	NULL	NULL	NULL
2	222	3.3300000000	NULL	NULL	NULL	NULL
2	333	2.2200000000	NULL	NULL	NULL	NULL
3	3.0	3.0000100000	NULL	NULL	NULL	NULL
3	3333	1.1100000000	NULL	NULL	NULL	NULL
4	A	4.3300000000	NULL	NULL	NULL	NULL
5	555	5.5500000000	NULL	NULL	NULL	NULL
5	B	5.0000000000	NULL	NULL	NULL	NULL
6	6666	5.5000000000	NULL	NULL	NULL	NULL
6	AB	6.0000000000	NULL	NULL	NULL	NULL

select /*+use_hash(t1,t2)*/* from t1,t2 where t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
select /*+use_merge(t1,t2)*/* from t1,t2 where t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000
select /*+use_nl(t1,t2)*/* from t1,t2 where t1.d = t2.c order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	b	c	d	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000
1	1	111	1.1100000000	3	3333	1.1100000000
1	2	2	2.0000000000	1	2	2.0000000000
2	2	2.0	2.0000000000	1	2	2.0000000000
2	2	222	2.2200000000	2	333	2.2200000000
3	3	3	3.0000100000	3	3.0	3.0000100000
3	3	333	3.3300000000	1	222	3.3300000000
3	3	333	3.3300000000	2	222	3.3300000000

select /*+use_hash(t1,t2)*/t1.a,t1.c,t2.a,t2.b from t1 right join t2 on t1.d = t2.c where t1.d > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	c	a	b
2	222	2	333
3	3	3	3.0
3	333	1	222
3	333	2	222
select /*+use_merge(t1,t2)*/t1.a,t1.c,t2.a,t2.b from t1 right join t2 on t1.d = t2.c where t1.d > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	c	a	b
2	222	2	333
3	3	3	3.0
3	333	1	222
3	333	2	222
select /*+use_nl(t1,t2)*/t1.a,t1.c,t2.a,t2.b from t1 right join t2 on t1.d = t2.c where t1.d > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	c	a	b
2	222	2	333
3	3	3	3.0
3	333	1	222
3	333	2	222

select /*+use_hash(t1,t2)*/t1.a,t1.c,t2.a,t2.b from t1 full join t2 on t1.d = t2.c where t1.a > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	c	a	b
3	3	3	3.0
3	333	1	222
3	333	2	222
4	444	NULL	NULL
5	5.550	NULL	NULL
123	2001-01-01	NULL	NULL
1224	111	NULL	NULL
select /*+use_merge(t1,t2)*/t1.a,t1.c,t2.a,t2.b from t1 full join t2 on t1.d = t2.c where t1.a > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	c	a	b
3	3	3	3.0
3	333	1	222
3	333	2	222
4	444	NULL	NULL
5	5.550	NULL	NULL
123	2001-01-01	NULL	NULL
1224	111	NULL	NULL
select /*+use_nl(t1,t2)*/t1.a,t1.c,t2.a,t2.b from t1 full join t2 on t1.d = t2.c where t1.a > 2 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c;
a	c	a	b
3	3	3	3.0
3	333	1	222
3	333	2	222
4	444	NULL	NULL
5	5.550	NULL	NULL
123	2001-01-01	NULL	NULL
1224	111	NULL	NULL

select /*+use_hash(t1,t2,t3)*/* from t1,t2,t3 where t1.a = t2.a and t2.a = t3.a and t3.b > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b;
a	b	c	d	a	b	c	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000	1	2	3
1	1	1	1.0000000000	1	1	1.0000000000	1	3	3
1	1	1	1.0000000000	1	2	2.0000000000	1	2	3
1	1	1	1.0000000000	1	2	2.0000000000	1	3	3
1	1	1	1.0000000000	1	222	3.3300000000	1	2	3
1	1	1	1.0000000000	1	222	3.3300000000	1	3	3
1	1	111	1.1100000000	1	1	1.0000000000	1	2	3
1	1	111	1.1100000000	1	1	1.0000000000	1	3	3
1	1	111	1.1100000000	1	2	2.0000000000	1	2	3
1	1	111	1.1100000000	1	2	2.0000000000	1	3	3
1	1	111	1.1100000000	1	222	3.3300000000	1	2	3
1	1	111	1.1100000000	1	222	3.3300000000	1	3	3
1	2	2	2.0000000000	1	1	1.0000000000	1	2	3
1	2	2	2.0000000000	1	1	1.0000000000	1	3	3
1	2	2	2.0000000000	1	2	2.0000000000	1	2	3
1	2	2	2.0000000000	1	2	2.0000000000	1	3	3
1	2	2	2.0000000000	1	222	3.3300000000	1	2	3
1	2	2	2.0000000000	1	222	3.3300000000	1	3	3
2	2	2.0	2.0000000000	2	2.00	2.0000100000	2	2	3
2	2	2.0	2.0000000000	2	222	3.3300000000	2	2	3
2	2	2.0	2.0000000000	2	333	2.2200000000	2	2	3
2	2	222	2.2200000000	2	2.00	2.0000100000	2	2	3
2	2	222	2.2200000000	2	222	3.3300000000	2	2	3
2	2	222	2.2200000000	2	333	2.2200000000	2	2	3
3	3	3	3.0000100000	3	3.0	3.0000100000	3	2	4
3	3	3	3.0000100000	3	3333	1.1100000000	3	2	4
3	3	333	3.3300000000	3	3.0	3.0000100000	3	2	4
3	3	333	3.3300000000	3	3333	1.1100000000	3	2	4
4	4	444	4.4400000000	4	A	4.3300000000	4	2	1
4	4	444	4.4400000000	4	A	4.3300000000	4	3	2
select /*+use_merge(t1,t2,t3)*/* from t1,t2,t3 where t1.a = t2.a and t2.a = t3.a and t3.b > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b;
a	b	c	d	a	b	c	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000	1	2	3
1	1	1	1.0000000000	1	1	1.0000000000	1	3	3
1	1	1	1.0000000000	1	2	2.0000000000	1	2	3
1	1	1	1.0000000000	1	2	2.0000000000	1	3	3
1	1	1	1.0000000000	1	222	3.3300000000	1	2	3
1	1	1	1.0000000000	1	222	3.3300000000	1	3	3
1	1	111	1.1100000000	1	1	1.0000000000	1	2	3
1	1	111	1.1100000000	1	1	1.0000000000	1	3	3
1	1	111	1.1100000000	1	2	2.0000000000	1	2	3
1	1	111	1.1100000000	1	2	2.0000000000	1	3	3
1	1	111	1.1100000000	1	222	3.3300000000	1	2	3
1	1	111	1.1100000000	1	222	3.3300000000	1	3	3
1	2	2	2.0000000000	1	1	1.0000000000	1	2	3
1	2	2	2.0000000000	1	1	1.0000000000	1	3	3
1	2	2	2.0000000000	1	2	2.0000000000	1	2	3
1	2	2	2.0000000000	1	2	2.0000000000	1	3	3
1	2	2	2.0000000000	1	222	3.3300000000	1	2	3
1	2	2	2.0000000000	1	222	3.3300000000	1	3	3
2	2	2.0	2.0000000000	2	2.00	2.0000100000	2	2	3
2	2	2.0	2.0000000000	2	222	3.3300000000	2	2	3
2	2	2.0	2.0000000000	2	333	2.2200000000	2	2	3
2	2	222	2.2200000000	2	2.00	2.0000100000	2	2	3
2	2	222	2.2200000000	2	222	3.3300000000	2	2	3
2	2	222	2.2200000000	2	333	2.2200000000	2	2	3
3	3	3	3.0000100000	3	3.0	3.0000100000	3	2	4
3	3	3	3.0000100000	3	3333	1.1100000000	3	2	4
3	3	333	3.3300000000	3	3.0	3.0000100000	3	2	4
3	3	333	3.3300000000	3	3333	1.1100000000	3	2	4
4	4	444	4.4400000000	4	A	4.3300000000	4	2	1
4	4	444	4.4400000000	4	A	4.3300000000	4	3	2
select /*+use_nl(t1,t2,t3)*/* from t1,t2,t3 where t1.a = t2.a and t2.a = t3.a and t3.b > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b;
a	b	c	d	a	b	c	a	b	c
1	1	1	1.0000000000	1	1	1.0000000000	1	2	3
1	1	1	1.0000000000	1	1	1.0000000000	1	3	3
1	1	1	1.0000000000	1	2	2.0000000000	1	2	3
1	1	1	1.0000000000	1	2	2.0000000000	1	3	3
1	1	1	1.0000000000	1	222	3.3300000000	1	2	3
1	1	1	1.0000000000	1	222	3.3300000000	1	3	3
1	1	111	1.1100000000	1	1	1.0000000000	1	2	3
1	1	111	1.1100000000	1	1	1.0000000000	1	3	3
1	1	111	1.1100000000	1	2	2.0000000000	1	2	3
1	1	111	1.1100000000	1	2	2.0000000000	1	3	3
1	1	111	1.1100000000	1	222	3.3300000000	1	2	3
1	1	111	1.1100000000	1	222	3.3300000000	1	3	3
1	2	2	2.0000000000	1	1	1.0000000000	1	2	3
1	2	2	2.0000000000	1	1	1.0000000000	1	3	3
1	2	2	2.0000000000	1	2	2.0000000000	1	2	3
1	2	2	2.0000000000	1	2	2.0000000000	1	3	3
1	2	2	2.0000000000	1	222	3.3300000000	1	2	3
1	2	2	2.0000000000	1	222	3.3300000000	1	3	3
2	2	2.0	2.0000000000	2	2.00	2.0000100000	2	2	3
2	2	2.0	2.0000000000	2	222	3.3300000000	2	2	3
2	2	2.0	2.0000000000	2	333	2.2200000000	2	2	3
2	2	222	2.2200000000	2	2.00	2.0000100000	2	2	3
2	2	222	2.2200000000	2	222	3.3300000000	2	2	3
2	2	222	2.2200000000	2	333	2.2200000000	2	2	3
3	3	3	3.0000100000	3	3.0	3.0000100000	3	2	4
3	3	3	3.0000100000	3	3333	1.1100000000	3	2	4
3	3	333	3.3300000000	3	3.0	3.0000100000	3	2	4
3	3	333	3.3300000000	3	3333	1.1100000000	3	2	4
4	4	444	4.4400000000	4	A	4.3300000000	4	2	1
4	4	444	4.4400000000	4	A	4.3300000000	4	3	2

select /*+use_hash(t1,t2,t3)*/* from t1,t2,t3 where t1.c = t2.b and t2.a = t3.a and t3.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b;
a	b	c	d	a	b	c	a	b	c
2	2	222	2.2200000000	2	222	3.3300000000	2	2	3
3	3	333	3.3300000000	2	333	2.2200000000	2	2	3
select /*+use_merge(t1,t2,t3)*/* from t1,t2,t3 where t1.c = t2.b and t2.a = t3.a and t3.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b;
a	b	c	d	a	b	c	a	b	c
2	2	222	2.2200000000	2	222	3.3300000000	2	2	3
3	3	333	3.3300000000	2	333	2.2200000000	2	2	3
select /*+use_nl(t1,t2,t3)*/* from t1,t2,t3 where t1.c = t2.b and t2.a = t3.a and t3.a > 1 order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b;
a	b	c	d	a	b	c	a	b	c
2	2	222	2.2200000000	2	222	3.3300000000	2	2	3
3	3	333	3.3300000000	2	333	2.2200000000	2	2	3
select * from t1;
a	b	c	d
1	1	1	1.0000000000
1	1	111	1.1100000000
1	2	2	2.0000000000
1224	2	111	3.3000000000
123	3	2001-01-01	4.4000000000
2	2	2.0	2.0000000000
2	2	222	2.2200000000
3	3	3	3.0000100000
3	3	333	3.3300000000
4	4	444	4.4400000000
5	5	5.550	NULL
NULL	NULL	NULL	NULL
select * from t2;
a	b	c
1	1	1.0000000000
1	2	2.0000000000
1	222	3.3300000000
2	2.00	2.0000100000
2	222	3.3300000000
2	333	2.2200000000
3	3.0	3.0000100000
3	3333	1.1100000000
4	A	4.3300000000
5	555	5.5500000000
5	B	5.0000000000
6	6666	5.5000000000
6	AB	6.0000000000
NULL	NULL	NULL
select * from t3;
a	b	c
1	2	3
1	3	3
2	2	3
3	2	4
4	2	1
4	3	2
5	NULL	NULL
select * from t4;
a	b	c
1	1	111
1	1	222
1	2	222
1	3	222
2	2	333
2	3	333
5	NULL	NULL
explain basic select /*+use_merge(t1,t2,t3,t4)*/t1.a,t1.c,t2.a,t2.b,t3.a,t3.b,t4.a,t4.b
from t1 join
(t2 inner join t3 inner join t4)
on t1.a = t2.a and t2.a = t3.a and t3.a = t4.a
order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b,t4.a,t4.b;
Query Plan
=========================
|ID|OPERATOR       |NAME|
-------------------------
|0 |SORT           |    |
|1 | MERGE JOIN    |    |
|2 |  MERGE JOIN   |    |
|3 |   MERGE JOIN  |    |
|4 |    SORT       |    |
|5 |     TABLE SCAN|t2  |
|6 |    SORT       |    |
|7 |     TABLE SCAN|t3  |
|8 |   SORT        |    |
|9 |    TABLE SCAN |t1  |
|10|  SORT         |    |
|11|   TABLE SCAN  |t4  |
=========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.c], [t2.a], [t2.b], [t3.a], [t3.b], [t4.a], [t4.b]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.b, ASC], [t2.c, ASC], [t3.b, ASC], [t4.b, ASC]), prefix_pos(1)
  1 - output([t1.a], [t1.c], [t2.a], [t2.b], [t3.a], [t3.b], [t4.a], [t4.b], [t1.b], [t1.d], [t2.c]), filter(nil), 
      equal_conds([t3.a = t4.a]), other_conds(nil)
  2 - output([t1.a], [t1.c], [t2.a], [t2.b], [t3.a], [t3.b], [t1.b], [t1.d], [t2.c]), filter(nil), 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  3 - output([t2.a], [t2.b], [t3.a], [t3.b], [t2.c]), filter(nil), 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  4 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.a, ASC])
  5 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)
  6 - output([t3.a], [t3.b]), filter(nil), sort_keys([t3.a, ASC])
  7 - output([t3.a], [t3.b]), filter(nil), 
      access([t3.a], [t3.b]), partitions(p0)
  8 - output([t1.a], [t1.c], [t1.b], [t1.d]), filter(nil), sort_keys([t1.a, ASC])
  9 - output([t1.a], [t1.c], [t1.b], [t1.d]), filter(nil), 
      access([t1.a], [t1.c], [t1.b], [t1.d]), partitions(p0)
  10 - output([t4.a], [t4.b]), filter(nil), sort_keys([t4.a, ASC])
  11 - output([t4.a], [t4.b]), filter(nil), 
      access([t4.a], [t4.b]), partitions(p0)

select /*+use_merge(t1,t2,t3,t4)*/t1.a,t1.c,t2.a,t2.b,t3.a,t3.b,t4.a,t4.b
from t1 join
(t2 inner join t3 inner join t4)
on t1.a = t2.a and t2.a = t3.a and t3.a = t4.a
order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b,t4.a,t4.b;
a	c	a	b	a	b	a	b
1	1	1	1	1	2	1	1
1	1	1	1	1	2	1	1
1	1	1	1	1	2	1	2
1	1	1	1	1	2	1	3
1	1	1	1	1	3	1	1
1	1	1	1	1	3	1	1
1	1	1	1	1	3	1	2
1	1	1	1	1	3	1	3
1	1	1	2	1	2	1	1
1	1	1	2	1	2	1	1
1	1	1	2	1	2	1	2
1	1	1	2	1	2	1	3
1	1	1	2	1	3	1	1
1	1	1	2	1	3	1	1
1	1	1	2	1	3	1	2
1	1	1	2	1	3	1	3
1	1	1	222	1	2	1	1
1	1	1	222	1	2	1	1
1	1	1	222	1	2	1	2
1	1	1	222	1	2	1	3
1	1	1	222	1	3	1	1
1	1	1	222	1	3	1	1
1	1	1	222	1	3	1	2
1	1	1	222	1	3	1	3
1	111	1	1	1	2	1	1
1	111	1	1	1	2	1	1
1	111	1	1	1	2	1	2
1	111	1	1	1	2	1	3
1	111	1	1	1	3	1	1
1	111	1	1	1	3	1	1
1	111	1	1	1	3	1	2
1	111	1	1	1	3	1	3
1	111	1	2	1	2	1	1
1	111	1	2	1	2	1	1
1	111	1	2	1	2	1	2
1	111	1	2	1	2	1	3
1	111	1	2	1	3	1	1
1	111	1	2	1	3	1	1
1	111	1	2	1	3	1	2
1	111	1	2	1	3	1	3
1	111	1	222	1	2	1	1
1	111	1	222	1	2	1	1
1	111	1	222	1	2	1	2
1	111	1	222	1	2	1	3
1	111	1	222	1	3	1	1
1	111	1	222	1	3	1	1
1	111	1	222	1	3	1	2
1	111	1	222	1	3	1	3
1	2	1	1	1	2	1	1
1	2	1	1	1	2	1	1
1	2	1	1	1	2	1	2
1	2	1	1	1	2	1	3
1	2	1	1	1	3	1	1
1	2	1	1	1	3	1	1
1	2	1	1	1	3	1	2
1	2	1	1	1	3	1	3
1	2	1	2	1	2	1	1
1	2	1	2	1	2	1	1
1	2	1	2	1	2	1	2
1	2	1	2	1	2	1	3
1	2	1	2	1	3	1	1
1	2	1	2	1	3	1	1
1	2	1	2	1	3	1	2
1	2	1	2	1	3	1	3
1	2	1	222	1	2	1	1
1	2	1	222	1	2	1	1
1	2	1	222	1	2	1	2
1	2	1	222	1	2	1	3
1	2	1	222	1	3	1	1
1	2	1	222	1	3	1	1
1	2	1	222	1	3	1	2
1	2	1	222	1	3	1	3
2	2.0	2	2.00	2	2	2	2
2	2.0	2	2.00	2	2	2	3
2	2.0	2	222	2	2	2	2
2	2.0	2	222	2	2	2	3
2	2.0	2	333	2	2	2	2
2	2.0	2	333	2	2	2	3
2	222	2	2.00	2	2	2	2
2	222	2	2.00	2	2	2	3
2	222	2	222	2	2	2	2
2	222	2	222	2	2	2	3
2	222	2	333	2	2	2	2
2	222	2	333	2	2	2	3
5	5.550	5	555	5	NULL	5	NULL
5	5.550	5	B	5	NULL	5	NULL

explain basic select /*+use_hash(t1,t2,t3,t4)*/t1.a,t1.c,t2.a,t2.b,t3.a,t3.b,t4.a,t4.b
from t1 join
(t2 inner join t3 inner join t4)
on t1.a = t2.a and t2.a = t3.a and t3.a = t4.a
order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b,t4.a,t4.b;
Query Plan
========================
|ID|OPERATOR      |NAME|
------------------------
|0 |SORT          |    |
|1 | HASH JOIN    |    |
|2 |  TABLE SCAN  |t4  |
|3 |  HASH JOIN   |    |
|4 |   HASH JOIN  |    |
|5 |    TABLE SCAN|t3  |
|6 |    TABLE SCAN|t2  |
|7 |   TABLE SCAN |t1  |
========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.c], [t2.a], [t2.b], [t3.a], [t3.b], [t4.a], [t4.b]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.b, ASC], [t2.c, ASC], [t3.b, ASC], [t4.b, ASC])
  1 - output([t1.a], [t1.c], [t2.a], [t2.b], [t3.a], [t3.b], [t4.a], [t4.b], [t1.b], [t1.d], [t2.c]), filter(nil), 
      equal_conds([t3.a = t4.a]), other_conds(nil)
  2 - output([t4.a], [t4.b]), filter(nil), 
      access([t4.a], [t4.b]), partitions(p0)
  3 - output([t1.a], [t1.c], [t2.a], [t2.b], [t3.a], [t3.b], [t1.b], [t1.d], [t2.c]), filter(nil), 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  4 - output([t2.a], [t2.b], [t3.a], [t3.b], [t2.c]), filter(nil), 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  5 - output([t3.a], [t3.b]), filter(nil), 
      access([t3.a], [t3.b]), partitions(p0)
  6 - output([t2.a], [t2.b], [t2.c]), filter(nil), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)
  7 - output([t1.a], [t1.c], [t1.b], [t1.d]), filter(nil), 
      access([t1.a], [t1.c], [t1.b], [t1.d]), partitions(p0)

select /*+use_hash(t1,t2,t3,t4)*/t1.a,t1.c,t2.a,t2.b,t3.a,t3.b,t4.a,t4.b
from t1 join
(t2 inner join t3 inner join t4)
on t1.a = t2.a and t2.a = t3.a and t3.a = t4.a
order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b,t4.a,t4.b;
a	c	a	b	a	b	a	b
1	1	1	1	1	2	1	1
1	1	1	1	1	2	1	1
1	1	1	1	1	2	1	2
1	1	1	1	1	2	1	3
1	1	1	1	1	3	1	1
1	1	1	1	1	3	1	1
1	1	1	1	1	3	1	2
1	1	1	1	1	3	1	3
1	1	1	2	1	2	1	1
1	1	1	2	1	2	1	1
1	1	1	2	1	2	1	2
1	1	1	2	1	2	1	3
1	1	1	2	1	3	1	1
1	1	1	2	1	3	1	1
1	1	1	2	1	3	1	2
1	1	1	2	1	3	1	3
1	1	1	222	1	2	1	1
1	1	1	222	1	2	1	1
1	1	1	222	1	2	1	2
1	1	1	222	1	2	1	3
1	1	1	222	1	3	1	1
1	1	1	222	1	3	1	1
1	1	1	222	1	3	1	2
1	1	1	222	1	3	1	3
1	111	1	1	1	2	1	1
1	111	1	1	1	2	1	1
1	111	1	1	1	2	1	2
1	111	1	1	1	2	1	3
1	111	1	1	1	3	1	1
1	111	1	1	1	3	1	1
1	111	1	1	1	3	1	2
1	111	1	1	1	3	1	3
1	111	1	2	1	2	1	1
1	111	1	2	1	2	1	1
1	111	1	2	1	2	1	2
1	111	1	2	1	2	1	3
1	111	1	2	1	3	1	1
1	111	1	2	1	3	1	1
1	111	1	2	1	3	1	2
1	111	1	2	1	3	1	3
1	111	1	222	1	2	1	1
1	111	1	222	1	2	1	1
1	111	1	222	1	2	1	2
1	111	1	222	1	2	1	3
1	111	1	222	1	3	1	1
1	111	1	222	1	3	1	1
1	111	1	222	1	3	1	2
1	111	1	222	1	3	1	3
1	2	1	1	1	2	1	1
1	2	1	1	1	2	1	1
1	2	1	1	1	2	1	2
1	2	1	1	1	2	1	3
1	2	1	1	1	3	1	1
1	2	1	1	1	3	1	1
1	2	1	1	1	3	1	2
1	2	1	1	1	3	1	3
1	2	1	2	1	2	1	1
1	2	1	2	1	2	1	1
1	2	1	2	1	2	1	2
1	2	1	2	1	2	1	3
1	2	1	2	1	3	1	1
1	2	1	2	1	3	1	1
1	2	1	2	1	3	1	2
1	2	1	2	1	3	1	3
1	2	1	222	1	2	1	1
1	2	1	222	1	2	1	1
1	2	1	222	1	2	1	2
1	2	1	222	1	2	1	3
1	2	1	222	1	3	1	1
1	2	1	222	1	3	1	1
1	2	1	222	1	3	1	2
1	2	1	222	1	3	1	3
2	2.0	2	2.00	2	2	2	2
2	2.0	2	2.00	2	2	2	3
2	2.0	2	222	2	2	2	2
2	2.0	2	222	2	2	2	3
2	2.0	2	333	2	2	2	2
2	2.0	2	333	2	2	2	3
2	222	2	2.00	2	2	2	2
2	222	2	2.00	2	2	2	3
2	222	2	222	2	2	2	2
2	222	2	222	2	2	2	3
2	222	2	333	2	2	2	2
2	222	2	333	2	2	2	3
5	5.550	5	555	5	NULL	5	NULL
5	5.550	5	B	5	NULL	5	NULL

explain basic select /*+use_merge(t1,t2,t3,t4)*/t1.a,t1.c,t2.a,t2.b,t3.a,t3.b,t4.a,t4.b
from t1 join
(t2 inner join t3 inner join t4)
on t1.a = t2.a and t2.a = t3.a and t3.a = t4.a
where t1.a > 2 and t3.b > t4.b
order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b,t4.a,t4.b;
Query Plan
=========================
|ID|OPERATOR       |NAME|
-------------------------
|0 |SORT           |    |
|1 | MERGE JOIN    |    |
|2 |  MERGE JOIN   |    |
|3 |   MERGE JOIN  |    |
|4 |    SORT       |    |
|5 |     TABLE SCAN|t3  |
|6 |    SORT       |    |
|7 |     TABLE SCAN|t4  |
|8 |   SORT        |    |
|9 |    TABLE SCAN |t2  |
|10|  SORT         |    |
|11|   TABLE SCAN  |t1  |
=========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.c], [t2.a], [t2.b], [t3.a], [t3.b], [t4.a], [t4.b]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.b, ASC], [t2.c, ASC], [t3.b, ASC], [t4.b, ASC]), prefix_pos(1)
  1 - output([t1.a], [t1.c], [t2.a], [t2.b], [t3.a], [t3.b], [t4.a], [t4.b], [t1.b], [t1.d], [t2.c]), filter(nil), 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  2 - output([t2.a], [t2.b], [t3.a], [t3.b], [t4.a], [t4.b], [t2.c]), filter(nil), 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  3 - output([t3.a], [t3.b], [t4.a], [t4.b]), filter(nil), 
      equal_conds([t3.a = t4.a]), other_conds([t3.b > t4.b])
  4 - output([t3.a], [t3.b]), filter(nil), sort_keys([t3.a, ASC])
  5 - output([t3.a], [t3.b]), filter([t3.a > 2]), 
      access([t3.a], [t3.b]), partitions(p0)
  6 - output([t4.a], [t4.b]), filter(nil), sort_keys([t4.a, ASC])
  7 - output([t4.a], [t4.b]), filter([t4.a > 2]), 
      access([t4.a], [t4.b]), partitions(p0)
  8 - output([t2.a], [t2.b], [t2.c]), filter(nil), sort_keys([t2.a, ASC])
  9 - output([t2.a], [t2.b], [t2.c]), filter([t2.a > 2]), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)
  10 - output([t1.a], [t1.c], [t1.b], [t1.d]), filter(nil), sort_keys([t1.a, ASC])
  11 - output([t1.a], [t1.c], [t1.b], [t1.d]), filter([t1.a > 2]), 
      access([t1.a], [t1.c], [t1.b], [t1.d]), partitions(p0)

select /*+use_merge(t1,t2,t3,t4)*/t1.a,t1.c,t2.a,t2.b,t3.a,t3.b,t4.a,t4.b
from t1 join
(t2 inner join t3 inner join t4)
on t1.a = t2.a and t2.a = t3.a and t3.a = t4.a
where t1.a > 2 and t3.b > t4.b
order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b,t4.a,t4.b;
a	c	a	b	a	b	a	b

explain basic select /*+use_hash(t1,t2,t3,t4)*/t1.a,t1.c,t2.a,t2.b,t3.a,t3.b,t4.a,t4.b
from t1 join
(t2 inner join t3 inner join t4)
on t1.a = t2.a and t2.a = t3.a and t3.a = t4.a
where t1.a > 2 and t3.b > t4.b
order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b,t4.a,t4.b;
Query Plan
========================
|ID|OPERATOR      |NAME|
------------------------
|0 |SORT          |    |
|1 | HASH JOIN    |    |
|2 |  HASH JOIN   |    |
|3 |   HASH JOIN  |    |
|4 |    TABLE SCAN|t3  |
|5 |    TABLE SCAN|t4  |
|6 |   TABLE SCAN |t2  |
|7 |  TABLE SCAN  |t1  |
========================

Outputs & filters: 
-------------------------------------
  0 - output([t1.a], [t1.c], [t2.a], [t2.b], [t3.a], [t3.b], [t4.a], [t4.b]), filter(nil), sort_keys([t1.a, ASC], [t1.b, ASC], [t1.c, ASC], [t1.d, ASC], [t2.b, ASC], [t2.c, ASC], [t3.b, ASC], [t4.b, ASC])
  1 - output([t1.a], [t1.c], [t2.a], [t2.b], [t3.a], [t3.b], [t4.a], [t4.b], [t1.b], [t1.d], [t2.c]), filter(nil), 
      equal_conds([t1.a = t2.a]), other_conds(nil)
  2 - output([t2.a], [t2.b], [t3.a], [t3.b], [t4.a], [t4.b], [t2.c]), filter(nil), 
      equal_conds([t2.a = t3.a]), other_conds(nil)
  3 - output([t3.a], [t3.b], [t4.a], [t4.b]), filter(nil), 
      equal_conds([t3.a = t4.a]), other_conds([t3.b > t4.b])
  4 - output([t3.a], [t3.b]), filter([t3.a > 2]), 
      access([t3.a], [t3.b]), partitions(p0)
  5 - output([t4.a], [t4.b]), filter([t4.a > 2]), 
      access([t4.a], [t4.b]), partitions(p0)
  6 - output([t2.a], [t2.b], [t2.c]), filter([t2.a > 2]), 
      access([t2.a], [t2.b], [t2.c]), partitions(p0)
  7 - output([t1.a], [t1.c], [t1.b], [t1.d]), filter([t1.a > 2]), 
      access([t1.a], [t1.c], [t1.b], [t1.d]), partitions(p0)

select /*+use_hash(t1,t2,t3,t4)*/t1.a,t1.c,t2.a,t2.b,t3.a,t3.b,t4.a,t4.b
from t1 join
(t2 inner join t3 inner join t4)
on t1.a = t2.a and t2.a = t3.a and t3.a = t4.a
where t1.a > 2 and t3.b > t4.b
order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b,t4.a,t4.b;
a	c	a	b	a	b	a	b

select /*+use_merge(t1,t2,t3,t4)*/t1.a,t1.c,t2.a,t2.b,t3.a,t3.b,t4.a,t4.b
from t1
left join
(t2 inner join t3 inner join t4)
on t1.a = t2.a and t2.a = t3.a and t3.a = t4.a
order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b,t4.a,t4.b;
a	c	a	b	a	b	a	b
NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1	1	2	1	1
1	1	1	1	1	2	1	1
1	1	1	1	1	2	1	2
1	1	1	1	1	2	1	3
1	1	1	1	1	3	1	1
1	1	1	1	1	3	1	1
1	1	1	1	1	3	1	2
1	1	1	1	1	3	1	3
1	1	1	2	1	2	1	1
1	1	1	2	1	2	1	1
1	1	1	2	1	2	1	2
1	1	1	2	1	2	1	3
1	1	1	2	1	3	1	1
1	1	1	2	1	3	1	1
1	1	1	2	1	3	1	2
1	1	1	2	1	3	1	3
1	1	1	222	1	2	1	1
1	1	1	222	1	2	1	1
1	1	1	222	1	2	1	2
1	1	1	222	1	2	1	3
1	1	1	222	1	3	1	1
1	1	1	222	1	3	1	1
1	1	1	222	1	3	1	2
1	1	1	222	1	3	1	3
1	111	1	1	1	2	1	1
1	111	1	1	1	2	1	1
1	111	1	1	1	2	1	2
1	111	1	1	1	2	1	3
1	111	1	1	1	3	1	1
1	111	1	1	1	3	1	1
1	111	1	1	1	3	1	2
1	111	1	1	1	3	1	3
1	111	1	2	1	2	1	1
1	111	1	2	1	2	1	1
1	111	1	2	1	2	1	2
1	111	1	2	1	2	1	3
1	111	1	2	1	3	1	1
1	111	1	2	1	3	1	1
1	111	1	2	1	3	1	2
1	111	1	2	1	3	1	3
1	111	1	222	1	2	1	1
1	111	1	222	1	2	1	1
1	111	1	222	1	2	1	2
1	111	1	222	1	2	1	3
1	111	1	222	1	3	1	1
1	111	1	222	1	3	1	1
1	111	1	222	1	3	1	2
1	111	1	222	1	3	1	3
1	2	1	1	1	2	1	1
1	2	1	1	1	2	1	1
1	2	1	1	1	2	1	2
1	2	1	1	1	2	1	3
1	2	1	1	1	3	1	1
1	2	1	1	1	3	1	1
1	2	1	1	1	3	1	2
1	2	1	1	1	3	1	3
1	2	1	2	1	2	1	1
1	2	1	2	1	2	1	1
1	2	1	2	1	2	1	2
1	2	1	2	1	2	1	3
1	2	1	2	1	3	1	1
1	2	1	2	1	3	1	1
1	2	1	2	1	3	1	2
1	2	1	2	1	3	1	3
1	2	1	222	1	2	1	1
1	2	1	222	1	2	1	1
1	2	1	222	1	2	1	2
1	2	1	222	1	2	1	3
1	2	1	222	1	3	1	1
1	2	1	222	1	3	1	1
1	2	1	222	1	3	1	2
1	2	1	222	1	3	1	3
2	2.0	2	2.00	2	2	2	2
2	2.0	2	2.00	2	2	2	3
2	2.0	2	222	2	2	2	2
2	2.0	2	222	2	2	2	3
2	2.0	2	333	2	2	2	2
2	2.0	2	333	2	2	2	3
2	222	2	2.00	2	2	2	2
2	222	2	2.00	2	2	2	3
2	222	2	222	2	2	2	2
2	222	2	222	2	2	2	3
2	222	2	333	2	2	2	2
2	222	2	333	2	2	2	3
3	3	NULL	NULL	NULL	NULL	NULL	NULL
3	333	NULL	NULL	NULL	NULL	NULL	NULL
4	444	NULL	NULL	NULL	NULL	NULL	NULL
5	5.550	5	555	5	NULL	5	NULL
5	5.550	5	B	5	NULL	5	NULL
123	2001-01-01	NULL	NULL	NULL	NULL	NULL	NULL
1224	111	NULL	NULL	NULL	NULL	NULL	NULL

select /*+use_hash(t1,t2,t3,t4)*/t1.a,t1.c,t2.a,t2.b,t3.a,t3.b,t4.a,t4.b
from t1
left join
(t2 inner join t3 inner join t4)
on t1.a = t2.a and t2.a = t3.a and t3.a = t4.a
order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b,t4.a,t4.b;
a	c	a	b	a	b	a	b
NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1	1	2	1	1
1	1	1	1	1	2	1	1
1	1	1	1	1	2	1	2
1	1	1	1	1	2	1	3
1	1	1	1	1	3	1	1
1	1	1	1	1	3	1	1
1	1	1	1	1	3	1	2
1	1	1	1	1	3	1	3
1	1	1	2	1	2	1	1
1	1	1	2	1	2	1	1
1	1	1	2	1	2	1	2
1	1	1	2	1	2	1	3
1	1	1	2	1	3	1	1
1	1	1	2	1	3	1	1
1	1	1	2	1	3	1	2
1	1	1	2	1	3	1	3
1	1	1	222	1	2	1	1
1	1	1	222	1	2	1	1
1	1	1	222	1	2	1	2
1	1	1	222	1	2	1	3
1	1	1	222	1	3	1	1
1	1	1	222	1	3	1	1
1	1	1	222	1	3	1	2
1	1	1	222	1	3	1	3
1	111	1	1	1	2	1	1
1	111	1	1	1	2	1	1
1	111	1	1	1	2	1	2
1	111	1	1	1	2	1	3
1	111	1	1	1	3	1	1
1	111	1	1	1	3	1	1
1	111	1	1	1	3	1	2
1	111	1	1	1	3	1	3
1	111	1	2	1	2	1	1
1	111	1	2	1	2	1	1
1	111	1	2	1	2	1	2
1	111	1	2	1	2	1	3
1	111	1	2	1	3	1	1
1	111	1	2	1	3	1	1
1	111	1	2	1	3	1	2
1	111	1	2	1	3	1	3
1	111	1	222	1	2	1	1
1	111	1	222	1	2	1	1
1	111	1	222	1	2	1	2
1	111	1	222	1	2	1	3
1	111	1	222	1	3	1	1
1	111	1	222	1	3	1	1
1	111	1	222	1	3	1	2
1	111	1	222	1	3	1	3
1	2	1	1	1	2	1	1
1	2	1	1	1	2	1	1
1	2	1	1	1	2	1	2
1	2	1	1	1	2	1	3
1	2	1	1	1	3	1	1
1	2	1	1	1	3	1	1
1	2	1	1	1	3	1	2
1	2	1	1	1	3	1	3
1	2	1	2	1	2	1	1
1	2	1	2	1	2	1	1
1	2	1	2	1	2	1	2
1	2	1	2	1	2	1	3
1	2	1	2	1	3	1	1
1	2	1	2	1	3	1	1
1	2	1	2	1	3	1	2
1	2	1	2	1	3	1	3
1	2	1	222	1	2	1	1
1	2	1	222	1	2	1	1
1	2	1	222	1	2	1	2
1	2	1	222	1	2	1	3
1	2	1	222	1	3	1	1
1	2	1	222	1	3	1	1
1	2	1	222	1	3	1	2
1	2	1	222	1	3	1	3
2	2.0	2	2.00	2	2	2	2
2	2.0	2	2.00	2	2	2	3
2	2.0	2	222	2	2	2	2
2	2.0	2	222	2	2	2	3
2	2.0	2	333	2	2	2	2
2	2.0	2	333	2	2	2	3
2	222	2	2.00	2	2	2	2
2	222	2	2.00	2	2	2	3
2	222	2	222	2	2	2	2
2	222	2	222	2	2	2	3
2	222	2	333	2	2	2	2
2	222	2	333	2	2	2	3
3	3	NULL	NULL	NULL	NULL	NULL	NULL
3	333	NULL	NULL	NULL	NULL	NULL	NULL
4	444	NULL	NULL	NULL	NULL	NULL	NULL
5	5.550	5	555	5	NULL	5	NULL
5	5.550	5	B	5	NULL	5	NULL
123	2001-01-01	NULL	NULL	NULL	NULL	NULL	NULL
1224	111	NULL	NULL	NULL	NULL	NULL	NULL

select /*+use_merge(t1,t2,t3,t4)*/t1.a,t1.c,t2.a,t2.b,t3.a,t3.b,t4.a,t4.b
from t1
left join
(t2 inner join t3 inner join t4)
on t1.a = t2.a and t2.a = t3.a and t3.a = t4.a
where t2.a > 2 or t4.b > 3
order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b,t4.a,t4.b;
a	c	a	b	a	b	a	b
5	5.550	5	555	5	NULL	5	NULL
5	5.550	5	B	5	NULL	5	NULL

select /*+use_hash(t1,t2,t3,t4)*/t1.a,t1.c,t2.a,t2.b,t3.a,t3.b,t4.a,t4.b
from t1
left join
(t2 inner join t3 inner join t4)
on t1.a = t2.a and t2.a = t3.a and t3.a = t4.a
where t2.a > 2 or t4.b > 3
order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b,t4.a,t4.b;
a	c	a	b	a	b	a	b
5	5.550	5	555	5	NULL	5	NULL
5	5.550	5	B	5	NULL	5	NULL

select /*+use_merge(t1,t2,t3,t4)*/t1.a,t1.c,t2.a,t2.b,t3.a,t3.b,t4.a,t4.b
from t1
left join ((t2 left join t3 on t3.b = t2.a)
join t4
on
t2.a = t4.a)
on t1.a = t2.a and t2.a = t3.a and t3.a = t4.a and t2.a= t4.b
order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b,t4.a,t4.b;
a	c	a	b	a	b	a	b
NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	NULL	NULL	NULL	NULL	NULL	NULL
1	111	NULL	NULL	NULL	NULL	NULL	NULL
1	2	NULL	NULL	NULL	NULL	NULL	NULL
2	2.0	2	2.00	2	2	2	2
2	2.0	2	222	2	2	2	2
2	2.0	2	333	2	2	2	2
2	222	2	2.00	2	2	2	2
2	222	2	222	2	2	2	2
2	222	2	333	2	2	2	2
3	3	NULL	NULL	NULL	NULL	NULL	NULL
3	333	NULL	NULL	NULL	NULL	NULL	NULL
4	444	NULL	NULL	NULL	NULL	NULL	NULL
5	5.550	NULL	NULL	NULL	NULL	NULL	NULL
123	2001-01-01	NULL	NULL	NULL	NULL	NULL	NULL
1224	111	NULL	NULL	NULL	NULL	NULL	NULL

select /*+use_hash(t1,t2,t3,t4)*/t1.a,t1.c,t2.a,t2.b,t3.a,t3.b,t4.a,t4.b
from t1
left join ((t2 left join t3 on t3.b = t2.a)
join t4
on
t2.a = t4.a)
on t1.a = t2.a and t2.a = t3.a and t3.a = t4.a and t2.a= t4.b
order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b,t4.a,t4.b;
a	c	a	b	a	b	a	b
NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	NULL	NULL	NULL	NULL	NULL	NULL
1	111	NULL	NULL	NULL	NULL	NULL	NULL
1	2	NULL	NULL	NULL	NULL	NULL	NULL
2	2.0	2	2.00	2	2	2	2
2	2.0	2	222	2	2	2	2
2	2.0	2	333	2	2	2	2
2	222	2	2.00	2	2	2	2
2	222	2	222	2	2	2	2
2	222	2	333	2	2	2	2
3	3	NULL	NULL	NULL	NULL	NULL	NULL
3	333	NULL	NULL	NULL	NULL	NULL	NULL
4	444	NULL	NULL	NULL	NULL	NULL	NULL
5	5.550	NULL	NULL	NULL	NULL	NULL	NULL
123	2001-01-01	NULL	NULL	NULL	NULL	NULL	NULL
1224	111	NULL	NULL	NULL	NULL	NULL	NULL

select /*+use_merge(t1,t2,t3,t4)*/t1.a,t1.c,t2.a,t2.b,t3.a,t3.b,t4.a,t4.b
from t1
right join
((t2 inner join t3 on t2.a = t3.a) inner join t4 on t3.b = t4.b)
on t1.a = t4.a
order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b,t4.a,t4.b;
a	c	a	b	a	b	a	b
1	1	1	1	1	2	1	2
1	1	1	1	1	3	1	3
1	1	1	2	1	2	1	2
1	1	1	2	1	3	1	3
1	1	1	222	1	2	1	2
1	1	1	222	1	3	1	3
1	1	2	2.00	2	2	1	2
1	1	2	222	2	2	1	2
1	1	2	333	2	2	1	2
1	1	3	3.0	3	2	1	2
1	1	3	3333	3	2	1	2
1	1	4	A	4	2	1	2
1	1	4	A	4	3	1	3
1	111	1	1	1	2	1	2
1	111	1	1	1	3	1	3
1	111	1	2	1	2	1	2
1	111	1	2	1	3	1	3
1	111	1	222	1	2	1	2
1	111	1	222	1	3	1	3
1	111	2	2.00	2	2	1	2
1	111	2	222	2	2	1	2
1	111	2	333	2	2	1	2
1	111	3	3.0	3	2	1	2
1	111	3	3333	3	2	1	2
1	111	4	A	4	2	1	2
1	111	4	A	4	3	1	3
1	2	1	1	1	2	1	2
1	2	1	1	1	3	1	3
1	2	1	2	1	2	1	2
1	2	1	2	1	3	1	3
1	2	1	222	1	2	1	2
1	2	1	222	1	3	1	3
1	2	2	2.00	2	2	1	2
1	2	2	222	2	2	1	2
1	2	2	333	2	2	1	2
1	2	3	3.0	3	2	1	2
1	2	3	3333	3	2	1	2
1	2	4	A	4	2	1	2
1	2	4	A	4	3	1	3
2	2.0	1	1	1	2	2	2
2	2.0	1	1	1	3	2	3
2	2.0	1	2	1	2	2	2
2	2.0	1	2	1	3	2	3
2	2.0	1	222	1	2	2	2
2	2.0	1	222	1	3	2	3
2	2.0	2	2.00	2	2	2	2
2	2.0	2	222	2	2	2	2
2	2.0	2	333	2	2	2	2
2	2.0	3	3.0	3	2	2	2
2	2.0	3	3333	3	2	2	2
2	2.0	4	A	4	2	2	2
2	2.0	4	A	4	3	2	3
2	222	1	1	1	2	2	2
2	222	1	1	1	3	2	3
2	222	1	2	1	2	2	2
2	222	1	2	1	3	2	3
2	222	1	222	1	2	2	2
2	222	1	222	1	3	2	3
2	222	2	2.00	2	2	2	2
2	222	2	222	2	2	2	2
2	222	2	333	2	2	2	2
2	222	3	3.0	3	2	2	2
2	222	3	3333	3	2	2	2
2	222	4	A	4	2	2	2
2	222	4	A	4	3	2	3

select /*+use_hash(t1,t2,t3,t4)*/t1.a,t1.c,t2.a,t2.b,t3.a,t3.b,t4.a,t4.b
from t1
right join
((t2 inner join t3 on t2.a = t3.a) inner join t4 on t3.b = t4.b)
on t1.a = t4.a
order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b,t4.a,t4.b;
a	c	a	b	a	b	a	b
1	1	1	1	1	2	1	2
1	1	1	1	1	3	1	3
1	1	1	2	1	2	1	2
1	1	1	2	1	3	1	3
1	1	1	222	1	2	1	2
1	1	1	222	1	3	1	3
1	1	2	2.00	2	2	1	2
1	1	2	222	2	2	1	2
1	1	2	333	2	2	1	2
1	1	3	3.0	3	2	1	2
1	1	3	3333	3	2	1	2
1	1	4	A	4	2	1	2
1	1	4	A	4	3	1	3
1	111	1	1	1	2	1	2
1	111	1	1	1	3	1	3
1	111	1	2	1	2	1	2
1	111	1	2	1	3	1	3
1	111	1	222	1	2	1	2
1	111	1	222	1	3	1	3
1	111	2	2.00	2	2	1	2
1	111	2	222	2	2	1	2
1	111	2	333	2	2	1	2
1	111	3	3.0	3	2	1	2
1	111	3	3333	3	2	1	2
1	111	4	A	4	2	1	2
1	111	4	A	4	3	1	3
1	2	1	1	1	2	1	2
1	2	1	1	1	3	1	3
1	2	1	2	1	2	1	2
1	2	1	2	1	3	1	3
1	2	1	222	1	2	1	2
1	2	1	222	1	3	1	3
1	2	2	2.00	2	2	1	2
1	2	2	222	2	2	1	2
1	2	2	333	2	2	1	2
1	2	3	3.0	3	2	1	2
1	2	3	3333	3	2	1	2
1	2	4	A	4	2	1	2
1	2	4	A	4	3	1	3
2	2.0	1	1	1	2	2	2
2	2.0	1	1	1	3	2	3
2	2.0	1	2	1	2	2	2
2	2.0	1	2	1	3	2	3
2	2.0	1	222	1	2	2	2
2	2.0	1	222	1	3	2	3
2	2.0	2	2.00	2	2	2	2
2	2.0	2	222	2	2	2	2
2	2.0	2	333	2	2	2	2
2	2.0	3	3.0	3	2	2	2
2	2.0	3	3333	3	2	2	2
2	2.0	4	A	4	2	2	2
2	2.0	4	A	4	3	2	3
2	222	1	1	1	2	2	2
2	222	1	1	1	3	2	3
2	222	1	2	1	2	2	2
2	222	1	2	1	3	2	3
2	222	1	222	1	2	2	2
2	222	1	222	1	3	2	3
2	222	2	2.00	2	2	2	2
2	222	2	222	2	2	2	2
2	222	2	333	2	2	2	2
2	222	3	3.0	3	2	2	2
2	222	3	3333	3	2	2	2
2	222	4	A	4	2	2	2
2	222	4	A	4	3	2	3

select /*+use_merge(t1,t2,t3,t4)*/t1.a,t1.c,t2.a,t2.b,t3.a,t3.b,t4.a,t4.b
from t1
right join
((t2 inner join t3 on t2.a = t3.a) inner join t4 on t3.b = t4.b)
on t1.a = t4.a
order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b,t4.a,t4.b;
a	c	a	b	a	b	a	b
1	1	1	1	1	2	1	2
1	1	1	1	1	3	1	3
1	1	1	2	1	2	1	2
1	1	1	2	1	3	1	3
1	1	1	222	1	2	1	2
1	1	1	222	1	3	1	3
1	1	2	2.00	2	2	1	2
1	1	2	222	2	2	1	2
1	1	2	333	2	2	1	2
1	1	3	3.0	3	2	1	2
1	1	3	3333	3	2	1	2
1	1	4	A	4	2	1	2
1	1	4	A	4	3	1	3
1	111	1	1	1	2	1	2
1	111	1	1	1	3	1	3
1	111	1	2	1	2	1	2
1	111	1	2	1	3	1	3
1	111	1	222	1	2	1	2
1	111	1	222	1	3	1	3
1	111	2	2.00	2	2	1	2
1	111	2	222	2	2	1	2
1	111	2	333	2	2	1	2
1	111	3	3.0	3	2	1	2
1	111	3	3333	3	2	1	2
1	111	4	A	4	2	1	2
1	111	4	A	4	3	1	3
1	2	1	1	1	2	1	2
1	2	1	1	1	3	1	3
1	2	1	2	1	2	1	2
1	2	1	2	1	3	1	3
1	2	1	222	1	2	1	2
1	2	1	222	1	3	1	3
1	2	2	2.00	2	2	1	2
1	2	2	222	2	2	1	2
1	2	2	333	2	2	1	2
1	2	3	3.0	3	2	1	2
1	2	3	3333	3	2	1	2
1	2	4	A	4	2	1	2
1	2	4	A	4	3	1	3
2	2.0	1	1	1	2	2	2
2	2.0	1	1	1	3	2	3
2	2.0	1	2	1	2	2	2
2	2.0	1	2	1	3	2	3
2	2.0	1	222	1	2	2	2
2	2.0	1	222	1	3	2	3
2	2.0	2	2.00	2	2	2	2
2	2.0	2	222	2	2	2	2
2	2.0	2	333	2	2	2	2
2	2.0	3	3.0	3	2	2	2
2	2.0	3	3333	3	2	2	2
2	2.0	4	A	4	2	2	2
2	2.0	4	A	4	3	2	3
2	222	1	1	1	2	2	2
2	222	1	1	1	3	2	3
2	222	1	2	1	2	2	2
2	222	1	2	1	3	2	3
2	222	1	222	1	2	2	2
2	222	1	222	1	3	2	3
2	222	2	2.00	2	2	2	2
2	222	2	222	2	2	2	2
2	222	2	333	2	2	2	2
2	222	3	3.0	3	2	2	2
2	222	3	3333	3	2	2	2
2	222	4	A	4	2	2	2
2	222	4	A	4	3	2	3

select /*+use_hash(t1,t2,t3,t4)*/t1.a,t1.c,t2.a,t2.b,t3.a,t3.b,t4.a,t4.b
from t1
right join
((t2 inner join t3 on t2.a = t3.a) inner join t4 on t3.b = t4.b)
on t1.a = t4.a
order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b,t4.a,t4.b;
a	c	a	b	a	b	a	b
1	1	1	1	1	2	1	2
1	1	1	1	1	3	1	3
1	1	1	2	1	2	1	2
1	1	1	2	1	3	1	3
1	1	1	222	1	2	1	2
1	1	1	222	1	3	1	3
1	1	2	2.00	2	2	1	2
1	1	2	222	2	2	1	2
1	1	2	333	2	2	1	2
1	1	3	3.0	3	2	1	2
1	1	3	3333	3	2	1	2
1	1	4	A	4	2	1	2
1	1	4	A	4	3	1	3
1	111	1	1	1	2	1	2
1	111	1	1	1	3	1	3
1	111	1	2	1	2	1	2
1	111	1	2	1	3	1	3
1	111	1	222	1	2	1	2
1	111	1	222	1	3	1	3
1	111	2	2.00	2	2	1	2
1	111	2	222	2	2	1	2
1	111	2	333	2	2	1	2
1	111	3	3.0	3	2	1	2
1	111	3	3333	3	2	1	2
1	111	4	A	4	2	1	2
1	111	4	A	4	3	1	3
1	2	1	1	1	2	1	2
1	2	1	1	1	3	1	3
1	2	1	2	1	2	1	2
1	2	1	2	1	3	1	3
1	2	1	222	1	2	1	2
1	2	1	222	1	3	1	3
1	2	2	2.00	2	2	1	2
1	2	2	222	2	2	1	2
1	2	2	333	2	2	1	2
1	2	3	3.0	3	2	1	2
1	2	3	3333	3	2	1	2
1	2	4	A	4	2	1	2
1	2	4	A	4	3	1	3
2	2.0	1	1	1	2	2	2
2	2.0	1	1	1	3	2	3
2	2.0	1	2	1	2	2	2
2	2.0	1	2	1	3	2	3
2	2.0	1	222	1	2	2	2
2	2.0	1	222	1	3	2	3
2	2.0	2	2.00	2	2	2	2
2	2.0	2	222	2	2	2	2
2	2.0	2	333	2	2	2	2
2	2.0	3	3.0	3	2	2	2
2	2.0	3	3333	3	2	2	2
2	2.0	4	A	4	2	2	2
2	2.0	4	A	4	3	2	3
2	222	1	1	1	2	2	2
2	222	1	1	1	3	2	3
2	222	1	2	1	2	2	2
2	222	1	2	1	3	2	3
2	222	1	222	1	2	2	2
2	222	1	222	1	3	2	3
2	222	2	2.00	2	2	2	2
2	222	2	222	2	2	2	2
2	222	2	333	2	2	2	2
2	222	3	3.0	3	2	2	2
2	222	3	3333	3	2	2	2
2	222	4	A	4	2	2	2
2	222	4	A	4	3	2	3

select /*+use_merge(t1,t2,t3,t4)*/t1.a,t1.c,t2.a,t2.b,t3.a,t3.b,t4.a,t4.b
from t1 full join
((t2 inner join t3 on t2.a = t3.a) inner join t4 on t3.b = t4.b)
on t1.a = t4.a
order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b,t4.a,t4.b;
a	c	a	b	a	b	a	b
NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1	1	2	1	2
1	1	1	1	1	3	1	3
1	1	1	2	1	2	1	2
1	1	1	2	1	3	1	3
1	1	1	222	1	2	1	2
1	1	1	222	1	3	1	3
1	1	2	2.00	2	2	1	2
1	1	2	222	2	2	1	2
1	1	2	333	2	2	1	2
1	1	3	3.0	3	2	1	2
1	1	3	3333	3	2	1	2
1	1	4	A	4	2	1	2
1	1	4	A	4	3	1	3
1	111	1	1	1	2	1	2
1	111	1	1	1	3	1	3
1	111	1	2	1	2	1	2
1	111	1	2	1	3	1	3
1	111	1	222	1	2	1	2
1	111	1	222	1	3	1	3
1	111	2	2.00	2	2	1	2
1	111	2	222	2	2	1	2
1	111	2	333	2	2	1	2
1	111	3	3.0	3	2	1	2
1	111	3	3333	3	2	1	2
1	111	4	A	4	2	1	2
1	111	4	A	4	3	1	3
1	2	1	1	1	2	1	2
1	2	1	1	1	3	1	3
1	2	1	2	1	2	1	2
1	2	1	2	1	3	1	3
1	2	1	222	1	2	1	2
1	2	1	222	1	3	1	3
1	2	2	2.00	2	2	1	2
1	2	2	222	2	2	1	2
1	2	2	333	2	2	1	2
1	2	3	3.0	3	2	1	2
1	2	3	3333	3	2	1	2
1	2	4	A	4	2	1	2
1	2	4	A	4	3	1	3
2	2.0	1	1	1	2	2	2
2	2.0	1	1	1	3	2	3
2	2.0	1	2	1	2	2	2
2	2.0	1	2	1	3	2	3
2	2.0	1	222	1	2	2	2
2	2.0	1	222	1	3	2	3
2	2.0	2	2.00	2	2	2	2
2	2.0	2	222	2	2	2	2
2	2.0	2	333	2	2	2	2
2	2.0	3	3.0	3	2	2	2
2	2.0	3	3333	3	2	2	2
2	2.0	4	A	4	2	2	2
2	2.0	4	A	4	3	2	3
2	222	1	1	1	2	2	2
2	222	1	1	1	3	2	3
2	222	1	2	1	2	2	2
2	222	1	2	1	3	2	3
2	222	1	222	1	2	2	2
2	222	1	222	1	3	2	3
2	222	2	2.00	2	2	2	2
2	222	2	222	2	2	2	2
2	222	2	333	2	2	2	2
2	222	3	3.0	3	2	2	2
2	222	3	3333	3	2	2	2
2	222	4	A	4	2	2	2
2	222	4	A	4	3	2	3
3	3	NULL	NULL	NULL	NULL	NULL	NULL
3	333	NULL	NULL	NULL	NULL	NULL	NULL
4	444	NULL	NULL	NULL	NULL	NULL	NULL
5	5.550	NULL	NULL	NULL	NULL	NULL	NULL
123	2001-01-01	NULL	NULL	NULL	NULL	NULL	NULL
1224	111	NULL	NULL	NULL	NULL	NULL	NULL

select /*+use_hash(t1,t2,t3,t4)*/t1.a,t1.c,t2.a,t2.b,t3.a,t3.b,t4.a,t4.b
from t1 full join
((t2 inner join t3 on t2.a = t3.a) inner join t4 on t3.b = t4.b)
on t1.a = t4.a
order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b,t4.a,t4.b;
a	c	a	b	a	b	a	b
NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1	1	2	1	2
1	1	1	1	1	3	1	3
1	1	1	2	1	2	1	2
1	1	1	2	1	3	1	3
1	1	1	222	1	2	1	2
1	1	1	222	1	3	1	3
1	1	2	2.00	2	2	1	2
1	1	2	222	2	2	1	2
1	1	2	333	2	2	1	2
1	1	3	3.0	3	2	1	2
1	1	3	3333	3	2	1	2
1	1	4	A	4	2	1	2
1	1	4	A	4	3	1	3
1	111	1	1	1	2	1	2
1	111	1	1	1	3	1	3
1	111	1	2	1	2	1	2
1	111	1	2	1	3	1	3
1	111	1	222	1	2	1	2
1	111	1	222	1	3	1	3
1	111	2	2.00	2	2	1	2
1	111	2	222	2	2	1	2
1	111	2	333	2	2	1	2
1	111	3	3.0	3	2	1	2
1	111	3	3333	3	2	1	2
1	111	4	A	4	2	1	2
1	111	4	A	4	3	1	3
1	2	1	1	1	2	1	2
1	2	1	1	1	3	1	3
1	2	1	2	1	2	1	2
1	2	1	2	1	3	1	3
1	2	1	222	1	2	1	2
1	2	1	222	1	3	1	3
1	2	2	2.00	2	2	1	2
1	2	2	222	2	2	1	2
1	2	2	333	2	2	1	2
1	2	3	3.0	3	2	1	2
1	2	3	3333	3	2	1	2
1	2	4	A	4	2	1	2
1	2	4	A	4	3	1	3
2	2.0	1	1	1	2	2	2
2	2.0	1	1	1	3	2	3
2	2.0	1	2	1	2	2	2
2	2.0	1	2	1	3	2	3
2	2.0	1	222	1	2	2	2
2	2.0	1	222	1	3	2	3
2	2.0	2	2.00	2	2	2	2
2	2.0	2	222	2	2	2	2
2	2.0	2	333	2	2	2	2
2	2.0	3	3.0	3	2	2	2
2	2.0	3	3333	3	2	2	2
2	2.0	4	A	4	2	2	2
2	2.0	4	A	4	3	2	3
2	222	1	1	1	2	2	2
2	222	1	1	1	3	2	3
2	222	1	2	1	2	2	2
2	222	1	2	1	3	2	3
2	222	1	222	1	2	2	2
2	222	1	222	1	3	2	3
2	222	2	2.00	2	2	2	2
2	222	2	222	2	2	2	2
2	222	2	333	2	2	2	2
2	222	3	3.0	3	2	2	2
2	222	3	3333	3	2	2	2
2	222	4	A	4	2	2	2
2	222	4	A	4	3	2	3
3	3	NULL	NULL	NULL	NULL	NULL	NULL
3	333	NULL	NULL	NULL	NULL	NULL	NULL
4	444	NULL	NULL	NULL	NULL	NULL	NULL
5	5.550	NULL	NULL	NULL	NULL	NULL	NULL
123	2001-01-01	NULL	NULL	NULL	NULL	NULL	NULL
1224	111	NULL	NULL	NULL	NULL	NULL	NULL

select /*+use_merge(t1,t2,t3,t4)*/t1.a,t1.c,t2.a,t2.b,t3.a,t3.b,t4.a,t4.b
from t1 full join
((t2 inner join t3 on t2.a = t3.a) inner join t4 on t3.b = t4.b)
on t1.a = t4.a
order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b,t4.a,t4.b;
a	c	a	b	a	b	a	b
NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1	1	2	1	2
1	1	1	1	1	3	1	3
1	1	1	2	1	2	1	2
1	1	1	2	1	3	1	3
1	1	1	222	1	2	1	2
1	1	1	222	1	3	1	3
1	1	2	2.00	2	2	1	2
1	1	2	222	2	2	1	2
1	1	2	333	2	2	1	2
1	1	3	3.0	3	2	1	2
1	1	3	3333	3	2	1	2
1	1	4	A	4	2	1	2
1	1	4	A	4	3	1	3
1	111	1	1	1	2	1	2
1	111	1	1	1	3	1	3
1	111	1	2	1	2	1	2
1	111	1	2	1	3	1	3
1	111	1	222	1	2	1	2
1	111	1	222	1	3	1	3
1	111	2	2.00	2	2	1	2
1	111	2	222	2	2	1	2
1	111	2	333	2	2	1	2
1	111	3	3.0	3	2	1	2
1	111	3	3333	3	2	1	2
1	111	4	A	4	2	1	2
1	111	4	A	4	3	1	3
1	2	1	1	1	2	1	2
1	2	1	1	1	3	1	3
1	2	1	2	1	2	1	2
1	2	1	2	1	3	1	3
1	2	1	222	1	2	1	2
1	2	1	222	1	3	1	3
1	2	2	2.00	2	2	1	2
1	2	2	222	2	2	1	2
1	2	2	333	2	2	1	2
1	2	3	3.0	3	2	1	2
1	2	3	3333	3	2	1	2
1	2	4	A	4	2	1	2
1	2	4	A	4	3	1	3
2	2.0	1	1	1	2	2	2
2	2.0	1	1	1	3	2	3
2	2.0	1	2	1	2	2	2
2	2.0	1	2	1	3	2	3
2	2.0	1	222	1	2	2	2
2	2.0	1	222	1	3	2	3
2	2.0	2	2.00	2	2	2	2
2	2.0	2	222	2	2	2	2
2	2.0	2	333	2	2	2	2
2	2.0	3	3.0	3	2	2	2
2	2.0	3	3333	3	2	2	2
2	2.0	4	A	4	2	2	2
2	2.0	4	A	4	3	2	3
2	222	1	1	1	2	2	2
2	222	1	1	1	3	2	3
2	222	1	2	1	2	2	2
2	222	1	2	1	3	2	3
2	222	1	222	1	2	2	2
2	222	1	222	1	3	2	3
2	222	2	2.00	2	2	2	2
2	222	2	222	2	2	2	2
2	222	2	333	2	2	2	2
2	222	3	3.0	3	2	2	2
2	222	3	3333	3	2	2	2
2	222	4	A	4	2	2	2
2	222	4	A	4	3	2	3
3	3	NULL	NULL	NULL	NULL	NULL	NULL
3	333	NULL	NULL	NULL	NULL	NULL	NULL
4	444	NULL	NULL	NULL	NULL	NULL	NULL
5	5.550	NULL	NULL	NULL	NULL	NULL	NULL
123	2001-01-01	NULL	NULL	NULL	NULL	NULL	NULL
1224	111	NULL	NULL	NULL	NULL	NULL	NULL

select /*+use_hash(t1,t2,t3,t4)*/t1.a,t1.c,t2.a,t2.b,t3.a,t3.b,t4.a,t4.b
from t1 full join
((t2 inner join t3 on t2.a = t3.a) inner join t4 on t3.b = t4.b)
on t1.a = t4.a
order by t1.a,t1.b,t1.c,t1.d,t2.a,t2.b,t2.c,t3.a,t3.b,t4.a,t4.b;
a	c	a	b	a	b	a	b
NULL	NULL	NULL	NULL	NULL	NULL	NULL	NULL
1	1	1	1	1	2	1	2
1	1	1	1	1	3	1	3
1	1	1	2	1	2	1	2
1	1	1	2	1	3	1	3
1	1	1	222	1	2	1	2
1	1	1	222	1	3	1	3
1	1	2	2.00	2	2	1	2
1	1	2	222	2	2	1	2
1	1	2	333	2	2	1	2
1	1	3	3.0	3	2	1	2
1	1	3	3333	3	2	1	2
1	1	4	A	4	2	1	2
1	1	4	A	4	3	1	3
1	111	1	1	1	2	1	2
1	111	1	1	1	3	1	3
1	111	1	2	1	2	1	2
1	111	1	2	1	3	1	3
1	111	1	222	1	2	1	2
1	111	1	222	1	3	1	3
1	111	2	2.00	2	2	1	2
1	111	2	222	2	2	1	2
1	111	2	333	2	2	1	2
1	111	3	3.0	3	2	1	2
1	111	3	3333	3	2	1	2
1	111	4	A	4	2	1	2
1	111	4	A	4	3	1	3
1	2	1	1	1	2	1	2
1	2	1	1	1	3	1	3
1	2	1	2	1	2	1	2
1	2	1	2	1	3	1	3
1	2	1	222	1	2	1	2
1	2	1	222	1	3	1	3
1	2	2	2.00	2	2	1	2
1	2	2	222	2	2	1	2
1	2	2	333	2	2	1	2
1	2	3	3.0	3	2	1	2
1	2	3	3333	3	2	1	2
1	2	4	A	4	2	1	2
1	2	4	A	4	3	1	3
2	2.0	1	1	1	2	2	2
2	2.0	1	1	1	3	2	3
2	2.0	1	2	1	2	2	2
2	2.0	1	2	1	3	2	3
2	2.0	1	222	1	2	2	2
2	2.0	1	222	1	3	2	3
2	2.0	2	2.00	2	2	2	2
2	2.0	2	222	2	2	2	2
2	2.0	2	333	2	2	2	2
2	2.0	3	3.0	3	2	2	2
2	2.0	3	3333	3	2	2	2
2	2.0	4	A	4	2	2	2
2	2.0	4	A	4	3	2	3
2	222	1	1	1	2	2	2
2	222	1	1	1	3	2	3
2	222	1	2	1	2	2	2
2	222	1	2	1	3	2	3
2	222	1	222	1	2	2	2
2	222	1	222	1	3	2	3
2	222	2	2.00	2	2	2	2
2	222	2	222	2	2	2	2
2	222	2	333	2	2	2	2
2	222	3	3.0	3	2	2	2
2	222	3	3333	3	2	2	2
2	222	4	A	4	2	2	2
2	222	4	A	4	3	2	3
3	3	NULL	NULL	NULL	NULL	NULL	NULL
3	333	NULL	NULL	NULL	NULL	NULL	NULL
4	444	NULL	NULL	NULL	NULL	NULL	NULL
5	5.550	NULL	NULL	NULL	NULL	NULL	NULL
123	2001-01-01	NULL	NULL	NULL	NULL	NULL	NULL
1224	111	NULL	NULL	NULL	NULL	NULL	NULL
drop table if exists t1,t2,t3,t4,t5,t6,t7,t8;
drop table if exists t1,t2,tt1,tt2;
create table t1 (a int, b int, c int, primary key(a));
create table t2 (a int, b int, c int, primary key(b));
insert/*insert trace*/ into t1 values (1, 2, 8),(7, 8, 7), (8, 8, 5), (3,3, 3), (5,5,5), (19,7, 4), (20,30,4), (6,5,5);
insert/*insert trace*/ into t2 values (1,2,2), (2, 3,2),(9, 10,10), (8,8,4), (5,5,6), (10,20,7);

select /*+use_hash(t1,t2),leading(t1,t2)*/* from t1,t2 where t1.a = t2.a order by t2.b;
a	b	c	a	b	c
1	2	8	1	2	2
5	5	5	5	5	6
8	8	5	8	8	4
select /*+use_merge(t1,t2),leading(t1,t2)*/* from t1,t2 where t1.a = t2.a order by t2.b;
a	b	c	a	b	c
1	2	8	1	2	2
5	5	5	5	5	6
8	8	5	8	8	4
select /*+use_nl(t1,t2),leading(t1,t2)*/* from t1,t2 where t1.a = t2.a order by t2.b;
a	b	c	a	b	c
1	2	8	1	2	2
5	5	5	5	5	6
8	8	5	8	8	4

select /*+use_hash(t1,t2),leading(t2,t1)*/* from t1,t2 where t1.a = t2.a order by t1.a;
a	b	c	a	b	c
1	2	8	1	2	2
5	5	5	5	5	6
8	8	5	8	8	4
select /*+use_merge(t1,t2),leading(t2,t1)*/* from t1,t2 where t1.a = t2.a order by t1.a;
a	b	c	a	b	c
1	2	8	1	2	2
5	5	5	5	5	6
8	8	5	8	8	4
select /*+use_nl(t1,t2),leading(t2,t1)*/* from t1,t2 where t1.a = t2.a order by t1.a;
a	b	c	a	b	c
1	2	8	1	2	2
5	5	5	5	5	6
8	8	5	8	8	4

select /*+use_hash(t1,t2),leading(t1,t2)*/* from t1 left join t2 on t1.a = t2.a order by t2.b;
a	b	c	a	b	c
1	2	8	1	2	2
19	7	4	NULL	NULL	NULL
20	30	4	NULL	NULL	NULL
3	3	3	NULL	NULL	NULL
5	5	5	5	5	6
6	5	5	NULL	NULL	NULL
7	8	7	NULL	NULL	NULL
8	8	5	8	8	4
select /*+use_merge(t1,t2),leading(t1,t2)*/* from t1 left join t2 on t1.a = t2.a order by t2.b;
a	b	c	a	b	c
1	2	8	1	2	2
19	7	4	NULL	NULL	NULL
20	30	4	NULL	NULL	NULL
3	3	3	NULL	NULL	NULL
5	5	5	5	5	6
6	5	5	NULL	NULL	NULL
7	8	7	NULL	NULL	NULL
8	8	5	8	8	4
select /*+use_nl(t1,t2),leading(t1,t2)*/* from t1 left join t2 on t1.a = t2.a order by t2.b;
a	b	c	a	b	c
1	2	8	1	2	2
19	7	4	NULL	NULL	NULL
20	30	4	NULL	NULL	NULL
3	3	3	NULL	NULL	NULL
5	5	5	5	5	6
6	5	5	NULL	NULL	NULL
7	8	7	NULL	NULL	NULL
8	8	5	8	8	4

select /*+use_hash(t1,t2),leading(t2,t1)*/* from t1 left join t2 on t1.a = t2.a order by t1.a;
a	b	c	a	b	c
1	2	8	1	2	2
3	3	3	NULL	NULL	NULL
5	5	5	5	5	6
6	5	5	NULL	NULL	NULL
7	8	7	NULL	NULL	NULL
8	8	5	8	8	4
19	7	4	NULL	NULL	NULL
20	30	4	NULL	NULL	NULL
select /*+use_merge(t1,t2),leading(t2,t1)*/* from t1 left join t2 on t1.a = t2.a order by t1.a;
a	b	c	a	b	c
1	2	8	1	2	2
3	3	3	NULL	NULL	NULL
5	5	5	5	5	6
6	5	5	NULL	NULL	NULL
7	8	7	NULL	NULL	NULL
8	8	5	8	8	4
19	7	4	NULL	NULL	NULL
20	30	4	NULL	NULL	NULL
select /*+use_nl(t1,t2),leading(t2,t1)*/* from t1 left join t2 on t1.a = t2.a order by t1.a;
a	b	c	a	b	c
1	2	8	1	2	2
3	3	3	NULL	NULL	NULL
5	5	5	5	5	6
6	5	5	NULL	NULL	NULL
7	8	7	NULL	NULL	NULL
8	8	5	8	8	4
19	7	4	NULL	NULL	NULL
20	30	4	NULL	NULL	NULL

select /*+use_hash(t1,t2),leading(t1,t2)*/* from t1 right join t2 on t1.a = t2.a order by t2.b;
a	b	c	a	b	c
1	2	8	1	2	2
5	5	5	5	5	6
8	8	5	8	8	4
NULL	NULL	NULL	10	20	7
NULL	NULL	NULL	2	3	2
NULL	NULL	NULL	9	10	10
select /*+use_merge(t1,t2),leading(t1,t2)*/* from t1 right join t2 on t1.a = t2.a order by t2.b;
a	b	c	a	b	c
1	2	8	1	2	2
5	5	5	5	5	6
8	8	5	8	8	4
NULL	NULL	NULL	10	20	7
NULL	NULL	NULL	2	3	2
NULL	NULL	NULL	9	10	10
select /*+use_nl(t1,t2),leading(t1,t2)*/* from t1 right join t2 on t1.a = t2.a order by t2.b;
a	b	c	a	b	c
1	2	8	1	2	2
5	5	5	5	5	6
8	8	5	8	8	4
NULL	NULL	NULL	10	20	7
NULL	NULL	NULL	2	3	2
NULL	NULL	NULL	9	10	10

select /*+use_hash(t1,t2),leading(t2,t1)*/* from t1 right join t2 on t1.a = t2.a order by t1.a;
a	b	c	a	b	c
1	2	8	1	2	2
5	5	5	5	5	6
8	8	5	8	8	4
NULL	NULL	NULL	10	20	7
NULL	NULL	NULL	2	3	2
NULL	NULL	NULL	9	10	10
select /*+use_merge(t1,t2),leading(t2,t1)*/* from t1 right join t2 on t1.a = t2.a order by t1.a;
a	b	c	a	b	c
1	2	8	1	2	2
5	5	5	5	5	6
8	8	5	8	8	4
NULL	NULL	NULL	10	20	7
NULL	NULL	NULL	2	3	2
NULL	NULL	NULL	9	10	10
select /*+use_nl(t1,t2),leading(t2,t1)*/* from t1 right join t2 on t1.a = t2.a order by t1.a;
a	b	c	a	b	c
1	2	8	1	2	2
5	5	5	5	5	6
8	8	5	8	8	4
NULL	NULL	NULL	10	20	7
NULL	NULL	NULL	2	3	2
NULL	NULL	NULL	9	10	10

select /*+use_hash(t1,t2),leading(t1,t2)*/* from t1 full join t2 on t1.a = t2.a order by t2.b;
a	b	c	a	b	c
1	2	8	1	2	2
19	7	4	NULL	NULL	NULL
20	30	4	NULL	NULL	NULL
3	3	3	NULL	NULL	NULL
5	5	5	5	5	6
6	5	5	NULL	NULL	NULL
7	8	7	NULL	NULL	NULL
8	8	5	8	8	4
NULL	NULL	NULL	10	20	7
NULL	NULL	NULL	2	3	2
NULL	NULL	NULL	9	10	10
select /*+use_merge(t1,t2),leading(t1,t2)*/* from t1 full join t2 on t1.a = t2.a order by t2.b;
a	b	c	a	b	c
1	2	8	1	2	2
19	7	4	NULL	NULL	NULL
20	30	4	NULL	NULL	NULL
3	3	3	NULL	NULL	NULL
5	5	5	5	5	6
6	5	5	NULL	NULL	NULL
7	8	7	NULL	NULL	NULL
8	8	5	8	8	4
NULL	NULL	NULL	10	20	7
NULL	NULL	NULL	2	3	2
NULL	NULL	NULL	9	10	10
select /*+use_nl(t1,t2),leading(t1,t2)*/* from t1 full join t2 on t1.a = t2.a order by t2.b;
a	b	c	a	b	c
1	2	8	1	2	2
19	7	4	NULL	NULL	NULL
20	30	4	NULL	NULL	NULL
3	3	3	NULL	NULL	NULL
5	5	5	5	5	6
6	5	5	NULL	NULL	NULL
7	8	7	NULL	NULL	NULL
8	8	5	8	8	4
NULL	NULL	NULL	10	20	7
NULL	NULL	NULL	2	3	2
NULL	NULL	NULL	9	10	10

select /*+use_hash(t1,t2),leading(t2,t1)*/* from t1 full join t2 on t1.a = t2.a order by t1.a;
a	b	c	a	b	c
1	2	8	1	2	2
19	7	4	NULL	NULL	NULL
20	30	4	NULL	NULL	NULL
3	3	3	NULL	NULL	NULL
5	5	5	5	5	6
6	5	5	NULL	NULL	NULL
7	8	7	NULL	NULL	NULL
8	8	5	8	8	4
NULL	NULL	NULL	10	20	7
NULL	NULL	NULL	2	3	2
NULL	NULL	NULL	9	10	10
select /*+use_merge(t1,t2),leading(t2,t1)*/* from t1 full join t2 on t1.a = t2.a order by t1.a;
a	b	c	a	b	c
1	2	8	1	2	2
19	7	4	NULL	NULL	NULL
20	30	4	NULL	NULL	NULL
3	3	3	NULL	NULL	NULL
5	5	5	5	5	6
6	5	5	NULL	NULL	NULL
7	8	7	NULL	NULL	NULL
8	8	5	8	8	4
NULL	NULL	NULL	10	20	7
NULL	NULL	NULL	2	3	2
NULL	NULL	NULL	9	10	10
select /*+use_nl(t1,t2),leading(t2,t1)*/* from t1 full join t2 on t1.a = t2.a order by t1.a;
a	b	c	a	b	c
1	2	8	1	2	2
19	7	4	NULL	NULL	NULL
20	30	4	NULL	NULL	NULL
3	3	3	NULL	NULL	NULL
5	5	5	5	5	6
6	5	5	NULL	NULL	NULL
7	8	7	NULL	NULL	NULL
8	8	5	8	8	4
NULL	NULL	NULL	10	20	7
NULL	NULL	NULL	2	3	2
NULL	NULL	NULL	9	10	10

select /*+use_hash(t1,t2),leading(t1,t2)*/* from t1,t2 where t1.a = t2.a order by t2.a;
a	b	c	a	b	c
1	2	8	1	2	2
5	5	5	5	5	6
8	8	5	8	8	4
select /*+use_merge(t1,t2),leading(t1,t2)*/* from t1,t2 where t1.a = t2.a order by t2.a;
a	b	c	a	b	c
1	2	8	1	2	2
5	5	5	5	5	6
8	8	5	8	8	4
select /*+use_nl(t1,t2),leading(t1,t2)*/* from t1,t2 where t1.a = t2.a order by t2.a;
a	b	c	a	b	c
1	2	8	1	2	2
5	5	5	5	5	6
8	8	5	8	8	4

select /*+use_hash(t1,t2),leading(t1,t2)*/* from t1,t2 where t1.a = t2.a order by t2.a;
a	b	c	a	b	c
1	2	8	1	2	2
5	5	5	5	5	6
8	8	5	8	8	4
select /*+use_merge(t1,t2),leading(t1,t2)*/* from t1,t2 where t1.a = t2.a order by t2.a;
a	b	c	a	b	c
1	2	8	1	2	2
5	5	5	5	5	6
8	8	5	8	8	4
select /*+use_nl(t1,t2),leading(t1,t2)*/* from t1,t2 where t1.a = t2.a order by t2.a;
a	b	c	a	b	c
1	2	8	1	2	2
5	5	5	5	5	6
8	8	5	8	8	4

select /*+use_hash(t1,t2),leading(t2,t1)*/* from t1,t2 where t1.b = t2.b order by t1.b;
a	b	c	a	b	c
1	2	8	1	2	2
3	3	3	2	3	2
5	5	5	5	5	6
6	5	5	5	5	6
7	8	7	8	8	4
8	8	5	8	8	4
select /*+use_merge(t1,t2),leading(t2,t1)*/* from t1,t2 where t1.b = t2.b order by t1.b;
a	b	c	a	b	c
1	2	8	1	2	2
3	3	3	2	3	2
5	5	5	5	5	6
6	5	5	5	5	6
7	8	7	8	8	4
8	8	5	8	8	4
select /*+use_nl(t1,t2),leading(t2,t1)*/* from t1,t2 where t1.b = t2.b order by t1.b;
a	b	c	a	b	c
1	2	8	1	2	2
3	3	3	2	3	2
5	5	5	5	5	6
6	5	5	5	5	6
7	8	7	8	8	4
8	8	5	8	8	4

select /*+use_hash(t1,t2),leading(t1,t2)*/* from t1 left join t2 on t1.a = t2.a order by t2.a;
a	b	c	a	b	c
1	2	8	1	2	2
19	7	4	NULL	NULL	NULL
20	30	4	NULL	NULL	NULL
3	3	3	NULL	NULL	NULL
5	5	5	5	5	6
6	5	5	NULL	NULL	NULL
7	8	7	NULL	NULL	NULL
8	8	5	8	8	4
select /*+use_merge(t1,t2),leading(t1,t2)*/* from t1 left join t2 on t1.a = t2.a order by t2.a;
a	b	c	a	b	c
1	2	8	1	2	2
19	7	4	NULL	NULL	NULL
20	30	4	NULL	NULL	NULL
3	3	3	NULL	NULL	NULL
5	5	5	5	5	6
6	5	5	NULL	NULL	NULL
7	8	7	NULL	NULL	NULL
8	8	5	8	8	4
select /*+use_nl(t1,t2),leading(t1,t2)*/* from t1 left join t2 on t1.a = t2.a order by t2.a;
a	b	c	a	b	c
1	2	8	1	2	2
19	7	4	NULL	NULL	NULL
20	30	4	NULL	NULL	NULL
3	3	3	NULL	NULL	NULL
5	5	5	5	5	6
6	5	5	NULL	NULL	NULL
7	8	7	NULL	NULL	NULL
8	8	5	8	8	4

select /*+use_hash(t1,t2),leading(t1,t2)*/* from t1 right join t2 on t1.a = t2.a order by t2.a;
a	b	c	a	b	c
1	2	8	1	2	2
5	5	5	5	5	6
8	8	5	8	8	4
NULL	NULL	NULL	10	20	7
NULL	NULL	NULL	2	3	2
NULL	NULL	NULL	9	10	10
select /*+use_merge(t1,t2),leading(t1,t2)*/* from t1 right join t2 on t1.a = t2.a order by t2.a;
a	b	c	a	b	c
1	2	8	1	2	2
5	5	5	5	5	6
8	8	5	8	8	4
NULL	NULL	NULL	10	20	7
NULL	NULL	NULL	2	3	2
NULL	NULL	NULL	9	10	10
select /*+use_nl(t1,t2),leading(t1,t2)*/* from t1 right join t2 on t1.a = t2.a order by t2.a;
a	b	c	a	b	c
1	2	8	1	2	2
5	5	5	5	5	6
8	8	5	8	8	4
NULL	NULL	NULL	10	20	7
NULL	NULL	NULL	2	3	2
NULL	NULL	NULL	9	10	10

select /*+use_hash(t1,t2),leading(t1,t2)*/* from t1 full join t2 on t1.a = t2.a order by t2.a;
a	b	c	a	b	c
1	2	8	1	2	2
19	7	4	NULL	NULL	NULL
20	30	4	NULL	NULL	NULL
3	3	3	NULL	NULL	NULL
5	5	5	5	5	6
6	5	5	NULL	NULL	NULL
7	8	7	NULL	NULL	NULL
8	8	5	8	8	4
NULL	NULL	NULL	10	20	7
NULL	NULL	NULL	2	3	2
NULL	NULL	NULL	9	10	10
select /*+use_merge(t1,t2),leading(t1,t2)*/* from t1 full join t2 on t1.a = t2.a order by t2.a;
a	b	c	a	b	c
1	2	8	1	2	2
19	7	4	NULL	NULL	NULL
20	30	4	NULL	NULL	NULL
3	3	3	NULL	NULL	NULL
5	5	5	5	5	6
6	5	5	NULL	NULL	NULL
7	8	7	NULL	NULL	NULL
8	8	5	8	8	4
NULL	NULL	NULL	10	20	7
NULL	NULL	NULL	2	3	2
NULL	NULL	NULL	9	10	10
select /*+use_nl(t1,t2),leading(t1,t2)*/* from t1 full join t2 on t1.a = t2.a order by t2.a;
a	b	c	a	b	c
1	2	8	1	2	2
19	7	4	NULL	NULL	NULL
20	30	4	NULL	NULL	NULL
3	3	3	NULL	NULL	NULL
5	5	5	5	5	6
6	5	5	NULL	NULL	NULL
7	8	7	NULL	NULL	NULL
8	8	5	8	8	4
NULL	NULL	NULL	10	20	7
NULL	NULL	NULL	2	3	2
NULL	NULL	NULL	9	10	10
create table tt1 (c1 varchar(10) primary key, c2 varchar(10)) collate utf8_general_ci;
create table tt2 (c1 varchar(10) primary key, c2 varchar(10)) collate utf8_bin;
insert/*insert trace*/ into tt1 values("aa", "bb");
insert/*insert trace*/ into tt2 values("aa", "bb");

select /*+use_nl(tt1,tt2)*/* from tt1,tt2 where tt1.c1 = tt2.c1;
c1	c2	c1	c2
aa	bb	aa	bb
select /*+use_hash(tt1,tt2)*/* from tt1,tt2 where tt1.c1 = tt2.c1;
c1	c2	c1	c2
aa	bb	aa	bb
select /*+use_merge(tt1,tt2)*/* from tt1,tt2 where tt1.c1 = tt2.c1;
c1	c2	c1	c2
aa	bb	aa	bb
drop table if exists t1,t2,tt1,tt2;
drop table if exists t1,t2;
create table t1 (c1 int primary key, c2 int);
create table t2 (c1 int primary key, c2 int);
insert/*insert trace*/ into t1 values (1, 2),(7, 8), (8, 8);
insert/*insert trace*/ into t2 values (2, 3),(9, 10);

select /*+ use_hash(t1, t2)*/ * from t1 where (t1.c1, t1.c2) not in (select c1,c2 from t2 where c1 = 5);
c1	c2
1	2
7	8
8	8
select /*+ use_merge(t1, t2)*/ * from t1 where (t1.c1, t1.c2) not in (select c1,c2 from t2 where c1 = 5);
c1	c2
1	2
7	8
8	8
select /*+ use_nl(t1, t2)*/ * from t1 where (t1.c1, t1.c2) not in (select c1,c2 from t2 where c1 = 5);
c1	c2
1	2
7	8
8	8
select /*+ NO_REWRITE */ * from t1 where (t1.c1, t1.c2) not in (select c1,c2 from t2 where c1 = 5);
c1	c2
1	2
7	8
8	8

select /*+ use_hash(t1, t2)*/ * from t1 right join t2 on t1.c1 = t2.c1;
c1	c2	c1	c2
NULL	NULL	2	3
NULL	NULL	9	10
select /*+ use_merge(t1, t2)*/ * from t1 right join t2 on t1.c1 = t2.c1;
c1	c2	c1	c2
NULL	NULL	2	3
NULL	NULL	9	10
select /*+ use_nl(t1, t2)*/ * from t1 right join t2 on t1.c1 = t2.c1;
c1	c2	c1	c2
NULL	NULL	2	3
NULL	NULL	9	10

select /*+ use_hash(t1, t2)*/ * from t1 full join t2 on t1.c1 = t2.c1;
c1	c2	c1	c2
1	2	NULL	NULL
7	8	NULL	NULL
8	8	NULL	NULL
NULL	NULL	2	3
NULL	NULL	9	10
select /*+ use_merge(t1, t2)*/ * from t1 full join t2 on t1.c1 = t2.c1;
c1	c2	c1	c2
1	2	NULL	NULL
7	8	NULL	NULL
8	8	NULL	NULL
NULL	NULL	2	3
NULL	NULL	9	10
select /*+ use_nl(t1, t2)*/ * from t1 full join t2 on t1.c1 = t2.c1;
c1	c2	c1	c2
1	2	NULL	NULL
7	8	NULL	NULL
8	8	NULL	NULL
NULL	NULL	2	3
NULL	NULL	9	10
drop table if exists t1,t2;
create table t1 (c1 varchar(20) collate utf8mb4_general_ci, c2 varchar(20) collate utf8mb4_general_ci, c3 char(20) collate utf8mb4_general_ci);
create table t2 (c1 varchar(20) collate utf8mb4_general_ci, c2 varchar(20) collate utf8mb4_bin, c3 char(20) collate utf8mb4_bin);
insert into t1 values ('A', 'A', 'A');
insert into t2 values ('A', 'A', 'A');
select /*+use_hash (t1, t2) */* from t1, t2 where t1.c1 = t2.c3;
c1	c2	c3	c1	c2	c3
A	A	A	A	A	A
select /*+use_merge(t1, t2) */* from t1, t2 where t1.c1 = t2.c3;
c1	c2	c3	c1	c2	c3
A	A	A	A	A	A
select /*+use_hash (t1, t2) */* from t1, t2 where t1.c3 = t2.c3;
c1	c2	c3	c1	c2	c3
A	A	A	A	A	A
select /*+use_merge(t1, t2) */* from t1, t2 where t1.c3 = t2.c3;
c1	c2	c3	c1	c2	c3
A	A	A	A	A	A
select /*+use_hash (t1, t2) leading (t1, t2) */* from t1, t2 where t2.c1 is not null and t1.c1 = t2.c2;
c1	c2	c3	c1	c2	c3
A	A	A	A	A	A
select /*+use_merge(t1, t2) leading (t1, t2) */* from t1, t2 where t2.c1 is not null and t1.c1 = t2.c2;
c1	c2	c3	c1	c2	c3
A	A	A	A	A	A
drop table if exists t1,t2;
