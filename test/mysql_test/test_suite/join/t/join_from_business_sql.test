--disable_query_log
set @@session.explicit_defaults_for_timestamp=off;
--enable_query_log
# description:
#从行业平台业务SQL中抽取join相关的进行覆盖
#
# Initialization

#### from tbalive.txt
set collation_connection='utf8mb4_general_ci';
# app_content
# content_item
# anchor
# user_record
# content_count
#
--disable_warnings
DROP TABLE IF EXISTS app_content,content_item,anchor,user_record,content_count;
--enable_warnings

CREATE TABLE `app_content` ( 
  `id` bigint(20) unsigned NOT NULL AUTO_INCREMENT COMMENT '主键', 
  `gmt_create` datetime NOT NULL default '2015-09-09' COMMENT '创建时间', 
  `gmt_modified` datetime NOT NULL default '2015-09-09' COMMENT '修改时间', 
  `user_id` bigint(20) unsigned NOT NULL COMMENT '用户id', 
  `class_id` int(11) NOT NULL COMMENT '行业id 1:家居', 
  `group_id` bigint(20) unsigned DEFAULT NULL COMMENT '专辑id', 
  `biz_type` int(11) NOT NULL COMMENT '1：日记 2：样板3：攻略', 
  `cover_image_url` varchar(512) DEFAULT NULL COMMENT '封面地址', 
  `properties` varchar(1024) DEFAULT NULL COMMENT '属性对', 
  `input_properties` varchar(1024) DEFAULT NULL COMMENT '属性的可输入属性值', 
  `content_id` bigint(20) unsigned DEFAULT NULL COMMENT '内容平台id', 
  `nick` varchar(128) NULL COMMENT '用户nick', 
  `title` varchar(512) NULL COMMENT '标题', 
  `summary` varchar(2048) DEFAULT NULL COMMENT '摘要', 
  `features` varchar(4096) DEFAULT NULL COMMENT '扩展字段', 
  `status` int(11) NULL DEFAULT '0' COMMENT '0：正常-1：删除-2：屏蔽', 
  `user_modified` datetime NULL COMMENT '用户修改时间', 
  `tfs_path` varchar(256) DEFAULT NULL COMMENT '内容tfs路径', 
  `tags` bigint(20) unsigned DEFAULT NULL COMMENT 'Int标签', 
  `content_items` varchar(1024) DEFAULT NULL COMMENT '对应套餐的商品列表ex:11111,22222', 
  `extend_info` varchar(1024) COMMENT '扩展信息', 
  `extend_imginfo` varchar(1024) COMMENT '扩展图片信息', 
  `app_key` varchar(128) DEFAULT NULL COMMENT '应用key', 
  `biz_key` varchar(128) DEFAULT NULL COMMENT '接入业务的key', 
  `app_type` int(11) DEFAULT NULL COMMENT '接入业务的类型', 
  PRIMARY KEY (`id`), KEY `ind_gr_st` (`group_id`,`status`), KEY `k_uid_btype` (`user_id`,`biz_type`), KEY `ind_user` (`user_id`), KEY `by_status` (`class_id`,`biz_type`,`status`), KEY `ind_group` (`group_id`,`gmt_modified`)
  ) AUTO_INCREMENT=45301162677 COMMENT='行业社区基础内容表';

insert into app_content(id,user_id,class_id,group_id,biz_type,title,summary,status) values
  (0,0,1,0,1,'test_title','test_summary',0),
  (1,1,1,1,1,'test_title','test_summary',0),
  (2,0,1,2,2,'test_title','test_summary',0),
  (3,1,1,3,2,'test_title','test_summary',0),
  (4,0,1,4,3,'test_title','test_summary',0),
  (5,1,1,5,3,'test_title','test_summary',0);

CREATE TABLE `anchor` (
  `id` bigint(20) unsigned AUTO_INCREMENT COMMENT '主键',
  `gmt_create` datetime NULL COMMENT '创建时间',
  `gmt_modified` datetime NULL COMMENT '修改时间',
  `content_id` bigint(20) unsigned NULL COMMENT '锚点关联内容id',
  `item_id` bigint(20) unsigned NULL COMMENT '锚点关联商品id',
  `item_name` varchar(512) NULL COMMENT '锚点关联商品标题',
  `buy_url` varchar(512) NULL COMMENT '锚点关联商品购买链接',
  `pic_url` varchar(512) NULL COMMENT '锚点关联商品主图url',
  `price` double NULL COMMENT '锚点关联商品价格',
  `features` varchar(512) NULL COMMENT '扩展属性，主要包含坐标信息等',
  `class_id` int(10) unsigned NULL COMMENT '行业id',
  `biz_type` int(10) unsigned NULL COMMENT '业务id',
  `user_id` bigint(20) unsigned NULL COMMENT '锚点用户id',
  `owner_id` bigint(20) unsigned NULL COMMENT '内容所有者id',
  `status` int(11) NULL COMMENT '锚点状态',
  PRIMARY KEY (`id`), KEY `content` (`class_id`,`biz_type`,`content_id`),KEY `user_anchor` (`class_id`,`biz_type`,`user_id`),KEY `owner_anchor` (`class_id`,`biz_type`,`owner_id`)
  ) AUTO_INCREMENT=20270 COMMENT='锚点信息表';

insert into anchor(id,user_id,class_id,content_id,biz_type,owner_id,item_name,buy_url,pic_url) values
  (0,0,1,0,1,0,'test_item_name','test_buy_url','test_pic_url'),
  (1,1,1,1,1,0,'test_item_name','test_buy_url','test_pic_url'),
  (2,0,1,2,2,0,'test_item_name','test_buy_url','test_pic_url'),
  (3,1,1,3,2,1,'test_item_name','test_buy_url','test_pic_url'),
  (4,0,1,4,3,1,'test_item_name','test_buy_url','test_pic_url'),
  (5,1,1,5,3,1,'test_item_name','test_buy_url','test_pic_url');

CREATE TABLE `content_item` (
  `id` bigint(20) unsigned  AUTO_INCREMENT COMMENT '主键',
  `gmt_create` datetime NULL COMMENT '创建时间',
  `gmt_modified` datetime NULL COMMENT '修改时间',
  `group_id` bigint(20) unsigned     DEFAULT NULL COMMENT '专辑id',
  `app_content_id` bigint(20) unsigned NULL COMMENT '内容id',
  `order_id` bigint(20) unsigned DEFAULT NULL COMMENT '订单id',
  `item_type` int(11) DEFAULT NULL COMMENT '3:tmall 4:taobao',
  `buy_url` varchar(256) DEFAULT NULL COMMENT '购买地址',
  `item_id` bigint(20) unsigned NULL COMMENT '商品id',
  `item_price` bigint(20) unsigned DEFAULT NULL COMMENT '商品价格',
  `item_quantity` bigint(20) unsigned DEFAULT NULL COMMENT '商品数量',
   `pic_url` varchar(256) DEFAULT NULL COMMENT '商品主图',
   `category_id` bigint(20) unsigned DEFAULT NULL COMMENT '类目id',
   `seller_id` bigint(20) unsigned DEFAULT NULL COMMENT '卖家id',
   `online` int(11) DEFAULT NULL COMMENT '商品是否在售，1在售，0非在售',
   `status` int(11) NULL COMMENT '0 正常 -1 删除',
   `category_level2` bigint(20) unsigned DEFAULT NULL COMMENT '商品所属二级类目',
   `item_name` varchar(128) DEFAULT NULL COMMENT '商品标题',
   `feature` varchar(2048) DEFAULT NULL COMMENT '扩展字段，json格式',
   `user_id` bigint(20) unsigned DEFAULT '0' COMMENT '用户ID',
   `class_id` int(11) DEFAULT '0' COMMENT '行业ID',
   `biz_type` int(11) DEFAULT '0' COMMENT '产品ID',
   `app_key` varchar(128) DEFAULT NULL COMMENT '应用key',
   `biz_key` varchar(128) DEFAULT NULL COMMENT '接入业务的key',
   `app_type` int(11) DEFAULT NULL COMMENT '接入业务的类型',
   PRIMARY KEY (`id`),
   KEY `ind_st_ap` (`status`,`app_content_id`),  
   KEY `ind_gr_st` (`group_id`,`status`),  
   KEY `ind_item` (`item_id`),
   KEY `ind_us_bi_cl` (`user_id`,`class_id`,`biz_type`),  
   KEY `ind_ap` (`app_content_id`),  
   KEY `ind_class` (`class_id`,`status`),  
   KEY `ind_time`(`biz_type`,`status`,`gmt_modified`)
   ) AUTO_INCREMENT=19587891908 COMMENT='行业社区内容关联商品表';

insert into content_item(id,user_id,class_id,group_id,biz_type,app_content_id,buy_url,status) values
  (0,0,1,0,1,0,'test_buy_url',0),
  (1,1,1,1,1,1,'test_buy_url',0),
  (2,0,1,2,2,2,'test_buy_url',0),
  (3,1,1,3,2,3,'test_buy_url',0),
  (4,0,1,4,3,4,'test_buy_url',0),
  (5,1,1,5,3,5,'test_buy_url',0);

CREATE TABLE `user_record` (
  `id` bigint(20) unsigned AUTO_INCREMENT COMMENT '主键',
  `gmt_create` datetime NULL COMMENT '创建时间',
  `gmt_modified` datetime NULL COMMENT '修改时间',
  `class_id` int(10) unsigned NULL COMMENT '行业类型',
  `biz_type` int(10) unsigned NULL COMMENT '业务类型',
  `status` int(11) NULL COMMENT '行为状态',
  `content_id` bigint(20) unsigned NULL COMMENT '内容id',
  `group_id` bigint(20) unsigned DEFAULT NULL COMMENT '专辑id',
  `action_type` int(10) unsigned NULL COMMENT '行为类型',
  `user_id` bigint(20) unsigned NULL COMMENT '用户id',
  `owner_id` bigint(20) unsigned NULL COMMENT '内容拥有者id',
  `order_id` int(11) DEFAULT '0' COMMENT '顺序',
  PRIMARY KEY (`id`), 
  KEY `class_biz` (`biz_type`,`action_type`,`user_id`,`class_id`), 
  KEY `group_idx` (`action_type`,`group_id`), 
  KEY `content_idx` (`action_type`,`content_id`), 
  KEY `order_idx` (`class_id`,`user_id`,`content_id`,`order_id`), 
  KEY `order1_idx` (`content_id`,`group_id`,`class_id`,`biz_type`)
  ) AUTO_INCREMENT=236648 COMMENT='用户行为记录表';

insert into user_record(id,user_id,class_id,group_id,biz_type,content_id,status) values
  (0,0,1,0,1,0,0),
  (1,1,1,1,1,1,0),
  (2,0,1,2,2,2,0),
  (3,1,1,3,2,3,0),
  (4,0,1,4,3,4,0),
  (5,1,1,5,3,5,0);

CREATE TABLE `content_count` ( 
  `id` bigint(20) unsigned COMMENT '内容 or 专辑 id', 
  `gmt_create` datetime NULL COMMENT '创建时间', 
  `gmt_modified` datetime NULL COMMENT '修改时间', 
  `type` int(11) COMMENT '1：内容 2：专辑', 
  `browse_count` bigint(20) unsigned DEFAULT '0' COMMENT '浏览数', 
  `like_count` bigint(20) unsigned DEFAULT '0' COMMENT '喜欢数', 
  `share_count` bigint(20) unsigned DEFAULT '0' COMMENT '分享数', 
  `comment_count` bigint(20) unsigned DEFAULT '0' COMMENT '评论数', 
  `last_comment_time` datetime DEFAULT NULL COMMENT '最后评论时间',
  PRIMARY KEY (`id`,`type`), KEY `ind_type` (`type`,`last_comment_time`)
  ) COMMENT='行业社区内容互动统计表';

insert into content_count(id,type,browse_count,like_count,share_count,comment_count) values
  (0,0,1,0,1,0),
  (1,1,1,1,1,0),
  (2,0,1,2,2,0),
  (3,1,1,3,2,0),
  (4,0,1,4,3,0),
  (5,1,1,5,3,0);

#SELECT b.title, b.id, c.buy_url, b.summary, c.pic_url, c.item_price, c.item_id, c.item_quantity 
#  FROM user_record a 
#  LEFT JOIN app_content b ON a.content_id = b.id 
#  LEFT JOIN content_item c ON b.id = c.app_content_id 
#  WHERE a.class_id = 1 AND a.biz_type IN (1,2,3) AND a.status = 0 AND b.status != -1 AND c.status != -1 AND a.group_id IN (0,1,2,3,4,5) AND (a.user_id = 0 or a.user_id=1);

SELECT a.class_id, a.item_id, MAX(a.gmt_create) AS importtime FROM 
  content_item a 
  LEFT JOIN app_content b ON a.app_content_id = b.id 
  WHERE b.status = 0 AND a.status = 0 AND a.item_id != -1 AND a.class_id != -1 AND b.biz_type = 1 AND (a.gmt_modified IS NULL OR a.gmt_modified IS NOT NULL) GROUP BY a.class_id, a.item_id;

SELECT COUNT(*) 
  FROM app_content a 
  LEFT JOIN content_item b ON a.id = b.app_content_id 
  WHERE a.class_id = 1 AND a.biz_type = 2 AND a.status != -1 AND b.status = 0 AND a.user_id = 0;

SELECT content.* 
  FROM app_content content 
  JOIN anchor anchors ON anchors.content_id = content.id 
  WHERE anchors.status = 0 GROUP BY content.content_id LIMIT 100, 1;

SELECT b.title, b.id, c.buy_url, b.summary, c.pic_url , c.item_price, c.item_id, c.item_quantity 
  FROM user_record a 
  LEFT JOIN app_content b ON a.content_id = b.id 
  LEFT JOIN content_item c ON b.id = c.app_content_id 
  WHERE a.class_id = 1 AND (a.biz_type = 1 OR a.biz_type = 2 OR a.biz_type = 3)
    AND a.status = 0 AND b.status != -1 AND c.status != -1 AND a.group_id BETWEEN 0 and 5 AND (a.action_type = 0 OR a.action_type IS NULL) AND a.user_id BETWEEN 0 and 1 
    LIMIT 6, 0;

SELECT a.summary, a.title, a.id, b.buy_url, b.pic_url , b.item_price, b.item_id, b.item_quantity 
  FROM app_content a 
  LEFT JOIN content_item b ON a.id = b.app_content_id 
  WHERE a.class_id = 1 AND a.biz_type =1  AND a.user_id = 0 AND a.title LIKE concat('test', '_', 'title') AND a.status != -1 AND b.status != -1 AND 
    a.id NOT IN (SELECT content_id FROM user_record WHERE group_id BETWEEN 0 and 5  AND (action_type = 0 OR action_type IS NULL) AND status = 0 AND class_id = 1 AND biz_type > 0) 
    LIMIT 6, 1;

SELECT COUNT(*) 
  FROM user_record a 
  LEFT JOIN app_content b ON a.content_id = b.id 
  WHERE a.class_id = 1 AND a.biz_type >= 1 AND a.biz_type <=3 AND a.status = 1 AND b.status != -1 AND a.group_id IS NOT NULL AND a.user_id = 0;

SELECT COUNT(*) 
  FROM app_content a 
  LEFT JOIN content_item b ON a.id = b.app_content_id 
  WHERE a.class_id = 1 AND a.biz_type =1  AND a.user_id = 0 AND a.title LIKE concat('test', '_', 'title') AND a.status != -1 AND b.status != -1 AND 
    a.id NOT IN (SELECT content_id FROM user_record WHERE group_id BETWEEN 0 and 5  AND (action_type = 0 OR action_type IS NULL) AND status = 0 AND class_id = 1 AND biz_type >= 0 AND biz_type<=3);

SELECT a.class_id, a.item_id, MAX(a.gmt_create) AS importtime 
  FROM content_item a 
  LEFT JOIN app_content b ON a.app_content_id = b.id 
  WHERE b.status = 0 AND a.status = 0 AND a.item_id != -1 AND a.class_id != -1 AND b.biz_type != 0 
  GROUP BY a.class_id, a.item_id;

SELECT SUM(browse_count) AS browse_count, SUM(like_count) AS like_count, SUM(share_count) AS share_count, SUM(comment_count) AS comment_count 
  FROM app_content a 
  LEFT JOIN content_count b ON a.id = b.id 
  WHERE user_id = 0 AND class_id = 1 AND biz_type = 1 AND status = 0;

SELECT b.title, b.id, c.buy_url, b.summary, c.pic_url , c.item_price, c.item_id, c.item_quantity 
  FROM user_record a 
  LEFT JOIN app_content b ON a.content_id = b.id 
  LEFT JOIN content_item c ON b.id = c.app_content_id 
  WHERE a.class_id = 1 AND a.biz_type = 2 AND a.status = 0 AND b.status != -1 AND c.status != -1 AND a.group_id != -1 AND a.action_type != -1 AND (a.user_id = 0 OR a.user_id = 1)   
  LIMIT 3, 0;

SELECT COUNT(*) 
  FROM app_content a 
  LEFT JOIN content_item b ON a.id = b.app_content_id 
  WHERE a.class_id = 1 AND a.biz_type IN (1,2,3)  AND a.status != -1 AND b.status = 0 AND a.user_id != -1 AND (b.item_id = 0 OR b.item_id IS NULL);

--disable_warnings
DROP TABLE IF EXISTS app_content,content_item,anchor,user_record,content_count;
--enable_warnings

##### from tb_imagesearch.txt 
## is_provider_service_detail
## is_provider_service
## is_provider_server
--disable_warnings
drop table if exists is_provider_service_detail,is_provider_service,is_provider_server;
--enable_warnings

create table is_provider_service_detail(
  id bigint(20) comment '主键',
  gmt_create datetime(6) comment '创建时间',
  gmt_modified datetime(6) comment '修改时间',
  service_id bigint(20) comment '服务ID',
  server_id bigint(20) comment '主机ID',
  client_port int(11) comment 'client端口',
  thrift_port int(11) comment 'thrift端口',
  client_pid int(11) comment 'client PID',
  thrift_pid int(11) comment 'thrift ID',
  status int(11) comment '运行状况',
  primary key(id), key service_process_idx(service_id,server_id,client_port)) comment 'NO_THING';

insert into is_provider_service_detail(id,service_id,server_id,client_port,status) values
  (0,0,0,0,1),
  (1,0,1,0,1),
  (2,1,0,1,1),
  (3,1,1,1,1);

create table is_provider_service(
  id bigint(20) comment '主键',
  gmt_create datetime(6) comment '创建时间',
  gmt_modified datetime(6) comment '修改时间',
  service_name varchar(64) comment '服务名称',
  comment varchar(64) comment '注释',
  algorithm_id bigint(20) unsigned comment '算法ID',
  lib_id bigint(20) unsigned comment '关联Lib',
  opt_type int(11) comment '操作类型',
  exec_conf varchar(64) comment '执行配置',
  service_id  bigint(20) unsigned comment '关联服务ID',
  primary key(id), key name_idx(service_name,service_id), key service_algorithm_lib_idx(algorithm_id,lib_id)) comment 'NO_THING';

insert into is_provider_service(id,service_id,algorithm_id,lib_id) values
  (0,0,0,0),
  (1,0,1,0),
  (2,1,0,1),
  (3,1,1,1);

create table is_provider_server(
  id bigint(20) comment '主键',
  gmt_create datetime(6) comment '创建时间', 
  gmt_modified datetime(6) comment '修改时间',
  ip varchar(20) comment 'IP地址',
  conf varchar(512) comment '主机配置，json格式', 
  server_name varchar(64) comment '主机名', 
  type int(11) comment '机器类型，0:CPU, 1:GPU', 
  env int(11) comment '机器所处环境，0：daily,1:pre,2:online', 
  primary key(id), Unique key ip_idx(ip), key query_idx(server_name, ip)) comment 'NO_THING';

insert into is_provider_server(id,ip,type,env) values
  (0,0,0,0),
  (1,1,1,0),
  (2,2,0,1),
  (3,3,1,1);

SELECT d.id AS id, d.gmt_create AS gmt_create, d.gmt_modified AS gmt_modified, d.service_id AS service_id, d.server_id AS server_id , d.client_port AS client_port, d.client_pid AS client_pid, d.status AS status, se.id AS se_id, se.ip AS se_ip , se.server_name AS se_server_name, sv.id AS sv_id, sv.service_name AS sv_service_name, sv.exec_conf AS sv_exec_conf, sv.algorithm_id AS sv_algorithm_id , sv.lib_id AS sv_lib_id FROM `is_provider_service_detail` d LEFT JOIN `is_provider_service` sv ON sv.id = d.service_id LEFT JOIN `is_provider_server` se ON se.id = d.server_id WHERE `status` = 1 ORDER BY id;

SELECT d.id AS id, d.gmt_create AS gmt_create, d.gmt_modified AS gmt_modified, d.service_id AS service_id, d.server_id AS server_id , d.client_port AS client_port, d.client_pid AS client_pid, d.status AS status, se.id AS se_id, se.ip AS se_ip , se.server_name AS se_server_name, sv.id AS sv_id, sv.service_name AS sv_service_name, sv.exec_conf AS sv_exec_conf, sv.algorithm_id AS sv_algorithm_id , sv.lib_id AS sv_lib_id FROM `is_provider_service_detail` d LEFT JOIN `is_provider_service` sv ON sv.id = d.service_id LEFT JOIN `is_provider_server` se ON se.id = d.server_id WHERE (d.server_id = 0 OR d.service_id = 1) AND (d.client_port = 0 OR d.client_port = 1) ORDER BY id;

--disable_warnings
drop table if exists is_provider_service_detail,is_provider_service,is_provider_server;
--enable_warnings
