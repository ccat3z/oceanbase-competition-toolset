drop table if exists t1,t2,t3,t4,t;
create table t1 (pk int primary key, c1 int);
create table t2 (pk int primary key, c1 int);
create table t3 (pk int primary key, c1 int);
create table t4 (pk int primary key, c1 int);
explain_protocol: 0
result_format: 4
## right-deep tree
select /*+leading(t1 t2 t3)*/ t1.c1, t2.c1, t3.c1 from t1, t2, t3 where t1.pk = t2.pk and t2.pk = t3.pk;
+------+------+------+
| c1   | c1   | c1   |
+------+------+------+
|    1 |    1 |    1 |
|    2 |    2 |    2 |
|    3 |    3 |    3 |
+------+------+------+
select /*+leading(t1 t2 t3), USE_PX parallel(2)*/ t1.c1, t2.c1, t3.c1 from t1, t2, t3 where t1.pk = t2.pk and t2.pk = t3.pk;
+------+------+------+
| c1   | c1   | c1   |
+------+------+------+
|    1 |    1 |    1 |
|    2 |    2 |    2 |
|    3 |    3 |    3 |
+------+------+------+

select /*+leading(t1 t2 t3 t4)*/ t1.c1, t2.c1, t3.c1, t4.c1 from t1, t2, t3, t4 where t1.pk = t2.pk and t3.pk = t4.pk and t2.pk = t3.pk;
+------+------+------+------+
| c1   | c1   | c1   | c1   |
+------+------+------+------+
|    1 |    1 |    1 |    1 |
|    2 |    2 |    2 |    2 |
|    3 |    3 |    3 |    3 |
+------+------+------+------+
select /*+leading(t1 t2 t3 t4), USE_PX parallel(2)*/ t1.c1, t2.c1, t3.c1, t4.c1 from t1, t2, t3, t4 where t1.pk = t2.pk and t3.pk = t4.pk and t2.pk = t3.pk;
+------+------+------+------+
| c1   | c1   | c1   | c1   |
+------+------+------+------+
|    1 |    1 |    1 |    1 |
|    2 |    2 |    2 |    2 |
|    3 |    3 |    3 |    3 |
+------+------+------+------+

## semi join
select * from (select max(t1.c1 + t2.c1) as a from t1, t2 where t1.pk =t2.pk) subq where subq.a >any (select t3.c1 + t4.c1 from t3, t4 where t3.pk = t4.pk);
+------+
| a    |
+------+
|    6 |
+------+
select /*+USE_PX parallel(2)*/ * from (select max(t1.c1 + t2.c1) as a from t1, t2 where t1.pk =t2.pk) subq where subq.a >any (select t3.c1 + t4.c1 from t3, t4 where t3.pk = t4.pk);
+------+
| a    |
+------+
|    6 |
+------+

## anti join
select * from (select max(t1.c1 + t2.c1) as a from t1, t2 where t1.pk =t2.pk) subq where subq.a >all (select t3.c1 + t4.c1 from t3, t4 where t3.pk = t4.pk);
+------+
| a    |
+------+
+------+
select /*+USE_PX parallel(2)*/ * from (select max(t1.c1 + t2.c1) as a from t1, t2 where t1.pk =t2.pk) subq where subq.a >all (select t3.c1 + t4.c1 from t3, t4 where t3.pk = t4.pk);
+------+
| a    |
+------+
+------+

##bushy
select /*+leading((t1 t2) (t3 t4))*/ t1.c1, t2.c1, t3.c1, t4.c1 from t1, t2, t3, t4 where t1.pk = t2.pk and t3.pk = t4.pk and t2.pk = t3.pk;
+------+------+------+------+
| c1   | c1   | c1   | c1   |
+------+------+------+------+
|    1 |    1 |    1 |    1 |
|    2 |    2 |    2 |    2 |
|    3 |    3 |    3 |    3 |
+------+------+------+------+
select /*+USE_PX parallel(2), leading((t1 t2) (t3 t4))*/ t1.c1, t2.c1, t3.c1, t4.c1 from t1, t2, t3, t4 where t1.pk = t2.pk and t3.pk = t4.pk and t2.pk = t3.pk;
+------+------+------+------+
| c1   | c1   | c1   | c1   |
+------+------+------+------+
|    1 |    1 |    1 |    1 |
|    2 |    2 |    2 |    2 |
|    3 |    3 |    3 |    3 |
+------+------+------+------+

## union
select * from ((select t1.c1 as a, t2.c1 as b from t1, t2 where t1.pk = t2.pk order by t1.c1 limit 2) union (select t3.c1 as a, t4.c1 as b from t3, t4 where t3.pk = t4.pk order by t3.c1 limit 2));
+------+------+
| a    | b    |
+------+------+
|    1 |    1 |
|    2 |    2 |
+------+------+
select /*+USE_PX parallel(2)*/ * from ((select t1.c1 as a, t2.c1 as b from t1, t2 where t1.pk = t2.pk order by t1.c1 limit 2) union (select t3.c1 as a, t4.c1 as b from t3, t4 where t3.pk = t4.pk order by t3.c1 limit 2));
+------+------+
| a    | b    |
+------+------+
|    1 |    1 |
|    2 |    2 |
+------+------+

## subplan filter
select * from (select t1.c1 as a, t2.c1 as b from t1, t2 where t1.pk =t2.pk) subq where subq.a > (select count(*) from t3, t4 where t3.pk = t4.pk);
+------+------+
| a    | b    |
+------+------+
+------+------+
select /*+USE_PX parallel(2)*/ * from (select t1.c1 as a, t2.c1 as b from t1, t2 where t1.pk =t2.pk) subq where subq.a > (select count(*) from t3, t4 where t3.pk = t4.pk);
+------+------+
| a    | b    |
+------+------+
+------+------+

## insert into select with right-deep tree
create table t(c1 int, c2 int, c3 int, c4 int);
insert into t select /*+leading(t1 t2 t3 t4)*/ t1.c1, t2.c1, t3.c1, t4.c1 from t1, t2, t3, t4 where t1.pk = t2.pk and t3.pk = t4.pk and t2.pk = t3.pk;
select/**/ * from t;
+------+------+------+------+
| c1   | c2   | c3   | c4   |
+------+------+------+------+
|    1 |    1 |    1 |    1 |
|    2 |    2 |    2 |    2 |
|    3 |    3 |    3 |    3 |
+------+------+------+------+

insert into t select /*+USE_PX parallel(2), leading(t1 t2 t3 t4)*/ t1.c1, t2.c1, t3.c1, t4.c1 from t1, t2, t3, t4 where t1.pk = t2.pk and t3.pk = t4.pk and t2.pk = t3.pk;
select/**/ * from t;
+------+------+------+------+
| c1   | c2   | c3   | c4   |
+------+------+------+------+
|    1 |    1 |    1 |    1 |
|    2 |    2 |    2 |    2 |
|    3 |    3 |    3 |    3 |
+------+------+------+------+

## insert into select with bushy tree
insert into t select /*+leading((t1 t2) (t3 t4))*/ t1.c1, t2.c1, t3.c1, t4.c1 from t1, t2, t3, t4 where t1.pk = t2.pk and t3.pk = t4.pk and t2.pk = t3.pk;
select/**/ * from t;
+------+------+------+------+
| c1   | c2   | c3   | c4   |
+------+------+------+------+
|    1 |    1 |    1 |    1 |
|    2 |    2 |    2 |    2 |
|    3 |    3 |    3 |    3 |
+------+------+------+------+

## bushy tree case
drop table t1,t2,t3,t4;
create table t1(c1 int primary key, c2 int) partition by hash (c1) partitions 5;
create table t2(c1 int primary key, c2 int) partition by hash (c1) partitions 6;
create table t3(c1 int primary key, c2 int) partition by hash (c1) partitions 7;
create table t4(c1 int primary key, c2 int) partition by hash (c1) partitions 8;

select /*+parallel(3) pq_distribute(t2 hash hash) pq_distribute(t4 hash hash)*/ * from t1,t2 where t1.c1=t2.c1 union all
select /*+parallel(3) pq_distribute(t2 hash hash) pq_distribute(t4 hash hash)*/ * from t3,t4 where t3.c1=t4.c1 union all
select /*+parallel(3) pq_distribute(t3 hash hash)*/ * from t1,t3 where t1.c1=t3.c1;
+----+------+----+------+
| c1 | c2   | c1 | c2   |
+----+------+----+------+
|  1 |    1 |  1 |    1 |
|  1 |    1 |  1 |    1 |
|  1 |    1 |  1 |    1 |
|  2 |    2 |  2 |    2 |
|  2 |    2 |  2 |    2 |
|  2 |    2 |  2 |    2 |
|  3 |    3 |  3 |    3 |
|  3 |    3 |  3 |    3 |
|  3 |    3 |  3 |    3 |
+----+------+----+------+

select /*+parallel(3) pq_distribute(t2 hash hash) pq_distribute(t4 hash hash)*/ * from t1,t2 where t1.c1=t2.c1 union all
select /*+parallel(3) pq_distribute(t2 hash hash) pq_distribute(t4 hash hash)*/ * from t3,t4 where t3.c1=t4.c1;
+----+------+----+------+
| c1 | c2   | c1 | c2   |
+----+------+----+------+
|  1 |    1 |  1 |    1 |
|  1 |    1 |  1 |    1 |
|  2 |    2 |  2 |    2 |
|  2 |    2 |  2 |    2 |
|  3 |    3 |  3 |    3 |
|  3 |    3 |  3 |    3 |
+----+------+----+------+

drop table t1,t2,t3,t4,t;
